/*
   This file has been generated by IDA Pro.
   It contains local type definitions from
     Q:\RF\G4SDK\RF_Bin\ZoneServer.idb
*/

/*    1 */
enum CMainThread::__unnamed
{
  max_lock_chat = 0x3E8,
};

/*    2 */
enum CHolyStoneSystem::__unnamed
{
  std_user_num = 0x5DC,
};

/*    3 */
enum CHolyStoneSystem::DESTROYER_STATE
{
  DS_FAILED = 0x0,
  DS_ARRIVE = 0x1,
  DS_SET = 0x2,
  DS_NONE = 0x3,
};

/*    4 */
enum CWorldSchedule::__unnamed
{
  event_code_ship = 0x0,
  event_code_holy = 0x1,
};

/*    5 */
enum _starting_vote_inform_zocl::__unnamed
{
  content_size = 0x500,
};

/*    6 */
enum AREA_TYPE
{
  at_dummy = 0x0,
  at_block = 0x1,
  at_none = 0x2,
};

/*    7 */
enum EM_DH_EVENT
{
  dh_event_take = 0x0,
  dh_event_hunt = 0x1,
};

/*    8 */
enum _darkhole_quest_info_inform_zocl::__unnamed
{
  max_reward_item = 0x64,
};

/*    9 */
enum _darkhole_mission_info_inform_zocl::__unnamed
{
  max_job_num = 0x80,
};

/*   10 */
typedef _darkhole_mission_info_inform_zocl::__unnamed _darkhole_new_mission_inform_zocl::__unnamed;

/*   11 */
enum CMgrAvatorItemHistory::__unnamed
{
  LOG_SIZE_10K = 0x2710,
  LOG_SIZE_1K = 0x3E8,
  LOG_SIZE_200 = 0xC8,
};

/*   12 */
enum CGameStatistics::__unnamed
{
  max_map = 0x64,
};

/*   13 */
enum CMgrGuildHistory::__unnamed
{
  LOG_SIZE = 0x12C,
};

/*   14 */
enum BasicType
{
  btNoType = 0x0,
  btVoid = 0x1,
  btChar = 0x2,
  btWChar = 0x3,
  btInt = 0x6,
  btUInt = 0x7,
  btFloat = 0x8,
  btBCD = 0x9,
  btBool = 0xA,
  btLong = 0xD,
  btULong = 0xE,
  btCurrency = 0x19,
  btDate = 0x1A,
  btVariant = 0x1B,
  btComplex = 0x1C,
  btBit = 0x1D,
  btBSTR = 0x1E,
  btHresult = 0x1F,
};

/*   15 */
enum TIMER_COMMAND
{
  TIMER_RESET = 0x0,
  TIMER_START = 0x1,
  TIMER_STOP = 0x2,
  TIMER_ADVANCE = 0x3,
  TIMER_GETABSOLUTETIME = 0x4,
  TIMER_GETAPPTIME = 0x5,
  TIMER_GETELAPSEDTIME = 0x6,
};

/*   16 */
enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 0x1,
  JobObjectBasicLimitInformation = 0x2,
  JobObjectBasicProcessIdList = 0x3,
  JobObjectBasicUIRestrictions = 0x4,
  JobObjectSecurityLimitInformation = 0x5,
  JobObjectEndOfJobTimeInformation = 0x6,
  JobObjectAssociateCompletionPortInformation = 0x7,
  MaxJobObjectInfoClass = 0x8,
};

/*   17 */
enum tagTYMED
{
  TYMED_HGLOBAL = 0x1,
  TYMED_FILE = 0x2,
  TYMED_ISTREAM = 0x4,
  TYMED_ISTORAGE = 0x8,
  TYMED_GDI = 0x10,
  TYMED_MFPICT = 0x20,
  TYMED_ENHMF = 0x40,
  TYMED_NULL = 0x0,
};

/*   18 */
enum $9FF73E7851F502F03F84204CED385180
{
  DBID_BANDINFOCHANGED = 0x0,
  DBID_SHOWONLY = 0x1,
  DBID_MAXIMIZEBAND = 0x2,
};

/*   19 */
enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 0x1,
  FileSystemType = 0x2,
  Win32ServiceOwnProcess = 0x10,
  Win32ServiceShareProcess = 0x20,
  AdapterType = 0x4,
  RecognizerType = 0x8,
};

/*   20 */
enum OLECMDF
{
  OLECMDF_SUPPORTED = 0x1,
  OLECMDF_ENABLED = 0x2,
  OLECMDF_LATCHED = 0x4,
  OLECMDF_NINCHED = 0x8,
};

/*   21 */
enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0x0,
  SystemLoad = 0x1,
  AutoLoad = 0x2,
  DemandLoad = 0x3,
  DisableLoad = 0x4,
};

/*   22 */
enum tagBINDSPEED
{
  BINDSPEED_INDEFINITE = 0x1,
  BINDSPEED_MODERATE = 0x2,
  BINDSPEED_IMMEDIATE = 0x3,
};

/*   23 */
enum tagCHANGEKIND
{
  CHANGEKIND_ADDMEMBER = 0x0,
  CHANGEKIND_DELETEMEMBER = 0x1,
  CHANGEKIND_SETNAMES = 0x2,
  CHANGEKIND_SETDOCUMENTATION = 0x3,
  CHANGEKIND_GENERAL = 0x4,
  CHANGEKIND_INVALIDATE = 0x5,
  CHANGEKIND_CHANGEFAILED = 0x6,
  CHANGEKIND_MAX = 0x7,
};

/*   24 */
enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0x0,
  NormalError = 0x1,
  SevereError = 0x2,
  CriticalError = 0x3,
};

/*   25 */
enum tagOLECONTF
{
  OLECONTF_EMBEDDINGS = 0x1,
  OLECONTF_LINKS = 0x2,
  OLECONTF_OTHERS = 0x4,
  OLECONTF_ONLYUSER = 0x8,
  OLECONTF_ONLYIFRUNNING = 0x10,
};

/*   26 */
enum FD_FLAGS
{
  FD_CLSID = 0x1,
  FD_SIZEPOINT = 0x2,
  FD_ATTRIBUTES = 0x4,
  FD_CREATETIME = 0x8,
  FD_ACCESSTIME = 0x10,
  FD_WRITESTIME = 0x20,
  FD_FILESIZE = 0x40,
  FD_LINKUI = 0x8000,
};

/*   27 */
enum AFX_DISPMAP_FLAGS
{
  afxDispCustom = 0x0,
  afxDispStock = 0x1,
};

/*   28 */
enum __MIDL_ICodeInstall_0001
{
  CIP_DISK_FULL = 0x0,
  CIP_ACCESS_DENIED = 0x1,
  CIP_NEWER_VERSION_EXISTS = 0x2,
  CIP_OLDER_VERSION_EXISTS = 0x3,
  CIP_NAME_CONFLICT = 0x4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 0x5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 0x6,
  CIP_UNSAFE_TO_ABORT = 0x7,
  CIP_NEED_REBOOT = 0x8,
};

/*   29 */
enum OLECMDTEXTF
{
  OLECMDTEXTF_NONE = 0x0,
  OLECMDTEXTF_NAME = 0x1,
  OLECMDTEXTF_STATUS = 0x2,
};

/*   30 */
enum OLECMDEXECOPT
{
  OLECMDEXECOPT_DODEFAULT = 0x0,
  OLECMDEXECOPT_PROMPTUSER = 0x1,
  OLECMDEXECOPT_DONTPROMPTUSER = 0x2,
  OLECMDEXECOPT_SHOWHELP = 0x3,
};

/*   31 */
enum OLECMDID
{
  OLECMDID_OPEN = 0x1,
  OLECMDID_NEW = 0x2,
  OLECMDID_SAVE = 0x3,
  OLECMDID_SAVEAS = 0x4,
  OLECMDID_SAVECOPYAS = 0x5,
  OLECMDID_PRINT = 0x6,
  OLECMDID_PRINTPREVIEW = 0x7,
  OLECMDID_PAGESETUP = 0x8,
  OLECMDID_SPELL = 0x9,
  OLECMDID_PROPERTIES = 0xA,
  OLECMDID_CUT = 0xB,
  OLECMDID_COPY = 0xC,
  OLECMDID_PASTE = 0xD,
  OLECMDID_PASTESPECIAL = 0xE,
  OLECMDID_UNDO = 0xF,
  OLECMDID_REDO = 0x10,
  OLECMDID_SELECTALL = 0x11,
  OLECMDID_CLEARSELECTION = 0x12,
  OLECMDID_ZOOM = 0x13,
  OLECMDID_GETZOOMRANGE = 0x14,
  OLECMDID_UPDATECOMMANDS = 0x15,
  OLECMDID_REFRESH = 0x16,
  OLECMDID_STOP = 0x17,
  OLECMDID_HIDETOOLBARS = 0x18,
  OLECMDID_SETPROGRESSMAX = 0x19,
  OLECMDID_SETPROGRESSPOS = 0x1A,
  OLECMDID_SETPROGRESSTEXT = 0x1B,
  OLECMDID_SETTITLE = 0x1C,
  OLECMDID_SETDOWNLOADSTATE = 0x1D,
  OLECMDID_STOPDOWNLOAD = 0x1E,
  OLECMDID_ONTOOLBARACTIVATED = 0x1F,
  OLECMDID_FIND = 0x20,
  OLECMDID_DELETE = 0x21,
  OLECMDID_HTTPEQUIV = 0x22,
  OLECMDID_HTTPEQUIV_DONE = 0x23,
  OLECMDID_ENABLE_INTERACTION = 0x24,
  OLECMDID_ONUNLOAD = 0x25,
  OLECMDID_PROPERTYBAG2 = 0x26,
  OLECMDID_PREREFRESH = 0x27,
};

/*   32 */
enum DSCSTATE
{
  dscNoState = 0x0,
  dscOKToDo = 0x1,
  dscCancelled = 0x2,
  dscSyncBefore = 0x3,
  dscAboutToDo = 0x4,
  dscFailedToDo = 0x5,
  dscSyncAfter = 0x6,
  dscDidEvent = 0x7,
};

/*   33 */
enum DSCREASON
{
  dscNoReason = 0x0,
  dscClose = 0x1,
  dscCommit = 0x2,
  dscDelete = 0x3,
  dscEdit = 0x4,
  dscInsert = 0x5,
  dscModify = 0x6,
  dscMove = 0x7,
};

/*   34 */
enum __MIDL_IInternetSecurityManager_0001
{
  PUAF_DEFAULT = 0x0,
  PUAF_NOUI = 0x1,
  PUAF_ISFILE = 0x2,
  PUAF_WARN_IF_DENIED = 0x4,
  PUAF_FORCEUI_FOREGROUND = 0x8,
  PUAF_CHECK_TIFS = 0x10,
};

/*   35 */
enum __MIDL_IInternetSecurityManager_0002
{
  SZM_CREATE = 0x0,
  SZM_DELETE = 0x1,
};

/*   36 */
enum tagUASFLAGS
{
  UAS_NORMAL = 0x0,
  UAS_BLOCKED = 0x1,
  UAS_NOPARENTENABLE = 0x2,
  UAS_MASK = 0x3,
};

/*   37 */
enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = 0x0,
  READYSTATE_LOADING = 0x1,
  READYSTATE_LOADED = 0x2,
  READYSTATE_INTERACTIVE = 0x3,
  READYSTATE_COMPLETE = 0x4,
};

/*   38 */
enum tagSTGTY
{
  STGTY_STORAGE = 0x1,
  STGTY_STREAM = 0x2,
  STGTY_LOCKBYTES = 0x3,
  STGTY_PROPERTY = 0x4,
};

/*   39 */
enum tagSTREAM_SEEK
{
  STREAM_SEEK_SET = 0x0,
  STREAM_SEEK_CUR = 0x1,
  STREAM_SEEK_END = 0x2,
};

/*   40 */
enum tagLOCKTYPE
{
  LOCK_WRITE = 0x1,
  LOCK_EXCLUSIVE = 0x2,
  LOCK_ONLYONCE = 0x4,
};

/*   41 */
enum AfxMemDF
{
  allocMemDF = 0x1,
  delayFreeMemDF = 0x2,
  checkAlwaysMemDF = 0x4,
};

/*   42 */
enum OLECMDID_REFRESHFLAG
{
  OLECMDIDF_REFRESH_NORMAL = 0x0,
  OLECMDIDF_REFRESH_IFEXPIRED = 0x1,
  OLECMDIDF_REFRESH_CONTINUE = 0x2,
  OLECMDIDF_REFRESH_COMPLETELY = 0x3,
  OLECMDIDF_REFRESH_NO_CACHE = 0x4,
  OLECMDIDF_REFRESH_RELOAD = 0x5,
  OLECMDIDF_REFRESH_LEVELMASK = 0xFF,
  OLECMDIDF_REFRESH_CLEARUSERINPUT = 0x1000,
  OLECMDIDF_REFRESH_PROMPTIFOFFLINE = 0x2000,
};

/*   43 */
enum OLE_TRISTATE
{
  triUnchecked = 0x0,
  triChecked = 0x1,
  triGray = 0x2,
};

/*   44 */
enum _SID_NAME_USE
{
  SidTypeUser = 0x1,
  SidTypeGroup = 0x2,
  SidTypeDomain = 0x3,
  SidTypeAlias = 0x4,
  SidTypeWellKnownGroup = 0x5,
  SidTypeDeletedAccount = 0x6,
  SidTypeInvalid = 0x7,
  SidTypeUnknown = 0x8,
  SidTypeComputer = 0x9,
};

/*   45 */
enum tagDATADIR
{
  DATADIR_GET = 0x1,
  DATADIR_SET = 0x2,
};

/*   46 */
enum tagTYPEKIND
{
  TKIND_ENUM = 0x0,
  TKIND_RECORD = 0x1,
  TKIND_MODULE = 0x2,
  TKIND_INTERFACE = 0x3,
  TKIND_DISPATCH = 0x4,
  TKIND_COCLASS = 0x5,
  TKIND_ALIAS = 0x6,
  TKIND_UNION = 0x7,
  TKIND_MAX = 0x8,
};

/*   47 */
enum FOLDERFLAGS
{
  FWF_AUTOARRANGE = 0x1,
  FWF_ABBREVIATEDNAMES = 0x2,
  FWF_SNAPTOGRID = 0x4,
  FWF_OWNERDATA = 0x8,
  FWF_BESTFITWINDOW = 0x10,
  FWF_DESKTOP = 0x20,
  FWF_SINGLESEL = 0x40,
  FWF_NOSUBFOLDERS = 0x80,
  FWF_TRANSPARENT = 0x100,
  FWF_NOCLIENTEDGE = 0x200,
  FWF_NOSCROLL = 0x400,
  FWF_ALIGNLEFT = 0x800,
  FWF_NOICONS = 0x1000,
  FWF_SINGLECLICKACTIVATE = 0x8000,
};

/*   48 */
enum tagTextMode
{
  TM_PLAINTEXT = 0x1,
  TM_RICHTEXT = 0x2,
  TM_SINGLELEVELUNDO = 0x4,
  TM_MULTILEVELUNDO = 0x8,
  TM_SINGLECODEPAGE = 0x10,
  TM_MULTICODEPAGE = 0x20,
};

/*   49 */
enum FOLDERVIEWMODE
{
  FVM_ICON = 0x1,
  FVM_SMALLICON = 0x2,
  FVM_LIST = 0x3,
  FVM_DETAILS = 0x4,
};

/*   50 */
enum tagEXTCONN
{
  EXTCONN_STRONG = 0x1,
  EXTCONN_WEAK = 0x2,
  EXTCONN_CALLABLE = 0x4,
};

/*   51 */
enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/*   52 */
enum _RPC_NOTIFICATION_TYPES
{
  RpcNotificationTypeNone = 0x0,
  RpcNotificationTypeEvent = 0x1,
  RpcNotificationTypeApc = 0x2,
  RpcNotificationTypeIoc = 0x3,
  RpcNotificationTypeHwnd = 0x4,
  RpcNotificationTypeCallback = 0x5,
};

/*   53 */
enum _RPC_ASYNC_EVENT
{
  RpcCallComplete = 0x0,
  RpcSendComplete = 0x1,
  RpcReceiveComplete = 0x2,
};

/*   54 */
enum AfxSig
{
  AfxSig_end = 0x0,
  AfxSig_bD = 0x1,
  AfxSig_bb = 0x2,
  AfxSig_bWww = 0x3,
  AfxSig_hDWw = 0x4,
  AfxSig_hDw = 0x5,
  AfxSig_iwWw = 0x6,
  AfxSig_iww = 0x7,
  AfxSig_iWww = 0x8,
  AfxSig_is = 0x9,
  AfxSig_lwl = 0xA,
  AfxSig_lwwM = 0xB,
  AfxSig_vv = 0xC,
  AfxSig_vw = 0xD,
  AfxSig_vww = 0xE,
  AfxSig_vvii = 0xF,
  AfxSig_vwww = 0x10,
  AfxSig_vwii = 0x11,
  AfxSig_vwl = 0x12,
  AfxSig_vbWW = 0x13,
  AfxSig_vD = 0x14,
  AfxSig_vM = 0x15,
  AfxSig_vMwb = 0x16,
  AfxSig_vW = 0x17,
  AfxSig_vWww = 0x18,
  AfxSig_vWp = 0x19,
  AfxSig_vWh = 0x1A,
  AfxSig_vwW = 0x1B,
  AfxSig_vwWb = 0x1C,
  AfxSig_vwwW = 0x1D,
  AfxSig_vwwx = 0x1E,
  AfxSig_vs = 0x1F,
  AfxSig_vOWNER = 0x20,
  AfxSig_iis = 0x21,
  AfxSig_wp = 0x22,
  AfxSig_wv = 0x23,
  AfxSig_vPOS = 0x24,
  AfxSig_vCALC = 0x25,
  AfxSig_vNMHDRpl = 0x26,
  AfxSig_bNMHDRpl = 0x27,
  AfxSig_vwNMHDRpl = 0x28,
  AfxSig_bwNMHDRpl = 0x29,
  AfxSig_bHELPINFO = 0x2A,
  AfxSig_vwSIZING = 0x2B,
  AfxSig_cmdui = 0x2C,
  AfxSig_cmduiw = 0x2D,
  AfxSig_vpv = 0x2E,
  AfxSig_bpv = 0x2F,
  AfxSig_vwwh = 0x30,
  AfxSig_vwp = 0x31,
  AfxSig_bw = 0x2,
  AfxSig_bh = 0x2,
  AfxSig_iw = 0x2,
  AfxSig_ww = 0x2,
  AfxSig_bv = 0x23,
  AfxSig_hv = 0x23,
  AfxSig_vb = 0xD,
  AfxSig_vbh = 0xE,
  AfxSig_vbw = 0xE,
  AfxSig_vhh = 0xE,
  AfxSig_vh = 0xD,
  AfxSig_viSS = 0x12,
  AfxSig_bwl = 0xA,
  AfxSig_vwMOVING = 0x2B,
  AfxSig_vW2 = 0x2C,
  AfxSig_bWCDS = 0x2D,
  AfxSig_bwsp = 0x2E,
  AfxSig_vws = 0x2F,
};

/*   55 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/*   56 */
enum CommandStateChangeConstants
{
  CSC_UPDATECOMMANDS = 0xFFFFFFFF,
  CSC_NAVIGATEFORWARD = 0x1,
  CSC_NAVIGATEBACK = 0x2,
};

/*   57 */
enum ShellWindowTypeConstants
{
  SWC_EXPLORER = 0x0,
  SWC_BROWSER = 0x1,
  SWC_3RDPARTY = 0x2,
  SWC_CALLBACK = 0x4,
};

/*   58 */
enum ShellWindowFindWindowOptions
{
  SWFO_NEEDDISPATCH = 0x1,
  SWFO_INCLUDEPENDING = 0x2,
  SWFO_COOKIEPASSED = 0x4,
};

/*   59 */
enum ShellFolderViewOptions
{
  SFVVO_SHOWALLOBJECTS = 0x1,
  SFVVO_SHOWEXTENSIONS = 0x2,
  SFVVO_SHOWCOMPCOLOR = 0x8,
  SFVVO_SHOWSYSFILES = 0x20,
  SFVVO_WIN95CLASSIC = 0x40,
  SFVVO_DOUBLECLICKINWEBVIEW = 0x80,
  SFVVO_DESKTOPHTML = 0x200,
};

/*   60 */
enum ShellSpecialFolderConstants
{
  ssfDESKTOP = 0x0,
  ssfPROGRAMS = 0x2,
  ssfCONTROLS = 0x3,
  ssfPRINTERS = 0x4,
  ssfPERSONAL = 0x5,
  ssfFAVORITES = 0x6,
  ssfSTARTUP = 0x7,
  ssfRECENT = 0x8,
  ssfSENDTO = 0x9,
  ssfBITBUCKET = 0xA,
  ssfSTARTMENU = 0xB,
  ssfDESKTOPDIRECTORY = 0x10,
  ssfDRIVES = 0x11,
  ssfNETWORK = 0x12,
  ssfNETHOOD = 0x13,
  ssfFONTS = 0x14,
  ssfTEMPLATES = 0x15,
};

/*   61 */
enum tagDESCKIND
{
  DESCKIND_NONE = 0x0,
  DESCKIND_FUNCDESC = 0x1,
  DESCKIND_VARDESC = 0x2,
  DESCKIND_TYPECOMP = 0x3,
  DESCKIND_IMPLICITAPPOBJ = 0x4,
  DESCKIND_MAX = 0x5,
};

/*   62 */
enum tagPOINTERINACTIVE
{
  POINTERINACTIVE_ACTIVATEONENTRY = 0x1,
  POINTERINACTIVE_DEACTIVATEONLEAVE = 0x2,
  POINTERINACTIVE_ACTIVATEONDRAG = 0x4,
};

/*   63 */
enum BrowserNavConstants
{
  navOpenInNewWindow = 0x1,
  navNoHistory = 0x2,
  navNoReadFromCache = 0x4,
  navNoWriteToCache = 0x8,
  navAllowAutosearch = 0x10,
  navBrowserBar = 0x20,
};

/*   64 */
enum LATENCY_TIME
{
  LT_DONT_CARE = 0x0,
  LT_LOWEST_LATENCY = 0x1,
};

/*   65 */
enum RefreshConstants
{
  REFRESH_NORMAL = 0x0,
  REFRESH_IFEXPIRED = 0x1,
  REFRESH_COMPLETELY = 0x3,
};

/*   66 */
enum $F5DE883C21C00D044D40D05491204D19
{
  SBSC_HIDE = 0x0,
  SBSC_SHOW = 0x1,
  SBSC_TOGGLE = 0x2,
  SBSC_QUERY = 0x3,
};

/*   67 */
enum $1D78A0CD8D81717194D9F89815B5F9FC
{
  SBO_DEFAULT = 0x0,
  SBO_NOBROWSERPAGES = 0x1,
};

/*   68 */
enum _GET_FILEEX_INFO_LEVELS
{
  GetFileExInfoStandard = 0x0,
  GetFileExMaxInfoLevel = 0x1,
};

/*   69 */
enum tagDISCARDCACHE
{
  DISCARDCACHE_SAVEIFDIRTY = 0x0,
  DISCARDCACHE_NOSAVE = 0x1,
};

/*   70 */
enum tagBINDSTRING
{
  BINDSTRING_HEADERS = 0x1,
  BINDSTRING_ACCEPT_MIMES = 0x2,
  BINDSTRING_EXTRA_URL = 0x3,
  BINDSTRING_LANGUAGE = 0x4,
  BINDSTRING_USERNAME = 0x5,
  BINDSTRING_PASSWORD = 0x6,
  BINDSTRING_UA_PIXELS = 0x7,
  BINDSTRING_UA_COLOR = 0x8,
  BINDSTRING_OS = 0x9,
  BINDSTRING_USER_AGENT = 0xA,
  BINDSTRING_ACCEPT_ENCODINGS = 0xB,
  BINDSTRING_POST_COOKIE = 0xC,
  BINDSTRING_POST_DATA_MIME = 0xD,
  BINDSTRING_URL = 0xE,
};

/*   71 */
enum VARENUM
{
  VT_EMPTY = 0x0,
  VT_NULL = 0x1,
  VT_I2 = 0x2,
  VT_I4 = 0x3,
  VT_R4 = 0x4,
  VT_R8 = 0x5,
  VT_CY = 0x6,
  VT_DATE = 0x7,
  VT_BSTR = 0x8,
  VT_DISPATCH = 0x9,
  VT_ERROR = 0xA,
  VT_BOOL = 0xB,
  VT_VARIANT = 0xC,
  VT_UNKNOWN = 0xD,
  VT_DECIMAL = 0xE,
  VT_I1 = 0x10,
  VT_UI1 = 0x11,
  VT_UI2 = 0x12,
  VT_UI4 = 0x13,
  VT_I8 = 0x14,
  VT_UI8 = 0x15,
  VT_INT = 0x16,
  VT_UINT = 0x17,
  VT_VOID = 0x18,
  VT_HRESULT = 0x19,
  VT_PTR = 0x1A,
  VT_SAFEARRAY = 0x1B,
  VT_CARRAY = 0x1C,
  VT_USERDEFINED = 0x1D,
  VT_LPSTR = 0x1E,
  VT_LPWSTR = 0x1F,
  VT_RECORD = 0x24,
  VT_FILETIME = 0x40,
  VT_BLOB = 0x41,
  VT_STREAM = 0x42,
  VT_STORAGE = 0x43,
  VT_STREAMED_OBJECT = 0x44,
  VT_STORED_OBJECT = 0x45,
  VT_BLOB_OBJECT = 0x46,
  VT_CF = 0x47,
  VT_CLSID = 0x48,
  VT_BSTR_BLOB = 0xFFF,
  VT_VECTOR = 0x1000,
  VT_ARRAY = 0x2000,
  VT_BYREF = 0x4000,
  VT_RESERVED = 0x8000,
  VT_ILLEGAL = 0xFFFF,
  VT_ILLEGALMASKED = 0xFFF,
  VT_TYPEMASK = 0xFFF,
};

/*   72 */
enum tagCALLCONV
{
  CC_FASTCALL = 0x0,
  CC_CDECL = 0x1,
  CC_MSCPASCAL = 0x2,
  CC_PASCAL = 0x2,
  CC_MACPASCAL = 0x3,
  CC_STDCALL = 0x4,
  CC_FPFASTCALL = 0x5,
  CC_SYSCALL = 0x6,
  CC_MPWCDECL = 0x7,
  CC_MPWPASCAL = 0x8,
  CC_MAX = 0x9,
};

/*   73 */
enum SVUIA_STATUS
{
  SVUIA_DEACTIVATE = 0x0,
  SVUIA_ACTIVATE_NOFOCUS = 0x1,
  SVUIA_ACTIVATE_FOCUS = 0x2,
  SVUIA_INPLACEACTIVATE = 0x3,
};

/*   74 */
enum AfxTraceFlags
{
  traceMultiApp = 0x1,
  traceAppMsg = 0x2,
  traceWinMsg = 0x4,
  traceCmdRouting = 0x8,
  traceOle = 0x10,
  traceDatabase = 0x20,
  traceInternet = 0x40,
};

/*   75 */
enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0x0,
  FUNC_PUREVIRTUAL = 0x1,
  FUNC_NONVIRTUAL = 0x2,
  FUNC_STATIC = 0x3,
  FUNC_DISPATCH = 0x4,
};

/*   76 */
enum tagCALLTYPE
{
  CALLTYPE_TOPLEVEL = 0x1,
  CALLTYPE_NESTED = 0x2,
  CALLTYPE_ASYNC = 0x3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 0x4,
  CALLTYPE_ASYNC_CALLPENDING = 0x5,
};

/*   77 */
enum tagBIND_FLAGS
{
  BIND_MAYBOTHERUSER = 0x1,
  BIND_JUSTTESTEXISTENCE = 0x2,
};

/*   78 */
enum tagINVOKEKIND
{
  INVOKE_FUNC = 0x1,
  INVOKE_PROPERTYGET = 0x2,
  INVOKE_PROPERTYPUT = 0x4,
  INVOKE_PROPERTYPUTREF = 0x8,
};

/*   79 */
enum tagURLZONE
{
  URLZONE_PREDEFINED_MIN = 0x0,
  URLZONE_LOCAL_MACHINE = 0x0,
  URLZONE_INTRANET = 0x1,
  URLZONE_TRUSTED = 0x2,
  URLZONE_INTERNET = 0x3,
  URLZONE_UNTRUSTED = 0x4,
  URLZONE_PREDEFINED_MAX = 0x3E7,
  URLZONE_USER_MIN = 0x3E8,
  URLZONE_USER_MAX = 0x2710,
};

/*   80 */
enum tagSERVERCALL
{
  SERVERCALL_ISHANDLED = 0x0,
  SERVERCALL_REJECTED = 0x1,
  SERVERCALL_RETRYLATER = 0x2,
};

/*   81 */
enum tagPENDINGTYPE
{
  PENDINGTYPE_TOPLEVEL = 0x1,
  PENDINGTYPE_NESTED = 0x2,
};

/*   82 */
enum tagPENDINGMSG
{
  PENDINGMSG_CANCELCALL = 0x0,
  PENDINGMSG_WAITNOPROCESS = 0x1,
  PENDINGMSG_WAITDEFPROCESS = 0x2,
};

/*   83 */
enum tagURLTEMPLATE
{
  URLTEMPLATE_CUSTOM = 0x0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

/*   84 */
enum __MIDL_IInternetZoneManager_0001
{
  MAX_ZONE_PATH = 0x104,
  MAX_ZONE_DESCRIPTION = 0xC8,
};

/*   85 */
enum _tagPI_FLAGS
{
  PI_PARSE_URL = 0x1,
  PI_FILTER_MODE = 0x2,
  PI_FORCE_ASYNC = 0x4,
  PI_USE_WORKERTHREAD = 0x8,
  PI_MIMEVERIFICATION = 0x10,
  PI_CLSIDLOOKUP = 0x20,
  PI_DATAPROGRESS = 0x40,
  PI_SYNCHRONOUS = 0x80,
  PI_APARTMENTTHREADED = 0x100,
  PI_CLASSINSTALL = 0x200,
  PD_FORCE_SWITCH = 0x10000,
};

/*   86 */
enum __MIDL_IInternetZoneManager_0002
{
  ZAFLAGS_CUSTOM_EDIT = 0x1,
  ZAFLAGS_ADD_SITES = 0x2,
  ZAFLAGS_REQUIRE_VERIFICATION = 0x4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 0x8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 0x10,
  ZAFLAGS_NO_UI = 0x20,
  ZAFLAGS_SUPPORTS_VERIFICATION = 0x40,
  ZAFLAGS_UNC_AS_INTRANET = 0x80,
};

/*   87 */
enum tagPictureAttributes
{
  PICTURE_SCALABLE = 0x1,
  PICTURE_TRANSPARENT = 0x2,
};

/*   88 */
enum tagVARKIND
{
  VAR_PERINSTANCE = 0x0,
  VAR_STATIC = 0x1,
  VAR_CONST = 0x2,
  VAR_DISPATCH = 0x3,
};

/*   89 */
enum tagGUIDKIND
{
  GUIDKIND_DEFAULT_SOURCE_DISP_IID = 0x1,
};

/*   90 */
enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 0x1,
  AclSizeInformation = 0x2,
};

/*   91 */
enum tagTYSPEC
{
  TYSPEC_CLSID = 0x0,
  TYSPEC_FILEEXT = 0x1,
  TYSPEC_MIMETYPE = 0x2,
  TYSPEC_PROGID = 0x3,
  TYSPEC_IID = 0x4,
  TYSPEC_TYPELIB = 0x5,
  TYSPEC_FILENAME = 0x6,
  TYSPEC_JAVACLASS = 0x7,
  TYSPEC_PACKAGENAME = 0x8,
};

/*   92 */
enum _URLZONEREG
{
  URLZONEREG_DEFAULT = 0x0,
  URLZONEREG_HKLM = 0x1,
  URLZONEREG_HKCU = 0x2,
};

/*   93 */
enum STUB_PHASE
{
  STUB_UNMARSHAL = 0x0,
  STUB_CALL_SERVER = 0x1,
  STUB_MARSHAL = 0x2,
  STUB_CALL_SERVER_NO_HRESULT = 0x3,
};

/*   94 */
enum PROXY_PHASE
{
  PROXY_CALCSIZE = 0x0,
  PROXY_GETBUFFER = 0x1,
  PROXY_MARSHAL = 0x2,
  PROXY_SENDRECEIVE = 0x3,
  PROXY_UNMARSHAL = 0x4,
};

/*   95 */
enum tagTYPEFLAGS
{
  TYPEFLAG_FAPPOBJECT = 0x1,
  TYPEFLAG_FCANCREATE = 0x2,
  TYPEFLAG_FLICENSED = 0x4,
  TYPEFLAG_FPREDECLID = 0x8,
  TYPEFLAG_FHIDDEN = 0x10,
  TYPEFLAG_FCONTROL = 0x20,
  TYPEFLAG_FDUAL = 0x40,
  TYPEFLAG_FNONEXTENSIBLE = 0x80,
  TYPEFLAG_FOLEAUTOMATION = 0x100,
  TYPEFLAG_FRESTRICTED = 0x200,
  TYPEFLAG_FAGGREGATABLE = 0x400,
  TYPEFLAG_FREPLACEABLE = 0x800,
  TYPEFLAG_FDISPATCHABLE = 0x1000,
  TYPEFLAG_FREVERSEBIND = 0x2000,
};

/*   96 */
enum tagCOINIT
{
  COINIT_APARTMENTTHREADED = 0x2,
};

/*   97 */
enum tagFUNCFLAGS
{
  FUNCFLAG_FRESTRICTED = 0x1,
  FUNCFLAG_FSOURCE = 0x2,
  FUNCFLAG_FBINDABLE = 0x4,
  FUNCFLAG_FREQUESTEDIT = 0x8,
  FUNCFLAG_FDISPLAYBIND = 0x10,
  FUNCFLAG_FDEFAULTBIND = 0x20,
  FUNCFLAG_FHIDDEN = 0x40,
  FUNCFLAG_FUSESGETLASTERROR = 0x80,
  FUNCFLAG_FDEFAULTCOLLELEM = 0x100,
  FUNCFLAG_FUIDEFAULT = 0x200,
  FUNCFLAG_FNONBROWSABLE = 0x400,
  FUNCFLAG_FREPLACEABLE = 0x800,
  FUNCFLAG_FIMMEDIATEBIND = 0x1000,
};

/*   98 */
enum tagVARFLAGS
{
  VARFLAG_FREADONLY = 0x1,
  VARFLAG_FSOURCE = 0x2,
  VARFLAG_FBINDABLE = 0x4,
  VARFLAG_FREQUESTEDIT = 0x8,
  VARFLAG_FDISPLAYBIND = 0x10,
  VARFLAG_FDEFAULTBIND = 0x20,
  VARFLAG_FHIDDEN = 0x40,
  VARFLAG_FRESTRICTED = 0x80,
  VARFLAG_FDEFAULTCOLLELEM = 0x100,
  VARFLAG_FUIDEFAULT = 0x200,
  VARFLAG_FNONBROWSABLE = 0x400,
  VARFLAG_FREPLACEABLE = 0x800,
  VARFLAG_FIMMEDIATEBIND = 0x1000,
};

/*   99 */
enum tagAPPINFOTYPE
{
  APPINFO_PUBLISHED = 0x1,
  APPINFO_SHELLNEW = 0x2,
  APPINFO_INSERTABLE = 0x3,
};

/*  100 */
enum _CLASSPATHTYPE
{
  ExeNamePath = 0x0,
  DllNamePath = 0x1,
  TlbNamePath = 0x2,
  CabFilePath = 0x3,
  InfFilePath = 0x4,
  DrwFilePath = 0x5,
  SetupNamePath = 0x6,
};

/*  101 */
enum tagCTRLINFO
{
  CTRLINFO_EATS_RETURN = 0x1,
  CTRLINFO_EATS_ESCAPE = 0x2,
};

/*  102 */
enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0x0,
  AuditEventDirectoryServiceAccess = 0x1,
};

/*  103 */
enum tagPROPBAG2_TYPE
{
  PROPBAG2_TYPE_UNDEFINED = 0x0,
  PROPBAG2_TYPE_DATA = 0x1,
  PROPBAG2_TYPE_URL = 0x2,
  PROPBAG2_TYPE_OBJECT = 0x3,
  PROPBAG2_TYPE_STREAM = 0x4,
  PROPBAG2_TYPE_STORAGE = 0x5,
  PROPBAG2_TYPE_MONIKER = 0x6,
};

/*  104 */
enum tagOLEGETMONIKER
{
  OLEGETMONIKER_ONLYIFTHERE = 0x1,
  OLEGETMONIKER_FORCEASSIGN = 0x2,
  OLEGETMONIKER_UNASSIGN = 0x3,
  OLEGETMONIKER_TEMPFORUSER = 0x4,
};

/*  105 */
enum tagOLEWHICHMK
{
  OLEWHICHMK_CONTAINER = 0x1,
  OLEWHICHMK_OBJREL = 0x2,
  OLEWHICHMK_OBJFULL = 0x3,
};

/*  106 */
enum tagSTDMSHLFLAGS
{
  SMEXF_SERVER = 0x1,
  SMEXF_HANDLER = 0x2,
};

/*  107 */
enum tagUSERCLASSTYPE
{
  USERCLASSTYPE_FULL = 0x1,
  USERCLASSTYPE_SHORT = 0x2,
  USERCLASSTYPE_APPNAME = 0x3,
};

/*  108 */
enum tagOLEMISC
{
  OLEMISC_RECOMPOSEONRESIZE = 0x1,
  OLEMISC_ONLYICONIC = 0x2,
  OLEMISC_INSERTNOTREPLACE = 0x4,
  OLEMISC_STATIC = 0x8,
  OLEMISC_CANTLINKINSIDE = 0x10,
  OLEMISC_CANLINKBYOLE1 = 0x20,
  OLEMISC_ISLINKOBJECT = 0x40,
  OLEMISC_INSIDEOUT = 0x80,
  OLEMISC_ACTIVATEWHENVISIBLE = 0x100,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 0x200,
  OLEMISC_INVISIBLEATRUNTIME = 0x400,
  OLEMISC_ALWAYSRUN = 0x800,
  OLEMISC_ACTSLIKEBUTTON = 0x1000,
  OLEMISC_ACTSLIKELABEL = 0x2000,
  OLEMISC_NOUIACTIVATE = 0x4000,
  OLEMISC_ALIGNABLE = 0x8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

/*  109 */
enum tagXFORMCOORDS
{
  XFORMCOORDS_POSITION = 0x1,
  XFORMCOORDS_SIZE = 0x2,
  XFORMCOORDS_HIMETRICTOCONTAINER = 0x4,
  XFORMCOORDS_CONTAINERTOHIMETRIC = 0x8,
  XFORMCOORDS_EVENTCOMPAT = 0x10,
};

/*  110 */
enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/*  111 */
enum tagOLECLOSE
{
  OLECLOSE_SAVEIFDIRTY = 0x0,
  OLECLOSE_NOSAVE = 0x1,
  OLECLOSE_PROMPTSAVE = 0x2,
};

/*  112 */
enum _TOKEN_TYPE
{
  TokenPrimary = 0x1,
  TokenImpersonation = 0x2,
};

/*  113 */
enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 0x1,
  TokenGroups = 0x2,
  TokenPrivileges = 0x3,
  TokenOwner = 0x4,
  TokenPrimaryGroup = 0x5,
  TokenDefaultDacl = 0x6,
  TokenSource = 0x7,
  TokenType = 0x8,
  TokenImpersonationLevel = 0x9,
  TokenStatistics = 0xA,
  TokenRestrictedSids = 0xB,
  TokenSessionId = 0xC,
};

/*  114 */
enum __MIDL_IOleDocument_0001
{
  DOCMISC_CANCREATEMULTIPLEVIEWS = 0x1,
  DOCMISC_SUPPORTCOMPLEXRECTANGLES = 0x2,
  DOCMISC_CANTOPENEDIT = 0x4,
  DOCMISC_NOFILESUPPORT = 0x8,
};

/*  115 */
enum _tagOIBDG_FLAGS
{
  OIBDG_APARTMENTTHREADED = 0x100,
};

/*  116 */
enum tagREGCLS
{
  REGCLS_SINGLEUSE = 0x0,
  REGCLS_MULTIPLEUSE = 0x1,
  REGCLS_MULTI_SEPARATE = 0x2,
  REGCLS_SUSPENDED = 0x4,
  REGCLS_SURROGATE = 0x8,
};

/*  117 */
enum tagACTIVATEFLAGS
{
  ACTIVATE_WINDOWLESS = 0x1,
};

/*  118 */
enum OLE_APPTYPE
{
  OAT_UNKNOWN = 0xFFFFFFFF,
  OAT_INPLACE_SERVER = 0x0,
  OAT_SERVER = 0x1,
  OAT_CONTAINER = 0x2,
  OAT_DISPATCH_OBJECT = 0x3,
  OAT_DOC_OBJECT_SERVER = 0x4,
  OAT_DOC_OBJECT_CONTAINER = 0x5,
};

/*  119 */
enum tagSHGDN
{
  SHGDN_NORMAL = 0x0,
  SHGDN_INFOLDER = 0x1,
  SHGDN_INCLUDE_NONFILESYS = 0x2000,
  SHGDN_FORADDRESSBAR = 0x4000,
  SHGDN_FORPARSING = 0x8000,
};

/*  120 */
enum tagSHCONTF
{
  SHCONTF_FOLDERS = 0x20,
  SHCONTF_NONFOLDERS = 0x40,
  SHCONTF_INCLUDEHIDDEN = 0x80,
};

/*  121 */
enum __MIDL_IBindStatusCallback_0001
{
  BINDVERB_GET = 0x0,
  BINDVERB_POST = 0x1,
  BINDVERB_PUT = 0x2,
  BINDVERB_CUSTOM = 0x3,
};

/*  122 */
enum __MIDL_IBindStatusCallback_0002
{
  BINDINFOF_URLENCODESTGMEDDATA = 0x1,
  BINDINFOF_URLENCODEDEXTRAINFO = 0x2,
};

/*  123 */
enum __MIDL_IBindStatusCallback_0003
{
  BINDF_ASYNCHRONOUS = 0x1,
  BINDF_ASYNCSTORAGE = 0x2,
  BINDF_NOPROGRESSIVERENDERING = 0x4,
  BINDF_OFFLINEOPERATION = 0x8,
  BINDF_GETNEWESTVERSION = 0x10,
  BINDF_NOWRITECACHE = 0x20,
  BINDF_NEEDFILE = 0x40,
  BINDF_PULLDATA = 0x80,
  BINDF_IGNORESECURITYPROBLEM = 0x100,
  BINDF_RESYNCHRONIZE = 0x200,
  BINDF_HYPERLINK = 0x400,
  BINDF_NO_UI = 0x800,
  BINDF_SILENTOPERATION = 0x1000,
  BINDF_PRAGMA_NO_CACHE = 0x2000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
};

/*  124 */
enum tagOLEDCFLAGS
{
  OLEDC_NODRAW = 0x1,
  OLEDC_PAINTBKGND = 0x2,
  OLEDC_OFFSCREEN = 0x4,
};

/*  125 */
enum tagQACONTAINERFLAGS
{
  QACONTAINER_SHOWHATCHING = 0x1,
  QACONTAINER_SHOWGRABHANDLES = 0x2,
  QACONTAINER_USERMODE = 0x4,
  QACONTAINER_DISPLAYASDEFAULT = 0x8,
  QACONTAINER_UIDEAD = 0x10,
  QACONTAINER_AUTOCLIP = 0x20,
  QACONTAINER_MESSAGEREFLECT = 0x40,
  QACONTAINER_SUPPORTSMNEMONICS = 0x80,
};

/*  126 */
enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0x0,
  IMPORT_OBJECT_DATA = 0x1,
  IMPORT_OBJECT_CONST = 0x2,
};

/*  127 */
enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0x0,
  IMPORT_OBJECT_NAME = 0x1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 0x2,
  IMPORT_OBJECT_NAME_UNDECORATE = 0x3,
};

/*  128 */
enum SLR_FLAGS
{
  SLR_NO_UI = 0x1,
  SLR_ANY_MATCH = 0x2,
  SLR_UPDATE = 0x4,
  SLR_NOUPDATE = 0x8,
};

/*  129 */
enum tagOLEVERBATTRIB
{
  OLEVERBATTRIB_NEVERDIRTIES = 0x1,
  OLEVERBATTRIB_ONCONTAINERMENU = 0x2,
};

/*  130 */
enum SLGP_FLAGS
{
  SLGP_SHORTPATH = 0x1,
  SLGP_UNCPRIORITY = 0x2,
  SLGP_RAWPATH = 0x4,
};

/*  131 */
enum tagMKSYS
{
  MKSYS_NONE = 0x0,
  MKSYS_GENERICCOMPOSITE = 0x1,
  MKSYS_FILEMONIKER = 0x2,
  MKSYS_ANTIMONIKER = 0x3,
  MKSYS_ITEMMONIKER = 0x4,
  MKSYS_POINTERMONIKER = 0x5,
  MKSYS_CLASSMONIKER = 0x7,
};

/*  132 */
enum tagMKREDUCE
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0x0,
};

/*  133 */
enum tagSYSKIND
{
  SYS_WIN16 = 0x0,
  SYS_WIN32 = 0x1,
  SYS_MAC = 0x2,
};

/*  134 */
enum __MIDL_IBindStatusCallback_0004
{
  BSCF_FIRSTDATANOTIFICATION = 0x1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 0x2,
  BSCF_LASTDATANOTIFICATION = 0x4,
  BSCF_DATAFULLYAVAILABLE = 0x8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 0x10,
};

/*  135 */
enum tagLIBFLAGS
{
  LIBFLAG_FRESTRICTED = 0x1,
  LIBFLAG_FCONTROL = 0x2,
  LIBFLAG_FHIDDEN = 0x4,
  LIBFLAG_FHASDISKIMAGE = 0x8,
};

/*  136 */
enum tagBINDSTATUS
{
  BINDSTATUS_FINDINGRESOURCE = 0x1,
  BINDSTATUS_CONNECTING = 0x2,
  BINDSTATUS_REDIRECTING = 0x3,
  BINDSTATUS_BEGINDOWNLOADDATA = 0x4,
  BINDSTATUS_DOWNLOADINGDATA = 0x5,
  BINDSTATUS_ENDDOWNLOADDATA = 0x6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 0x7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 0x8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 0x9,
  BINDSTATUS_USINGCACHEDCOPY = 0xA,
  BINDSTATUS_SENDINGREQUEST = 0xB,
  BINDSTATUS_CLASSIDAVAILABLE = 0xC,
  BINDSTATUS_MIMETYPEAVAILABLE = 0xD,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 0xE,
  BINDSTATUS_BEGINSYNCOPERATION = 0xF,
  BINDSTATUS_ENDSYNCOPERATION = 0x10,
  BINDSTATUS_BEGINUPLOADDATA = 0x11,
  BINDSTATUS_UPLOADINGDATA = 0x12,
  BINDSTATUS_ENDUPLOADDATA = 0x13,
  BINDSTATUS_PROTOCOLCLASSID = 0x14,
  BINDSTATUS_ENCODING = 0x15,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 0x16,
  BINDSTATUS_CLASSINSTALLLOCATION = 0x17,
  BINDSTATUS_DECODING = 0x18,
  BINDSTATUS_LOADINGMIMEHANDLER = 0x19,
};

/*  137 */
enum tagPROPPAGESTATUS
{
  PROPPAGESTATUS_DIRTY = 0x1,
  PROPPAGESTATUS_VALIDATE = 0x2,
  PROPPAGESTATUS_CLEAN = 0x4,
};

/*  138 */
enum tagMEMCTX
{
  MEMCTX_TASK = 0x1,
  MEMCTX_SHARED = 0x2,
  MEMCTX_MACSYSTEM = 0x3,
  MEMCTX_UNKNOWN = 0xFFFFFFFF,
  MEMCTX_SAME = 0xFFFFFFFE,
};

/*  139 */
enum _tagPARSEACTION
{
  PARSE_CANONICALIZE = 0x1,
  PARSE_FRIENDLY = 0x2,
  PARSE_SECURITY_URL = 0x3,
  PARSE_ROOTDOCUMENT = 0x4,
  PARSE_DOCUMENT = 0x5,
  PARSE_ANCHOR = 0x6,
  PARSE_ENCODE = 0x7,
  PARSE_DECODE = 0x8,
  PARSE_PATH_FROM_URL = 0x9,
  PARSE_URL_FROM_PATH = 0xA,
  PARSE_MIME = 0xB,
  PARSE_SERVER = 0xC,
  PARSE_SCHEMA = 0xD,
  PARSE_SITE = 0xE,
  PARSE_DOMAIN = 0xF,
  PARSE_LOCATION = 0x10,
  PARSE_SECURITY_DOMAIN = 0x11,
};

/*  140 */
enum tagCLSCTX
{
  CLSCTX_INPROC_SERVER = 0x1,
  CLSCTX_INPROC_HANDLER = 0x2,
  CLSCTX_LOCAL_SERVER = 0x4,
  CLSCTX_INPROC_SERVER16 = 0x8,
  CLSCTX_REMOTE_SERVER = 0x10,
  CLSCTX_INPROC_HANDLER16 = 0x20,
  CLSCTX_INPROC_SERVERX86 = 0x40,
  CLSCTX_INPROC_HANDLERX86 = 0x80,
  CLSCTX_ESERVER_HANDLER = 0x100,
};

/*  141 */
enum tagOLERENDER
{
  OLERENDER_NONE = 0x0,
  OLERENDER_DRAW = 0x1,
  OLERENDER_FORMAT = 0x2,
  OLERENDER_ASIS = 0x3,
};

/*  142 */
enum _undonameid
{
  UID_UNKNOWN = 0x0,
  UID_TYPING = 0x1,
  UID_DELETE = 0x2,
  UID_DRAGDROP = 0x3,
  UID_CUT = 0x4,
  UID_PASTE = 0x5,
};

/*  143 */
enum _SRVINFO
{
  SRVINFO_F_COSERVERINFO = 0x0,
  SRVINFO_F_COSERVERINFO2 = 0x1,
};

/*  144 */
enum tagMSHLFLAGS
{
  MSHLFLAGS_NORMAL = 0x0,
  MSHLFLAGS_TABLESTRONG = 0x1,
  MSHLFLAGS_TABLEWEAK = 0x2,
  MSHLFLAGS_NOPING = 0x4,
};

/*  145 */
enum _tagPSUACTION
{
  PSU_DEFAULT = 0x1,
  PSU_SECURITY_URL_ONLY = 0x2,
};

/*  146 */
enum tagMSHCTX
{
  MSHCTX_LOCAL = 0x0,
  MSHCTX_NOSHAREDMEM = 0x1,
  MSHCTX_DIFFERENTMACHINE = 0x2,
  MSHCTX_INPROC = 0x3,
};

/*  147 */
enum _tagQUERYOPTION
{
  QUERY_EXPIRATION_DATE = 0x1,
  QUERY_TIME_OF_LAST_CHANGE = 0x2,
  QUERY_CONTENT_ENCODING = 0x3,
  QUERY_CONTENT_TYPE = 0x4,
  QUERY_REFRESH = 0x5,
  QUERY_RECOMBINE = 0x6,
  QUERY_CAN_NAVIGATE = 0x7,
  QUERY_USES_NETWORK = 0x8,
  QUERY_IS_CACHED = 0x9,
  QUERY_IS_INSTALLEDENTRY = 0xA,
  QUERY_IS_CACHED_OR_MAPPED = 0xB,
  QUERY_USES_CACHE = 0xC,
};

/*  148 */
enum tagDVASPECT
{
  DVASPECT_CONTENT = 0x1,
  DVASPECT_THUMBNAIL = 0x2,
  DVASPECT_ICON = 0x4,
  DVASPECT_DOCPRINT = 0x8,
};

/*  149 */
enum tagVIEWSTATUS
{
  VIEWSTATUS_OPAQUE = 0x1,
  VIEWSTATUS_SOLIDBKGND = 0x2,
  VIEWSTATUS_DVASPECTOPAQUE = 0x4,
  VIEWSTATUS_DVASPECTTRANSPARENT = 0x8,
  VIEWSTATUS_SURFACE = 0x10,
  VIEWSTATUS_3DSURFACE = 0x20,
};

/*  150 */
enum tagSTGC
{
  STGC_DEFAULT = 0x0,
  STGC_OVERWRITE = 0x1,
  STGC_ONLYIFCURRENT = 0x2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x4,
  STGC_CONSOLIDATE = 0x8,
};

/*  151 */
enum tagSTGMOVE
{
  STGMOVE_MOVE = 0x0,
  STGMOVE_COPY = 0x1,
  STGMOVE_SHALLOWCOPY = 0x2,
};

/*  152 */
enum tagHITRESULT
{
  HITRESULT_OUTSIDE = 0x0,
  HITRESULT_TRANSPARENT = 0x1,
  HITRESULT_CLOSE = 0x2,
  HITRESULT_HIT = 0x3,
};

/*  153 */
enum tagSTATFLAG
{
  STATFLAG_DEFAULT = 0x0,
  STATFLAG_NONAME = 0x1,
  STATFLAG_NOOPEN = 0x2,
};

/*  154 */
enum tagDVASPECT2
{
  DVASPECT_OPAQUE = 0x10,
  DVASPECT_TRANSPARENT = 0x20,
};

/*  155 */
enum tagADVF
{
  ADVF_NODATA = 0x1,
  ADVF_PRIMEFIRST = 0x2,
  ADVF_ONLYONCE = 0x4,
  ADVF_DATAONSTOP = 0x40,
  ADVFCACHE_NOHANDLER = 0x8,
  ADVFCACHE_FORCEBUILTIN = 0x10,
  ADVFCACHE_ONSAVE = 0x20,
};

/*  156 */
enum tagExtentMode
{
  DVEXTENT_CONTENT = 0x0,
  DVEXTENT_INTEGRAL = 0x1,
};

/*  157 */
enum XLAT_SIDE
{
  XLAT_SERVER = 0x1,
  XLAT_CLIENT = 0x2,
};

/*  158 */
enum tagAspectInfoFlag
{
  DVASPECTINFOFLAG_CANOPTIMIZE = 0x1,
};

/*  159 */
enum tagOLEUPDATE
{
  OLEUPDATE_ALWAYS = 0x1,
  OLEUPDATE_ONCALL = 0x3,
};

/*  160 */
enum tagOLELINKBIND
{
  OLELINKBIND_EVENIFCLASSDIFF = 0x1,
};

/*  161 */
enum xmlelemTYPE
{
  XMLELEMTYPE_ELEMENT = 0x0,
  XMLELEMTYPE_TEXT = 0x1,
  XMLELEMTYPE_COMMENT = 0x2,
  XMLELEMTYPE_DOCUMENT = 0x3,
  XMLELEMTYPE_DTD = 0x4,
  XMLELEMTYPE_PI = 0x5,
  XMLELEMTYPE_OTHER = 0x6,
};

/*  162 */
enum __MIDL_IPrint_0001
{
  PRINTFLAG_MAYBOTHERUSER = 0x1,
  PRINTFLAG_PROMPTUSER = 0x2,
  PRINTFLAG_USERMAYCHANGEPRINTER = 0x4,
  PRINTFLAG_RECOMPOSETODEVICE = 0x8,
  PRINTFLAG_DONTACTUALLYPRINT = 0x10,
  PRINTFLAG_FORCEPROPERTIES = 0x20,
  PRINTFLAG_PRINTTOFILE = 0x40,
};

/*  163 */
enum tagREGKIND
{
  REGKIND_DEFAULT = 0x0,
  REGKIND_REGISTER = 0x1,
  REGKIND_NONE = 0x2,
};

/*  164 */
enum tagSF_TYPE
{
  SF_ERROR = 0xA,
  SF_I1 = 0x10,
  SF_I2 = 0x2,
  SF_I4 = 0x3,
  SF_I8 = 0x14,
  SF_BSTR = 0x8,
  SF_UNKNOWN = 0xD,
  SF_DISPATCH = 0x9,
  SF_VARIANT = 0xC,
  SF_RECORD = 0x24,
  SF_HAVEIID = 0x800D,
};

/*  165 */
enum tagDCOM_CALL_STATE
{
  DCOM_NONE = 0x0,
  DCOM_CALL_COMPLETE = 0x1,
  DCOM_CALL_CANCELED = 0x2,
};

/*  166 */
enum _echo_send_msg::__unnamed
{
  max_size = 0x1900,
};

/*  167 */
enum CRecordData::__unnamed
{
  max_file_name = 0x80,
};

/*  168 */
enum _trans_gm_msg_inform_zocl::__unnamed
{
  max_msg_len = 0x500,
};

/*  169 */
enum __data_comp_src::__unnamed
{
  item_num = 0x1D,
};

/*  170 */
enum std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c0877cbce
{
  _Red = 0x0,
  _Black = 0x1,
};

/*  171 */
typedef std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c0877cbce std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Redbl;

/*  172 */
enum CPlayer::__unnamed
{
  move_potal_dist = 0x64,
};

/*  173 */
enum _other_shape_failure_zocl::__unnamed
{
  NOT_LIVE = 0x0,
  NOT_SERIAL = 0x1,
};

/*  174 */
enum _store_list_result_zocl::__unnamed
{
  max_store_per_map = 0x64,
};

/*  175 */
enum _a_trade_reged_list_result_zocl::__unnamed
{
  data_size = 0x3E8,
};

/*  176 */
enum _a_trade_buy_item_result_zocl::__unnamed
{
  max_list = 0xA,
};

/*  177 */
typedef CMgrAvatorItemHistory::__unnamed CMgrAvatorLvHistory::__unnamed;

/*  178 */
enum COpenDlg::__unnamed
{
  IDD = 0x8C,
};

/*  179 */
typedef COpenDlg::__unnamed CAboutDlg::__unnamed;

/*  180 */
enum DAODATATYPE
{
  DAO_I2 = 0x0,
  DAO_I4 = 0x1,
  DAO_R4 = 0x2,
  DAO_R8 = 0x3,
  DAO_CURRENCY = 0x4,
  DAO_DATE = 0x5,
  DAO_BOOL = 0x6,
  DAO_BSTR = 0x7,
  DAO_LPSTR = 0x8,
  DAO_LPWSTR = 0x9,
  DAO_BLOB = 0xA,
  DAO_BYTES = 0xB,
  DAO_CHAR = 0xC,
  DAO_WCHAR = 0xD,
  DAO_ANYVARIANT = 0xE,
  DAO_BOOKMARK = 0xF,
  DAO_BYTE = 0x10,
  DAO_GUID = 0x11,
  DAO_DATATYPEMAX = 0x12,
};

/*  181 */
enum SQLINTERVAL
{
  SQL_IS_YEAR = 0x1,
  SQL_IS_MONTH = 0x2,
  SQL_IS_DAY = 0x3,
  SQL_IS_HOUR = 0x4,
  SQL_IS_MINUTE = 0x5,
  SQL_IS_SECOND = 0x6,
  SQL_IS_YEAR_TO_MONTH = 0x7,
  SQL_IS_DAY_TO_HOUR = 0x8,
  SQL_IS_DAY_TO_MINUTE = 0x9,
  SQL_IS_DAY_TO_SECOND = 0xA,
  SQL_IS_HOUR_TO_MINUTE = 0xB,
  SQL_IS_HOUR_TO_SECOND = 0xC,
  SQL_IS_MINUTE_TO_SECOND = 0xD,
};

/*  182 */
enum AFX_EVENTMAP_FLAGS
{
  afxEventCustom = 0x0,
  afxEventStock = 0x1,
};

/*  183 */
enum ATL::atlTraceFlags
{
  atlTraceUser = 0x1,
  atlTraceUser2 = 0x2,
  atlTraceUser3 = 0x4,
  atlTraceUser4 = 0x8,
  atlTraceGeneral = 0x20,
  atlTraceCOM = 0x40,
  atlTraceQI = 0x80,
  atlTraceRegistrar = 0x100,
  atlTraceRefcount = 0x200,
  atlTraceWindowing = 0x400,
  atlTraceControls = 0x800,
  atlTraceHosting = 0x1000,
  atlTraceDBClient = 0x2000,
  atlTraceDBProvider = 0x4000,
  atlTraceSnapin = 0x8000,
  atlTraceNotImpl = 0x10000,
};

/*  184 */
enum tagOLEUIPASTEFLAG
{
  OLEUIPASTE_ENABLEICON = 0x800,
  OLEUIPASTE_PASTEONLY = 0x0,
  OLEUIPASTE_PASTE = 0x200,
  OLEUIPASTE_LINKANYTYPE = 0x400,
  OLEUIPASTE_LINKTYPE1 = 0x1,
  OLEUIPASTE_LINKTYPE2 = 0x2,
  OLEUIPASTE_LINKTYPE3 = 0x4,
  OLEUIPASTE_LINKTYPE4 = 0x8,
  OLEUIPASTE_LINKTYPE5 = 0x10,
  OLEUIPASTE_LINKTYPE6 = 0x20,
  OLEUIPASTE_LINKTYPE7 = 0x40,
  OLEUIPASTE_LINKTYPE8 = 0x80,
};

/*  185 */
enum INTERNET_SCHEME
{
  INTERNET_SCHEME_PARTIAL = 0xFFFFFFFE,
  INTERNET_SCHEME_UNKNOWN = 0xFFFFFFFF,
  INTERNET_SCHEME_DEFAULT = 0x0,
  INTERNET_SCHEME_FTP = 0x1,
  INTERNET_SCHEME_GOPHER = 0x2,
  INTERNET_SCHEME_HTTP = 0x3,
  INTERNET_SCHEME_HTTPS = 0x4,
  INTERNET_SCHEME_FILE = 0x5,
  INTERNET_SCHEME_NEWS = 0x6,
  INTERNET_SCHEME_MAILTO = 0x7,
  INTERNET_SCHEME_SOCKS = 0x8,
  INTERNET_SCHEME_FIRST = 0x1,
  INTERNET_SCHEME_LAST = 0x8,
};

/*  186 */
enum $8AA761C412D53E23AA59F0B2EA84D4BD
{
  FS_SHOW = 0x1,
  FS_HIDE = 0x2,
  FS_ACTIVATE = 0x4,
  FS_DEACTIVATE = 0x8,
  FS_ENABLE = 0x10,
  FS_DISABLE = 0x20,
  FS_SYNCACTIVE = 0x40,
};

/*  187 */
enum tagDOCHOSTUIDBLCLKDispatch
{
  docHostUIDblClkDEFAULT = 0x0,
  docHostUIDblClkSHOWPROPERTIES = 0x1,
  docHostUIDblClkSHOWCODE = 0x2,
};

/*  188 */
enum tagDocHostUIFlagDispatch
{
  docHostUIFlagDIALOG = 0x1,
  docHostUIFlagDISABLE_HELP_MENU = 0x2,
  docHostUIFlagNO3DBORDER = 0x4,
  docHostUIFlagSCROLL_NO = 0x8,
  docHostUIFlagDISABLE_SCRIPT_INACTIVE = 0x10,
  docHostUIFlagOPENNEWWIN = 0x20,
  docHostUIFlagDISABLE_OFFSCREEN = 0x40,
  docHostUIFlagFLAT_SCROLLBAR = 0x80,
  docHostUIFlagDIV_BLOCKDEFAULT = 0x100,
  docHostUIFlagACTIVATE_CLIENTHIT_ONLY = 0x200,
};

/*  189 */
enum RecordsetTypeEnum
{
  dbOpenTable = 0x1,
  dbOpenDynaset = 0x2,
  dbOpenSnapshot = 0x4,
  dbOpenForwardOnly = 0x8,
  dbOpenDynamic = 0x10,
};

/*  190 */
enum EditModeEnum
{
  dbEditNone = 0x0,
  dbEditInProgress = 0x1,
  dbEditAdd = 0x2,
  dbEditChanged = 0x4,
  dbEditDeleted = 0x8,
  dbEditNew = 0x10,
};

/*  191 */
enum RecordsetOptionEnum
{
  dbDenyWrite = 0x1,
  dbDenyRead = 0x2,
  dbReadOnly = 0x4,
  dbAppendOnly = 0x8,
  dbInconsistent = 0x10,
  dbConsistent = 0x20,
  dbSQLPassThrough = 0x40,
  dbFailOnError = 0x80,
  dbForwardOnly = 0x100,
  dbSeeChanges = 0x200,
  dbRunAsync = 0x400,
  dbExecDirect = 0x800,
};

/*  192 */
enum LockTypeEnum
{
  dbPessimistic = 0x2,
  dbOptimistic = 0x3,
  dbOptimisticValue = 0x1,
  dbOptimisticBatch = 0x5,
};

/*  193 */
enum UpdateCriteriaEnum
{
  dbCriteriaKey = 0x1,
  dbCriteriaModValues = 0x2,
  dbCriteriaAllCols = 0x4,
  dbCriteriaTimestamp = 0x8,
  dbCriteriaDeleteInsert = 0x10,
  dbCriteriaUpdate = 0x20,
};

/*  194 */
enum FieldAttributeEnum
{
  dbFixedField = 0x1,
  dbVariableField = 0x2,
  dbAutoIncrField = 0x10,
  dbUpdatableField = 0x20,
  dbSystemField = 0x2000,
  dbHyperlinkField = 0x8000,
  dbDescending = 0x1,
};

/*  195 */
enum DataTypeEnum
{
  dbBoolean = 0x1,
  dbByte = 0x2,
  dbInteger = 0x3,
  dbLong = 0x4,
  dbCurrency = 0x5,
  dbSingle = 0x6,
  dbDouble = 0x7,
  dbDate = 0x8,
  dbBinary = 0x9,
  dbText = 0xA,
  dbLongBinary = 0xB,
  dbMemo = 0xC,
  dbGUID = 0xF,
  dbBigInt = 0x10,
  dbVarBinary = 0x11,
  dbChar = 0x12,
  dbNumeric = 0x13,
  dbDecimal = 0x14,
  dbFloat = 0x15,
  dbTime = 0x16,
  dbTimeStamp = 0x17,
};

/*  196 */
enum RelationAttributeEnum
{
  dbRelationUnique = 0x1,
  dbRelationDontEnforce = 0x2,
  dbRelationInherited = 0x4,
  dbRelationUpdateCascade = 0x100,
  dbRelationDeleteCascade = 0x1000,
  dbRelationLeft = 0x1000000,
  dbRelationRight = 0x2000000,
};

/*  197 */
enum TableDefAttributeEnum
{
  dbAttachExclusive = 0x10000,
  dbAttachSavePWD = 0x20000,
  dbSystemObject = 0x80000002,
  dbAttachedTable = 0x40000000,
  dbAttachedODBC = 0x20000000,
  dbHiddenObject = 0x1,
};

/*  198 */
enum QueryDefTypeEnum
{
  dbQSelect = 0x0,
  dbQProcedure = 0xE0,
  dbQAction = 0xF0,
  dbQCrosstab = 0x10,
  dbQDelete = 0x20,
  dbQUpdate = 0x30,
  dbQAppend = 0x40,
  dbQMakeTable = 0x50,
  dbQDDL = 0x60,
  dbQSQLPassThrough = 0x70,
  dbQSetOperation = 0x80,
  dbQSPTBulk = 0x90,
  dbQCompound = 0xA0,
};

/*  199 */
enum QueryDefStateEnum
{
  dbQPrepare = 0x1,
  dbQUnprepare = 0x2,
};

/*  200 */
enum DatabaseTypeEnum
{
  dbVersion10 = 0x1,
  dbEncrypt = 0x2,
  dbDecrypt = 0x4,
  dbVersion11 = 0x8,
  dbVersion20 = 0x10,
  dbVersion30 = 0x20,
};

/*  201 */
enum CollatingOrderEnum
{
  dbSortNeutral = 0x400,
  dbSortArabic = 0x401,
  dbSortCyrillic = 0x419,
  dbSortCzech = 0x405,
  dbSortDutch = 0x413,
  dbSortGeneral = 0x409,
  dbSortGreek = 0x408,
  dbSortHebrew = 0x40D,
  dbSortHungarian = 0x40E,
  dbSortIcelandic = 0x40F,
  dbSortNorwdan = 0x406,
  dbSortPDXIntl = 0x409,
  dbSortPDXNor = 0x406,
  dbSortPDXSwe = 0x41D,
  dbSortPolish = 0x415,
  dbSortSpanish = 0x40A,
  dbSortSwedFin = 0x41D,
  dbSortTurkish = 0x41F,
  dbSortJapanese = 0x411,
  dbSortChineseSimplified = 0x804,
  dbSortChineseTraditional = 0x404,
  dbSortKorean = 0x412,
  dbSortThai = 0x41E,
  dbSortSlovenian = 0x424,
  dbSortUndefined = 0xFFFFFFFF,
};

/*  202 */
enum IdleEnum
{
  dbFreeLocks = 0x1,
  dbRefreshCache = 0x8,
};

/*  203 */
enum PermissionEnum
{
  dbSecNoAccess = 0x0,
  dbSecFullAccess = 0xFFFFF,
  dbSecDelete = 0x10000,
  dbSecReadSec = 0x20000,
  dbSecWriteSec = 0x40000,
  dbSecWriteOwner = 0x80000,
  dbSecDBCreate = 0x1,
  dbSecDBOpen = 0x2,
  dbSecDBExclusive = 0x4,
  dbSecDBAdmin = 0x8,
  dbSecCreate = 0x1,
  dbSecReadDef = 0x4,
  dbSecWriteDef = 0x1000C,
  dbSecRetrieveData = 0x14,
  dbSecInsertData = 0x20,
  dbSecReplaceData = 0x40,
  dbSecDeleteData = 0x80,
};

/*  204 */
enum SynchronizeTypeEnum
{
  dbRepExportChanges = 0x1,
  dbRepImportChanges = 0x2,
  dbRepImpExpChanges = 0x4,
  dbRepSyncInternet = 0x10,
};

/*  205 */
enum ReplicaTypeEnum
{
  dbRepMakeReadOnly = 0x2,
  dbRepMakePartial = 0x1,
};

/*  206 */
enum WorkspaceTypeEnum
{
  dbUseODBC = 0x1,
  dbUseJet = 0x2,
};

/*  207 */
enum CursorDriverEnum
{
  dbUseDefaultCursor = 0xFFFFFFFF,
  dbUseODBCCursor = 0x1,
  dbUseServerCursor = 0x2,
  dbUseClientBatchCursor = 0x3,
  dbUseNoCursor = 0x4,
};

/*  208 */
enum DriverPromptEnum
{
  dbDriverPrompt = 0x2,
  dbDriverNoPrompt = 0x1,
  dbDriverComplete = 0x0,
  dbDriverCompleteRequired = 0x3,
};

/*  209 */
enum SetOptionEnum
{
  dbPageTimeout = 0x6,
  dbLockRetry = 0x39,
  dbMaxBufferSize = 0x8,
  dbUserCommitSync = 0x3A,
  dbImplicitCommitSync = 0x3B,
  dbExclusiveAsyncDelay = 0x3C,
  dbSharedAsyncDelay = 0x3D,
  dbMaxLocksPerFile = 0x3E,
  dbLockDelay = 0x3F,
  dbRecycleLVs = 0x41,
  dbFlushTransactionTimeout = 0x42,
};

/*  210 */
enum ParameterDirectionEnum
{
  dbParamInput = 0x1,
  dbParamOutput = 0x2,
  dbParamInputOutput = 0x3,
  dbParamReturnValue = 0x4,
};

/*  211 */
enum UpdateTypeEnum
{
  dbUpdateBatch = 0x4,
  dbUpdateRegular = 0x1,
  dbUpdateCurrentRecord = 0x2,
};

/*  212 */
enum RecordStatusEnum
{
  dbRecordUnmodified = 0x0,
  dbRecordModified = 0x1,
  dbRecordNew = 0x2,
  dbRecordDeleted = 0x3,
  dbRecordDBDeleted = 0x4,
};

/*  213 */
enum OLE_NOTIFICATION
{
  OLE_CHANGED = 0x0,
  OLE_SAVED = 0x1,
  OLE_CLOSED = 0x2,
  OLE_RENAMED = 0x3,
  OLE_CHANGED_STATE = 0x4,
  OLE_CHANGED_ASPECT = 0x5,
};

/*  214 */
enum CommitTransOptionsEnum
{
  dbForceOSFlush = 0x1,
};

/*  215 */
enum _DAOSuppHelp
{
  LogMessages = 0x0,
  KeepLocal = 0x0,
  Replicable = 0x0,
  ReplicableBool = 0x0,
  V1xNullBehavior = 0x0,
};

/*  216 */
enum OLE_OBJTYPE
{
  OT_UNKNOWN = 0x0,
  OT_LINK = 0x1,
  OT_EMBEDDED = 0x2,
  OT_STATIC = 0x3,
  OT_OLE2 = 0x100,
};

/*  217 */
enum AFX_REG_FLAGS
{
  afxRegDefault = 0x0,
  afxRegInsertable = 0x1,
  afxRegApartmentThreading = 0x2,
};

/*  218 */
enum SHREGDEL_FLAGS
{
  SHREGDEL_DEFAULT = 0x0,
  SHREGDEL_HKCU = 0x1,
  SHREGDEL_HKLM = 0x10,
  SHREGDEL_BOTH = 0x11,
};

/*  219 */
enum SHREGENUM_FLAGS
{
  SHREGENUM_DEFAULT = 0x0,
  SHREGENUM_HKCU = 0x1,
  SHREGENUM_HKLM = 0x10,
  SHREGENUM_BOTH = 0x11,
};

/*  220 */
enum DAOCOLKIND
{
  DAOCOLKIND_IND = 0x0,
  DAOCOLKIND_STR = 0x1,
  DAOCOLKIND_WSTR = 0x2,
};

/*  221 */
enum CDocTemplate::DocStringIndex
{
  windowTitle = 0x0,
  docName = 0x1,
  fileNewName = 0x2,
  filterName = 0x3,
  filterExt = 0x4,
  regFileTypeId = 0x5,
  regFileTypeName = 0x6,
};

/*  222 */
enum CDocTemplate::Confidence
{
  noAttempt = 0x0,
  maybeAttemptForeign = 0x1,
  maybeAttemptNative = 0x2,
  yesAttemptForeign = 0x3,
  yesAttemptNative = 0x4,
  yesAlreadyOpen = 0x5,
};

/*  223 */
enum CCommandLineInfo::__unnamed
{
  FileNew = 0x0,
  FileOpen = 0x1,
  FilePrint = 0x2,
  FilePrintTo = 0x3,
  FileDDE = 0x4,
  AppUnregister = 0x5,
  FileNothing = 0xFFFFFFFF,
};

/*  224 */
enum CArchive::Mode
{
  store = 0x0,
  load = 0x1,
  bNoFlushOnDelete = 0x2,
  bNoByteSwap = 0x4,
};

/*  225 */
enum CFrameWnd::BorderCmd
{
  borderGet = 0x1,
  borderRequest = 0x2,
  borderSet = 0x3,
};

/*  226 */
enum CFrameWnd::IdleFlags
{
  idleMenu = 0x1,
  idleTitle = 0x2,
  idleNotify = 0x4,
  idleLayout = 0x8,
};

/*  227 */
enum CWnd::AdjustType
{
  adjustBorder = 0x0,
  adjustOutside = 0x1,
};

/*  228 */
enum CWnd::RepositionFlags
{
  reposDefault = 0x0,
  reposQuery = 0x1,
  reposExtra = 0x2,
};

/*  229 */
enum CControlBar::StateFlags
{
  delayHide = 0x1,
  delayShow = 0x2,
  tempHide = 0x4,
  statusSet = 0x8,
};

/*  230 */
enum CSplitterWnd::ESplitType
{
  splitBox = 0x0,
  splitBar = 0x1,
  splitIntersection = 0x2,
  splitBorder = 0x3,
};

/*  231 */
enum CFile::OpenFlags
{
  modeRead = 0x0,
  modeWrite = 0x1,
  modeReadWrite = 0x2,
  shareCompat = 0x0,
  shareExclusive = 0x10,
  shareDenyWrite = 0x20,
  shareDenyRead = 0x30,
  shareDenyNone = 0x40,
  modeNoInherit = 0x80,
  modeCreate = 0x1000,
  modeNoTruncate = 0x2000,
  typeText = 0x4000,
  typeBinary = 0x8000,
};

/*  232 */
enum CFile::Attribute
{
  normal = 0x0,
  readOnly = 0x1,
  hidden = 0x2,
  system = 0x4,
  volume = 0x8,
  directory = 0x10,
  archive = 0x20,
};

/*  233 */
enum CFile::SeekPosition
{
  begin = 0x0,
  current = 0x1,
  end = 0x2,
};

/*  234 */
enum CFile::__unnamed
{
  hFileNull = 0xFFFFFFFF,
};

/*  235 */
enum CFile::BufferCommand
{
  bufferRead = 0x0,
  bufferWrite = 0x1,
  bufferCommit = 0x2,
  bufferCheck = 0x3,
};

/*  236 */
enum COleClientItem::ItemState
{
  emptyState = 0x0,
  loadedState = 0x1,
  openState = 0x2,
  activeState = 0x3,
  activeUIState = 0x4,
};

/*  237 */
enum CFileException::__unnamed
{
  none = 0x0,
  generic = 0x1,
  fileNotFound = 0x2,
  badPath = 0x3,
  tooManyOpenFiles = 0x4,
  accessDenied = 0x5,
  invalidFile = 0x6,
  removeCurrentDir = 0x7,
  directoryFull = 0x8,
  badSeek = 0x9,
  hardIO = 0xA,
  sharingViolation = 0xB,
  lockViolation = 0xC,
  diskFull = 0xD,
  endOfFile = 0xE,
};

/*  238 */
enum AFX_EVENT::__unnamed
{
  event = 0x0,
  propRequest = 0x1,
  propChanged = 0x2,
  propDSCNotify = 0x3,
};

/*  239 */
typedef CFile::SeekPosition std::ios_base::seekdir;

/*  240 */
enum std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::__unnamed
{
  _ALSIZE = 0x200,
  _MINSIZE = 0x20,
};

/*  241 */
enum std::basic_filebuf<unsigned short,std::char_traits<unsigned short> >::_Initfl
{
  _Newfl = 0x0,
  _Openfl = 0x1,
  _Closefl = 0x2,
};

/*  242 */
typedef std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::__unnamed std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::__unnamed;

/*  243 */
typedef std::basic_filebuf<unsigned short,std::char_traits<unsigned short> >::_Initfl std::basic_filebuf<char,std::char_traits<char> >::_Initfl;

/*  244 */
enum CCharacter::__unnamed
{
  slot_max = 0x5,
};

/*  245 */
enum _100_per_random_table::__unnamed
{
  max_record_num = 0x64,
};

/*  246 */
enum CGameObject::__unnamed
{
  stun_std_term = 0x3E8,
};

/*  247 */
enum CFrameRate::__unnamed
{
  ESPECT_FPS = 0xF,
  MAX_MOVE_UNIT = 0x1,
};

/*  248 */
enum _mon_block_fld::__unnamed
{
  _max_list = 0x14,
};

/*  249 */
enum CMapData::__unnamed
{
  mine_grade_reset_timer = 0x1B7740,
};

/*  250 */
enum _store_dummy::__unnamed
{
  item_store = 0x0,
  used_store = 0x1,
};

/*  251 */
enum _res_dummy::__unnamed
{
  range_grade_num = 0x3,
};

/*  252 */
enum _make_item_request_clzo::__unnamed
{
  material_num = 0x64,
};

/*  253 */
typedef _make_item_request_clzo::__unnamed _combine_item_request_clzo::__unnamed;

/*  254 */
typedef _a_trade_buy_item_result_zocl::__unnamed _a_trade_buy_item_request_zocl::__unnamed;

/*  255 */
enum _skill_fld::__unnamed
{
  attack_type_none = 0x0,
  attack_type_std = 0x1,
  attack_type_stun = 0x2,
};

/*  256 */
enum CPlayerDB::__unnamed
{
  total_storage_num = 0x6,
};

/*  257 */
enum CGuild::__unnamed
{
  max_applier_num = 0x20,
};

/*  258 */
enum _TOWER_PARAM::__unnamed
{
  max_param = 0x6,
};

/*  259 */
enum _TRAP_PARAM::__unnamed
{
  max_param_num = 0x14,
};

/*  260 */
enum _ATTACK_DELAY_CHECKER::__unnamed
{
  temp_memory_mastery = 0xA,
};

/*  261 */
enum _BUDDY_LIST::__unnamed
{
  max_temp_num = 0x8,
};

/*  262 */
enum _Quest_fld::__unnamed
{
  quest_type_one = 0x0,
  quest_type_party = 0x1,
};

/*  263 */
enum CUserDB::__unnamed
{
  lobby_dur_max_time = 0x1B7740,
};

/*  264 */
enum CDarkHoleChannel::__unnamed
{
  max_cash_past_member_num = 0x20,
};

/*  265 */
enum CAnimus::__unnamed
{
  role_warrior = 0x1,
  role_ranger = 0x2,
  role_healer = 0x3,
  role_force = 0x4,
  role_etc = 0x0,
};

/*  266 */
enum CItemBox::__unnamed
{
  tm_box_exist = 0xEA60,
  tm_box_hurry = 0xC350,
  tm_box_owner_take = 0x4E20,
};

/*  267 */
enum CBattleDungeon::__unnamed
{
  enter_quf_free = 0x0,
  enter_guf_party = 0x1,
};

/*  268 */
enum _DB_QRY_SYN_DATA::__unnamed
{
  max_data_size = 0x3176,
};

/*  269 */
enum SKILL::__unnamed
{
  FIREEL = 0x0,
  WATEREL = 0x1,
  SOILEL = 0x2,
  WINDEL = 0x3,
  NONE = 0xFFFFFFFF,
};

/*  270 */
enum _monster_fld::__unnamed
{
  max_child_kind = 0x3,
};

/*  271 */
enum CMonster::__unnamed
{
  grade_std = 0x0,
  grade_boss = 0x1,
};

/*  272 */
enum CCollLineDraw::__unnamed
{
  max_coll_point = 0x3A98,
};

/*  273 */
enum CWeaponBulletLinkTable::__unnamed
{
  max_link_num = 0x32,
};

/*  274 */
enum _guild_applier_info::__unnamed
{
  del_code_pass = 0x0,
  del_code_reject = 0x1,
  del_code_cancel = 0x2,
};

/*  275 */
enum _suggested_matter::__unnamed
{
  vote_code_appr = 0x0,
  vote_code_oppo = 0x1,
  vote_code_num = 0x2,
};

/*  276 */
enum CMapDisplay::__unnamed
{
  kind_num = 0x2,
};

/*  277 */
enum CDummyDraw::__unnamed
{
  type_mon_dummy = 0x0,
  type_potal_dummy = 0x1,
  type_item_store_dummy = 0x2,
  type_start_dummy = 0x3,
  type_bind_dummy = 0x4,
  type_res_dummy = 0x5,
  type_stone_dummy = 0x6,
  type_keeper_dummy = 0x7,
  type_quest_dummy = 0x8,
  type_fail_dummy = 0x9,
};

/*  278 */
enum CMapOperation::__unnamed
{
  obj_loop_term = 0x32,
  obj_loop_unit = 0xA,
};

/*  279 */
enum UTA::__unnamed
{
  reg_item_fee = 0x12C,
};

/*  280 */
typedef COpenDlg::__unnamed CIPXTab::__unnamed;

/*  281 */
typedef COpenDlg::__unnamed CObjectTab::__unnamed;

/*  282 */
enum CTransportShip::__unnamed
{
  max_ride_num = 0xFC0,
};

/*  283 */
typedef COpenDlg::__unnamed CObjectSearchDlg::__unnamed;

/*  284 */
enum _dh_mission_setup::__unnamed
{
  job_order_and = 0x0,
  job_order_or = 0x1,
  JOB_ORDER_NUM = 0x2,
};

/*  285 */
enum _dh_quest_setup::__unnamed
{
  max_dummy_block = 0x20,
};

/*  286 */
enum _dh_mission_mgr::__unnamed
{
  max_portal_quest = 0x80,
};

/*  287 */
enum CDarkHole::__unnamed
{
  open_term = 0xEA60,
};

/*  288 */
enum _STAT_DB_BASE::__unnamed
{
  DATAPOS_WPCNT = 0x0,
  DATAPOS_DEF = 0x2,
  DATAPOS_SHLD = 0x3,
  DATAPOS_SKILL = 0x4,
  DATAPOS_FORCE = 0x34,
  DATAPOS_MAKE = 0x4C,
  DATAPOS_SPECIAL = 0x4F,
};

/*  289 */
enum _STORAGE_POS::__unnamed
{
  INVEN = 0x0,
  EQUIP = 0x1,
  EMBELLISH = 0x2,
  FORCE = 0x3,
  ANIMUS = 0x4,
  TRUNK = 0x5,
};

/*  290 */
enum CLootingMgr::__unnamed
{
  list_num = 0x40,
};

/*  291 */
typedef COpenDlg::__unnamed CDisplayView::__unnamed;

/*  292 */
enum CInfoSheet::__unnamed
{
  TCP_TAB = 0x0,
  IPX_TAB = 0x1,
  SERVER_TAB = 0x2,
  OBJECT_TAB = 0x3,
  MAP_TAB = 0x4,
};

/*  293 */
enum _react_sub_setup::__unnamed
{
  react_type_portal = 0x0,
  REACT_TYPE_NUM = 0x1,
};

/*  294 */
enum CNetProcess::__unnamed
{
  send_log = 0x0,
  recv_log = 0x1,
  system_log = 0x2,
};

/*  295 */
typedef COpenDlg::__unnamed CTCPTab::__unnamed;

/*  296 */
typedef COpenDlg::__unnamed CServerTab::__unnamed;

/*  297 */
typedef COpenDlg::__unnamed CMapTab::__unnamed;

/*  298 */
enum _FORCE_CLOSE::__unnamed
{
  max_fd_node = 0xFFFF,
};

/*  299 */
enum _D3DRESOURCETYPE
{
  D3DRTYPE_SURFACE = 0x1,
  D3DRTYPE_VOLUME = 0x2,
  D3DRTYPE_TEXTURE = 0x3,
  D3DRTYPE_VOLUMETEXTURE = 0x4,
  D3DRTYPE_CUBETEXTURE = 0x5,
  D3DRTYPE_VERTEXBUFFER = 0x6,
  D3DRTYPE_INDEXBUFFER = 0x7,
  D3DRTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/*  300 */
enum _D3DFORMAT
{
  D3DFMT_UNKNOWN = 0x0,
  D3DFMT_R8G8B8 = 0x14,
  D3DFMT_A8R8G8B8 = 0x15,
  D3DFMT_X8R8G8B8 = 0x16,
  D3DFMT_R5G6B5 = 0x17,
  D3DFMT_X1R5G5B5 = 0x18,
  D3DFMT_A1R5G5B5 = 0x19,
  D3DFMT_A4R4G4B4 = 0x1A,
  D3DFMT_R3G3B2 = 0x1B,
  D3DFMT_A8 = 0x1C,
  D3DFMT_A8R3G3B2 = 0x1D,
  D3DFMT_X4R4G4B4 = 0x1E,
  D3DFMT_A2B10G10R10 = 0x1F,
  D3DFMT_G16R16 = 0x22,
  D3DFMT_A8P8 = 0x28,
  D3DFMT_P8 = 0x29,
  D3DFMT_L8 = 0x32,
  D3DFMT_A8L8 = 0x33,
  D3DFMT_A4L4 = 0x34,
  D3DFMT_V8U8 = 0x3C,
  D3DFMT_L6V5U5 = 0x3D,
  D3DFMT_X8L8V8U8 = 0x3E,
  D3DFMT_Q8W8V8U8 = 0x3F,
  D3DFMT_V16U16 = 0x40,
  D3DFMT_W11V11U10 = 0x41,
  D3DFMT_A2W10V10U10 = 0x43,
  D3DFMT_UYVY = 0x59565955,
  D3DFMT_YUY2 = 0x32595559,
  D3DFMT_DXT1 = 0x31545844,
  D3DFMT_DXT2 = 0x32545844,
  D3DFMT_DXT3 = 0x33545844,
  D3DFMT_DXT4 = 0x34545844,
  D3DFMT_DXT5 = 0x35545844,
  D3DFMT_D16_LOCKABLE = 0x46,
  D3DFMT_D32 = 0x47,
  D3DFMT_D15S1 = 0x49,
  D3DFMT_D24S8 = 0x4B,
  D3DFMT_D16 = 0x50,
  D3DFMT_D24X8 = 0x4D,
  D3DFMT_D24X4S4 = 0x4F,
  D3DFMT_VERTEXDATA = 0x64,
  D3DFMT_INDEX16 = 0x65,
  D3DFMT_INDEX32 = 0x66,
  D3DFMT_FORCE_DWORD = 0x7FFFFFFF,
};

/*  301 */
enum _D3DPOOL
{
  D3DPOOL_DEFAULT = 0x0,
  D3DPOOL_MANAGED = 0x1,
  D3DPOOL_SYSTEMMEM = 0x2,
  D3DPOOL_SCRATCH = 0x3,
  D3DPOOL_FORCE_DWORD = 0x7FFFFFFF,
};

/*  302 */
enum _D3DBACKBUFFER_TYPE
{
  D3DBACKBUFFER_TYPE_MONO = 0x0,
  D3DBACKBUFFER_TYPE_LEFT = 0x1,
  D3DBACKBUFFER_TYPE_RIGHT = 0x2,
  D3DBACKBUFFER_TYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/*  303 */
enum _D3DMULTISAMPLE_TYPE
{
  D3DMULTISAMPLE_NONE = 0x0,
  D3DMULTISAMPLE_2_SAMPLES = 0x2,
  D3DMULTISAMPLE_3_SAMPLES = 0x3,
  D3DMULTISAMPLE_4_SAMPLES = 0x4,
  D3DMULTISAMPLE_5_SAMPLES = 0x5,
  D3DMULTISAMPLE_6_SAMPLES = 0x6,
  D3DMULTISAMPLE_7_SAMPLES = 0x7,
  D3DMULTISAMPLE_8_SAMPLES = 0x8,
  D3DMULTISAMPLE_9_SAMPLES = 0x9,
  D3DMULTISAMPLE_10_SAMPLES = 0xA,
  D3DMULTISAMPLE_11_SAMPLES = 0xB,
  D3DMULTISAMPLE_12_SAMPLES = 0xC,
  D3DMULTISAMPLE_13_SAMPLES = 0xD,
  D3DMULTISAMPLE_14_SAMPLES = 0xE,
  D3DMULTISAMPLE_15_SAMPLES = 0xF,
  D3DMULTISAMPLE_16_SAMPLES = 0x10,
  D3DMULTISAMPLE_FORCE_DWORD = 0x7FFFFFFF,
};

/*  304 */
enum _D3DTRANSFORMSTATETYPE
{
  D3DTS_VIEW = 0x2,
  D3DTS_PROJECTION = 0x3,
  D3DTS_TEXTURE0 = 0x10,
  D3DTS_TEXTURE1 = 0x11,
  D3DTS_TEXTURE2 = 0x12,
  D3DTS_TEXTURE3 = 0x13,
  D3DTS_TEXTURE4 = 0x14,
  D3DTS_TEXTURE5 = 0x15,
  D3DTS_TEXTURE6 = 0x16,
  D3DTS_TEXTURE7 = 0x17,
  D3DTS_FORCE_DWORD = 0x7FFFFFFF,
};

/*  305 */
enum _D3DRENDERSTATETYPE
{
  D3DRS_ZENABLE = 0x7,
  D3DRS_FILLMODE = 0x8,
  D3DRS_SHADEMODE = 0x9,
  D3DRS_LINEPATTERN = 0xA,
  D3DRS_ZWRITEENABLE = 0xE,
  D3DRS_ALPHATESTENABLE = 0xF,
  D3DRS_LASTPIXEL = 0x10,
  D3DRS_SRCBLEND = 0x13,
  D3DRS_DESTBLEND = 0x14,
  D3DRS_CULLMODE = 0x16,
  D3DRS_ZFUNC = 0x17,
  D3DRS_ALPHAREF = 0x18,
  D3DRS_ALPHAFUNC = 0x19,
  D3DRS_DITHERENABLE = 0x1A,
  D3DRS_ALPHABLENDENABLE = 0x1B,
  D3DRS_FOGENABLE = 0x1C,
  D3DRS_SPECULARENABLE = 0x1D,
  D3DRS_ZVISIBLE = 0x1E,
  D3DRS_FOGCOLOR = 0x22,
  D3DRS_FOGTABLEMODE = 0x23,
  D3DRS_FOGSTART = 0x24,
  D3DRS_FOGEND = 0x25,
  D3DRS_FOGDENSITY = 0x26,
  D3DRS_EDGEANTIALIAS = 0x28,
  D3DRS_ZBIAS = 0x2F,
  D3DRS_RANGEFOGENABLE = 0x30,
  D3DRS_STENCILENABLE = 0x34,
  D3DRS_STENCILFAIL = 0x35,
  D3DRS_STENCILZFAIL = 0x36,
  D3DRS_STENCILPASS = 0x37,
  D3DRS_STENCILFUNC = 0x38,
  D3DRS_STENCILREF = 0x39,
  D3DRS_STENCILMASK = 0x3A,
  D3DRS_STENCILWRITEMASK = 0x3B,
  D3DRS_TEXTUREFACTOR = 0x3C,
  D3DRS_WRAP0 = 0x80,
  D3DRS_WRAP1 = 0x81,
  D3DRS_WRAP2 = 0x82,
  D3DRS_WRAP3 = 0x83,
  D3DRS_WRAP4 = 0x84,
  D3DRS_WRAP5 = 0x85,
  D3DRS_WRAP6 = 0x86,
  D3DRS_WRAP7 = 0x87,
  D3DRS_CLIPPING = 0x88,
  D3DRS_LIGHTING = 0x89,
  D3DRS_AMBIENT = 0x8B,
  D3DRS_FOGVERTEXMODE = 0x8C,
  D3DRS_COLORVERTEX = 0x8D,
  D3DRS_LOCALVIEWER = 0x8E,
  D3DRS_NORMALIZENORMALS = 0x8F,
  D3DRS_DIFFUSEMATERIALSOURCE = 0x91,
  D3DRS_SPECULARMATERIALSOURCE = 0x92,
  D3DRS_AMBIENTMATERIALSOURCE = 0x93,
  D3DRS_EMISSIVEMATERIALSOURCE = 0x94,
  D3DRS_VERTEXBLEND = 0x97,
  D3DRS_CLIPPLANEENABLE = 0x98,
  D3DRS_SOFTWAREVERTEXPROCESSING = 0x99,
  D3DRS_POINTSIZE = 0x9A,
  D3DRS_POINTSIZE_MIN = 0x9B,
  D3DRS_POINTSPRITEENABLE = 0x9C,
  D3DRS_POINTSCALEENABLE = 0x9D,
  D3DRS_POINTSCALE_A = 0x9E,
  D3DRS_POINTSCALE_B = 0x9F,
  D3DRS_POINTSCALE_C = 0xA0,
  D3DRS_MULTISAMPLEANTIALIAS = 0xA1,
  D3DRS_MULTISAMPLEMASK = 0xA2,
  D3DRS_PATCHEDGESTYLE = 0xA3,
  D3DRS_PATCHSEGMENTS = 0xA4,
  D3DRS_DEBUGMONITORTOKEN = 0xA5,
  D3DRS_POINTSIZE_MAX = 0xA6,
  D3DRS_INDEXEDVERTEXBLENDENABLE = 0xA7,
  D3DRS_COLORWRITEENABLE = 0xA8,
  D3DRS_TWEENFACTOR = 0xAA,
  D3DRS_BLENDOP = 0xAB,
  D3DRS_POSITIONORDER = 0xAC,
  D3DRS_NORMALORDER = 0xAD,
  D3DRS_FORCE_DWORD = 0x7FFFFFFF,
};

/*  306 */
enum _D3DSTATEBLOCKTYPE
{
  D3DSBT_ALL = 0x1,
  D3DSBT_PIXELSTATE = 0x2,
  D3DSBT_VERTEXSTATE = 0x3,
  D3DSBT_FORCE_DWORD = 0x7FFFFFFF,
};

/*  307 */
enum _D3DTEXTURESTAGESTATETYPE
{
  D3DTSS_COLOROP = 0x1,
  D3DTSS_COLORARG1 = 0x2,
  D3DTSS_COLORARG2 = 0x3,
  D3DTSS_ALPHAOP = 0x4,
  D3DTSS_ALPHAARG1 = 0x5,
  D3DTSS_ALPHAARG2 = 0x6,
  D3DTSS_BUMPENVMAT00 = 0x7,
  D3DTSS_BUMPENVMAT01 = 0x8,
  D3DTSS_BUMPENVMAT10 = 0x9,
  D3DTSS_BUMPENVMAT11 = 0xA,
  D3DTSS_TEXCOORDINDEX = 0xB,
  D3DTSS_ADDRESSU = 0xD,
  D3DTSS_ADDRESSV = 0xE,
  D3DTSS_BORDERCOLOR = 0xF,
  D3DTSS_MAGFILTER = 0x10,
  D3DTSS_MINFILTER = 0x11,
  D3DTSS_MIPFILTER = 0x12,
  D3DTSS_MIPMAPLODBIAS = 0x13,
  D3DTSS_MAXMIPLEVEL = 0x14,
  D3DTSS_MAXANISOTROPY = 0x15,
  D3DTSS_BUMPENVLSCALE = 0x16,
  D3DTSS_BUMPENVLOFFSET = 0x17,
  D3DTSS_TEXTURETRANSFORMFLAGS = 0x18,
  D3DTSS_ADDRESSW = 0x19,
  D3DTSS_COLORARG0 = 0x1A,
  D3DTSS_ALPHAARG0 = 0x1B,
  D3DTSS_RESULTARG = 0x1C,
  D3DTSS_FORCE_DWORD = 0x7FFFFFFF,
};

/*  308 */
enum _D3DPRIMITIVETYPE
{
  D3DPT_POINTLIST = 0x1,
  D3DPT_LINELIST = 0x2,
  D3DPT_LINESTRIP = 0x3,
  D3DPT_TRIANGLELIST = 0x4,
  D3DPT_TRIANGLESTRIP = 0x5,
  D3DPT_TRIANGLEFAN = 0x6,
  D3DPT_FORCE_DWORD = 0x7FFFFFFF,
};

/*  309 */
enum _D3DCUBEMAP_FACES
{
  D3DCUBEMAP_FACE_POSITIVE_X = 0x0,
  D3DCUBEMAP_FACE_NEGATIVE_X = 0x1,
  D3DCUBEMAP_FACE_POSITIVE_Y = 0x2,
  D3DCUBEMAP_FACE_NEGATIVE_Y = 0x3,
  D3DCUBEMAP_FACE_POSITIVE_Z = 0x4,
  D3DCUBEMAP_FACE_NEGATIVE_Z = 0x5,
  D3DCUBEMAP_FACE_FORCE_DWORD = 0x7FFFFFFF,
};

/*  310 */
enum _D3DDEVTYPE
{
  D3DDEVTYPE_HAL = 0x1,
  D3DDEVTYPE_REF = 0x2,
  D3DDEVTYPE_SW = 0x3,
  D3DDEVTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/*  311 */
enum _D3DSWAPEFFECT
{
  D3DSWAPEFFECT_DISCARD = 0x1,
  D3DSWAPEFFECT_FLIP = 0x2,
  D3DSWAPEFFECT_COPY = 0x3,
  D3DSWAPEFFECT_COPY_VSYNC = 0x4,
  D3DSWAPEFFECT_FORCE_DWORD = 0x7FFFFFFF,
};

/*  312 */
enum _D3DLIGHTTYPE
{
  D3DLIGHT_POINT = 0x1,
  D3DLIGHT_SPOT = 0x2,
  D3DLIGHT_DIRECTIONAL = 0x3,
  D3DLIGHT_FORCE_DWORD = 0x7FFFFFFF,
};

/*  313 */
enum _D3DBASISTYPE
{
  D3DBASIS_BEZIER = 0x0,
  D3DBASIS_BSPLINE = 0x1,
  D3DBASIS_INTERPOLATE = 0x2,
  D3DBASIS_FORCE_DWORD = 0x7FFFFFFF,
};

/*  314 */
enum _D3DORDERTYPE
{
  D3DORDER_LINEAR = 0x1,
  D3DORDER_QUADRATIC = 0x2,
  D3DORDER_CUBIC = 0x3,
  D3DORDER_QUINTIC = 0x5,
  D3DORDER_FORCE_DWORD = 0x7FFFFFFF,
};

/*  315 */
enum std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Mref
{
  _FROZEN = 0xFF,
};

/*  316 */
enum std::basic_string<char,std::char_traits<char>,std::allocator<char> >::__unnamed
{
  _MIN_SIZE = 0x1F,
};

/*  317 */
enum _make_tower_request_clzo::__unnamed
{
  max_material = 0x1E,
};

/*  318 */
typedef _starting_vote_inform_zocl::__unnamed _propose_vote_request_clzo::__unnamed;

/*  319 */
enum CVoteSystem::__unnamed
{
  point_code_approval = 0x0,
  point_code_apposition = 0x1,
  point_code_abstention = 0x2,
};

/*  320 */
typedef _starting_vote_inform_zocl::__unnamed _started_vote_inform_zocl::__unnamed;

/*  321 */
typedef _a_trade_buy_item_result_zocl::__unnamed _weapon_bullet_link_fld::__unnamed;

/*  322 */
enum _event_respawn::__unnamed
{
  max_mon_set = 0x10,
};

/*  323 */
enum ADDRESS_MODE
{
  AddrMode1616 = 0x0,
  AddrMode1632 = 0x1,
  AddrModeReal = 0x2,
  AddrModeFlat = 0x3,
};

/*  324 */
typedef _trans_gm_msg_inform_zocl::__unnamed _world_msg_inform_acwr::__unnamed;

/*  325 */
enum CRecallRequest::STATE
{
  EMPTY = 0x0,
  WAIT = 0x1,
  TIME_OUT = 0x2,
  DONE = 0x3,
};

/*  326 */
typedef CRecallRequest::STATE CReturnGate::STATE;

/*  327 */
enum _other_shape_request_clzo::__unnamed
{
  SHAPE_ALL = 0x0,
  SHAPE_PART = 0x1,
};

/*  328 */
enum _ItemMakeData_fld::__unnamed
{
  make_item_std_prob = 0x2710,
};

/*  329 */
enum _ItemCombine_fld::__unnamed
{
  combine_item_std_prob = 0x2710,
};

/*  330 */
enum _ItemExchange_fld::__unnamed
{
  exchange_item_std_prob = 0x2710,
};

/*  331 */
typedef COpenDlg::__unnamed CGameServerView::__unnamed;

/*  332 */
typedef SKILL::__unnamed CRaceWarRewardItemDropManager::STATE;

/*  333 */
typedef CMgrGuildHistory::__unnamed CMgrAvatorQuestHistory::__unnamed;

/*  334 */
typedef std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Mref std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::_Mref;

/*  335 */
typedef std::basic_string<char,std::char_traits<char>,std::allocator<char> >::__unnamed std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >::__unnamed;

/*  336 */
typedef CFileException::__unnamed std::locale::_Category;

/*  337 */
enum std::ios_base::_Fmtflags
{
  skipws = 0x1,
  unitbuf = 0x2,
  uppercase = 0x4,
  showbase = 0x8,
  showpoint = 0x10,
  showpos = 0x20,
  left = 0x40,
  right = 0x80,
  internal = 0x100,
  dec = 0x200,
  oct = 0x400,
  hex = 0x800,
  scientific = 0x1000,
  fixed = 0x2000,
  boolalpha = 0x4000,
  adjustfield = 0x1C0,
  basefield = 0xE00,
  floatfield = 0x3000,
  _Fmtmask = 0x7FFF,
  _Fmtzero = 0x0,
};

/*  338 */
enum std::ios_base::_Iostate
{
  goodbit = 0x0,
  eofbit = 0x1,
  failbit = 0x2,
  badbit = 0x4,
  _Statmask = 0x7,
};

/*  339 */
enum std::ios_base::_Openmode
{
  in = 0x1,
  out = 0x2,
  ate = 0x4,
  app = 0x8,
  trunc = 0x10,
  binary = 0x20,
};

/*  340 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/*  341 */
enum std::codecvt_base::_Result
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/*  342 */
enum std::ctype_base::_Mask
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
};

/*  343 */
struct __declspec(align(4)) CRFNewDatabase
{
  CRFNewDatabaseVtbl *vfptr;
  void *m_hEnv;
  void *m_hDbc;
  void *m_hStmtSelect;
  void *m_hStmtUpdate;
  char m_bConectionActive;
  char m_bSaveDBLog;
  __declspec(align(4)) CLogFile m_ProcessLogW;
  CLogFile m_ErrorLogW;
  CLogFile m_ProcessLogA;
  CLogFile m_ErrorLogA;
  char m_byLogFileHour;
  char m_szOdbcName[32];
  char m_szAccountName[32];
  char m_szPassword[32];
};

/*  344 */
struct CRFNewDatabaseVtbl
{
  void *(__thiscall *__vecDelDtor)(CRFNewDatabase *this, unsigned int);
};

/*  345 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/*  346 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/*  347 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Spare[2];
};

/*  348 */
struct CNetCriticalSection
{
  _RTL_CRITICAL_SECTION m_cs;
};

/*  349 */
struct CLogFile
{
  char m_szFileName[128];
  unsigned int m_dwLogCount;
  int m_bWriteAble;
  CNetCriticalSection m_cs;
  char m_bAddCount;
  char m_bDate;
  char m_bTrace;
  char m_bInit;
};

/*  350 */
struct CRFWorldDatabase
{
  CRFNewDatabase baseclass_0;
};

/*  351 */
#pragma pack(push, 4)
struct _worlddb_character_array_info::__worlddb_charater_info
{
  unsigned __int16 wWorldCode;
  unsigned __int16 wszAvatorName[17];
  char bySlotIndex;
  char byRaceCode;
  char byLevel;
  unsigned int dwSerial;
  char byDck;
};
#pragma pack(pop)

/*  352 */
#pragma pack(push, 4)
struct _worlddb_character_array_info
{
  unsigned __int16 wCharacterCount;
  _worlddb_character_array_info::__worlddb_charater_info CharacterInfo[200];
};
#pragma pack(pop)

/*  353 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/*  354 */
#pragma pack(push, 4)
struct _worlddb_character_base_info
{
  unsigned __int16 wszName[17];
  unsigned int dwSerial;
  char byRace;
  char szClassCode[5];
  char bySlotIndex;
  char byLevel;
  unsigned int dwDalant;
  unsigned int dwGold;
  unsigned int dwBaseShape;
  unsigned int dwLastConnTime;
  char szAccount[17];
  __int16 shEKArray[8];
  unsigned int dwEUArray[8];
  unsigned int dwCheckSum;
};
#pragma pack(pop)

/*  355 */
#pragma pack(push, 8)
struct _worlddb_character_general_info
{
  unsigned int dwHP;
  unsigned int dwFP;
  unsigned int dwSP;
  unsigned int dwDP;
  double dExp;
  double dLoseExp;
  char byBagNum;
  char byMapCode;
  float fStartPos[3];
  unsigned int dwTotalPlayMin;
  char szLeftResList[160];
  int lEK[6];
  __int16 shED[6];
  int lF[88];
  unsigned int dwWM[2];
  unsigned int dwFM[24];
  unsigned int dwSM[48];
  unsigned int dwMI[3];
  unsigned int dwSR;
  unsigned int dwDM;
  unsigned int dwPM;
  char byAK[4];
  unsigned int dwAD[4];
  unsigned int dwAP[4];
  __int16 zClassHistory[3];
  unsigned int dwClassInitCnt;
  char byLastClassGrade;
  double dPvPPoint;
  double dPvPCashBag;
  char szBindMapCode[12];
  char szBindDummy[12];
  unsigned int dwGuildSerial;
  char byGuildGrade;
};
#pragma pack(pop)

/*  356 */
struct _worlddb_inven_info::__inven_key
{
  int lK;
  unsigned int dwD;
  unsigned int dwU;
};

/*  357 */
struct _worlddb_inven_info
{
  _worlddb_inven_info::__inven_key invenKey[100];
};

/*  358 */
#pragma pack(push, 4)
struct _worlddb_trade_info::__trade_key
{
  char byInvenIndex;
  unsigned int dwPrice;
  unsigned int dwPass;
};
#pragma pack(pop)

/*  359 */
struct _worlddb_trade_info
{
  _worlddb_trade_info::__trade_key TradeKey[10];
};

/*  360 */
#pragma pack(push, 4)
struct _worlddb_trunk_info::__trunk_key
{
  int lK;
  unsigned int dwD;
  unsigned int dwU;
  char byRace;
};
#pragma pack(pop)

/*  361 */
#pragma pack(push, 8)
struct _worlddb_trunk_info
{
  unsigned __int16 wszPasswd[13];
  double dDalant;
  double dGold;
  char byHintIndex;
  unsigned __int16 wszHintAnswer[17];
  char bySlotNum;
  _worlddb_trunk_info::__trunk_key trunkKey[100];
};
#pragma pack(pop)

/*  362 */
#pragma pack(push, 4)
struct _worlddb_character_base_info_array
{
  unsigned __int16 wCharacterCount;
  _worlddb_character_base_info CharacterInfo[200];
};
#pragma pack(pop)

/*  363 */
#pragma pack(push, 4)
struct _worlddb_unit_info_array::__worlddb_unit_info
{
  char byFrame;
  unsigned int dwGauge;
  char byPart[6];
  unsigned int dwBullet[2];
  unsigned int dwSpare[8];
  int nKeepingFee;
  int nPullingFee;
  unsigned int dwCutTime;
};
#pragma pack(pop)

/*  364 */
struct _worlddb_unit_info_array
{
  _worlddb_unit_info_array::__worlddb_unit_info UnitInfo[4];
};

/*  365 */
struct _worlddb_update_char_query
{
  char *szBaseQuery;
  char *szGeneralQuery;
  char *szInvenQuery;
  char *szUnitQuery;
  char *szUIQuery;
  char *szQuestQuery;
  unsigned __int16 *wszBuddyQuery;
  char *szNpcQuery;
  unsigned __int16 *wszTrunkQuery;
};

/*  366 */
#pragma pack(push, 8)
struct _worlddb_economy_history_info_array::_worlddb_economy_history_info
{
  double dTradeGold[3];
  double dTradeDalant[3];
  unsigned int dwManageValue;
  double dMineOre[3][3];
  double dCutOre[3][3];
};
#pragma pack(pop)

/*  367 */
#pragma pack(push, 8)
struct _worlddb_economy_history_info_array
{
  unsigned __int16 wRowCount;
  _worlddb_economy_history_info_array::_worlddb_economy_history_info EconomyData[12];
};
#pragma pack(pop)

/*  368 */
struct _worlddb_item_list::__item_charge_info
{
  unsigned int uiSerial;
  unsigned int dwItemCode_K;
  unsigned int dwItemCode_D;
  unsigned int dwItemCode_U;
  char szDate[32];
};

/*  369 */
struct _worlddb_item_list
{
  char byItemCount;
  __declspec(align(4)) _worlddb_item_list::__item_charge_info itemList[32];
};

/*  370 */
#pragma pack(push, 4)
struct _worlddb_quest_array::__quest_list
{
  char byQuestType;
  unsigned __int16 wIndex;
  unsigned __int16 wNum[3];
  unsigned int dwPassSec;
};
#pragma pack(pop)

/*  371 */
struct _worlddb_quest_array
{
  _worlddb_quest_array::__quest_list questList[15];
};

/*  372 */
struct _PVP_RANK_DATA
{
  char byRank;
  char byLv;
  unsigned __int16 wRate;
  unsigned __int16 wszName[17];
  char byGrade;
  unsigned __int16 wszGuildName[17];
};

/*  373 */
#pragma pack(push, 4)
struct _worlddb_userinterface_info
{
  unsigned __int16 wLinkBoard[50];
  unsigned int dwDamageCForce[8];
  unsigned int dwHelpCForce[8];
  unsigned int dwSkill[2];
  unsigned int dwForce[2];
  unsigned int dwCharacter[2];
  unsigned int dwAnimus[2];
  unsigned int dwInven;
  unsigned int dwInvenBag[5];
  char byLinkBoardLock;
};
#pragma pack(pop)

/*  374 */
#pragma pack(push, 4)
struct _worlddb_user_count_info::__user_count_info
{
  unsigned __int16 wYear;
  char byMonth;
  char byDay;
  char byHour;
  unsigned int dwAvgCount;
  unsigned int dwMaxCount;
};
#pragma pack(pop)

/*  375 */
#pragma pack(push, 4)
struct _worlddb_user_count_info
{
  unsigned __int16 wRowCount;
  _worlddb_user_count_info::__user_count_info UserCount[256];
};
#pragma pack(pop)

/*  376 */
struct _worlddb_guild_info::__guild_info
{
  unsigned int dwGuildSerial;
  char byGuildGrade;
  char byRace;
  unsigned __int16 wszGuildName[17];
  unsigned int dwEmblemBack;
  unsigned int dwEmblemMark;
  double dDalant;
  double dGold;
};

/*  377 */
struct _worlddb_guild_info
{
  unsigned __int16 wGuildCount;
  __declspec(align(8)) _worlddb_guild_info::__guild_info GuildData[300];
};

/*  378 */
#pragma pack(push, 4)
struct _worlddb_guild_member_info::__guild_member_info
{
  unsigned int dwSerial;
  unsigned __int16 wszName[17];
  char byClassInGuild;
  char byLv;
  unsigned int dwPvpPoint;
  unsigned __int16 wRank;
};
#pragma pack(pop)

/*  379 */
#pragma pack(push, 4)
struct _worlddb_guild_member_info
{
  unsigned __int16 wMemberCount;
  _worlddb_guild_member_info::__guild_member_info MemberData[150];
};
#pragma pack(pop)

/*  380 */
#pragma pack(push, 8)
struct _worlddb_guild_money_io_info::__io_money_data
{
  unsigned __int16 wszIOerName[17];
  unsigned int dwIOerSerial;
  int nIODalant;
  int nIOGold;
  double dLeftDalant;
  double dLeftGold;
  char byDate[4];
};
#pragma pack(pop)

/*  381 */
#pragma pack(push, 8)
struct _worlddb_guild_money_io_info
{
  unsigned __int16 wRecordCount;
  _worlddb_guild_money_io_info::__io_money_data IOData[100];
};
#pragma pack(pop)

/*  382 */
#pragma pack(push, 4)
struct _worlddb_rankinguild_info::__worlddb_rankinguild_data
{
  unsigned int dwSerial;
  char byGrade;
  char byLv;
  unsigned int dwPvpPoint;
};
#pragma pack(pop)

/*  383 */
#pragma pack(push, 4)
struct _worlddb_rankinguild_info
{
  unsigned __int16 wRecordCount;
  _worlddb_rankinguild_info::__worlddb_rankinguild_data MemberData[150];
};
#pragma pack(pop)

/*  384 */
#pragma pack(push, 4)
struct _worlddb_buddy_info::__buddy_data
{
  unsigned int dwSerial;
  unsigned __int16 wszName[17];
};
#pragma pack(pop)

/*  385 */
struct _worlddb_buddy_info
{
  _worlddb_buddy_info::__buddy_data BuddyData[50];
};

/*  386 */
struct _NOT_ARRANGED_AVATOR_DB
{
  unsigned int dwSerial;
  char byLv;
  char byRaceSexCode;
  unsigned int dwDalant;
  unsigned int dwGold;
  unsigned __int16 wszName[17];
  char szServer[33];
  char szClassCode[5];
};

/*  387 */
struct _worlddb_arrange_char_info
{
  char byCount;
  _NOT_ARRANGED_AVATOR_DB ArrangeChar[15];
};

/*  388 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/*  389 */
#pragma pack(push, 2)
struct CRFDBItemLog
{
  CRFNewDatabase baseclass_0;
  char m_bTblLtd;
  char m_bTblLtdItemInfo;
  char m_bTblLtdExpend;
  unsigned int m_dwKorTime;
};
#pragma pack(pop)

/*  390 */
struct ltd::_LTD_ITEMINFO::_iteminfo
{
  unsigned int m_dwItemSerial;
  char m_szItemCode[10];
  char m_szUpgradeCode[10];
  char m_szItemName[64];
  unsigned int m_dwDur;
  char m_byOverlapNum;
};

/*  391 */
struct ltd::_LTD_ITEMINFO
{
  char m_bExist;
  _SYSTEMTIME m_timeLocal;
  char m_bySubLogType;
  char m_byCnt;
  ltd::_LTD_ITEMINFO::_iteminfo m_ItemInfo[64];
};

/*  392 */
struct ltd::_LTD_EXPEND
{
  char m_bExist;
  _SYSTEMTIME m_timeLocal;
  char m_bySubLogType;
  unsigned __int16 m_wszEtcInfo[128];
};

/*  393 */
struct ltd::_LTD
{
  _SYSTEMTIME m_timeLocal;
  unsigned int m_dwLogSerial;
  char m_byMainLogType;
  char m_bySubLogType;
  unsigned int m_dwAccountSerial;
  unsigned int m_dwCharSerial;
  char m_szAccount[13];
  unsigned __int16 m_wszAvatorName[17];
  ltd::_LTD_ITEMINFO m_ItemInfo;
  ltd::_LTD_EXPEND m_Expend;
};

/*  394 */
struct CRFBillingdatabase
{
  CRFNewDatabase baseclass_0;
};

/*  395 */
struct _SRAND
{
  char dummy[1];
};

/*  396 */
struct _GLBID
{
  unsigned int dwIndex;
  unsigned int dwSerial;
};

/*  397 */
#pragma pack(push, 4)
struct _BILLING_INFO
{
  __int16 iType;
  char szCMS[7];
  int lRemainTime;
  _SYSTEMTIME stEndDate;
};
#pragma pack(pop)

/*  398 */
#pragma pack(push, 4)
struct _WAIT_ENTER_ACCOUNT
{
  char m_bLoad;
  unsigned int m_dwAccountSerial;
  char m_szAccountID[13];
  char m_byUserDgr;
  char m_bySubDgr;
  _GLBID m_gidGlobal;
  unsigned int m_dwKey[4];
  unsigned int m_dwLoadTime;
  char m_bChatLock;
  _BILLING_INFO m_BillingInfo;
};
#pragma pack(pop)

/*  399 */
struct CDisplay
{
  CDisplayVtbl *vfptr;
  IDirectDraw7 *m_pDD;
  IDirectDrawSurface7 *m_pddsFrontBuffer;
  IDirectDrawSurface7 *m_pddsBackBuffer;
  IDirectDrawSurface7 *m_pddsBackBufferLeft;
  HWND__ *m_hWnd;
  tagRECT m_rcWindow;
  CSize m_sizeWindow;
  int m_bWindowed;
  int m_bStereo;
};

/*  400 */
struct CDisplayVtbl
{
  int (__thiscall *DestroyObjects)(CDisplay *this);
};

/*  401 */
const struct _GUID
{
  unsigned int x;
  unsigned __int16 s1;
  unsigned __int16 s2;
  char c[8];
};

/*  402 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/*  403 */
struct IUnknownVtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/*  404 */
struct IDirectDraw7
{
  IUnknown baseclass_0;
};

/*  405 */
struct IDirectDrawSurface7
{
  IUnknown baseclass_0;
};

/*  406 */
struct HWND__
{
  int unused;
};

/*  407 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/*  408 */
struct tagSIZE
{
  int cx;
  int cy;
};

/*  409 */
struct CSize
{
  tagSIZE baseclass_0;
};

/*  410 */
struct _DDCOLORKEY
{
  unsigned int dwColorSpaceLowValue;
  unsigned int dwColorSpaceHighValue;
};

/*  411 */
struct _DDPIXELFORMAT::__unnamed::__unnamed
{
  unsigned __int16 wFlipMSTypes;
  unsigned __int16 wBltMSTypes;
};

/*  412 */
union $DAED55BFC94E6097478CA68F0B175AFE
{
  unsigned int dwRGBBitCount;
  unsigned int dwYUVBitCount;
  unsigned int dwZBufferBitDepth;
  unsigned int dwAlphaBitDepth;
  unsigned int dwLuminanceBitCount;
  unsigned int dwBumpBitCount;
  unsigned int dwPrivateFormatBitCount;
};

/*  413 */
union $CF4E6002FA4B19EC2239361E8AC5A039
{
  unsigned int dwRBitMask;
  unsigned int dwYBitMask;
  unsigned int dwStencilBitDepth;
  unsigned int dwLuminanceBitMask;
  unsigned int dwBumpDuBitMask;
  unsigned int dwOperations;
};

/*  414 */
union $F5C15FB6CDB1891DDE09688C7E058C5E
{
  unsigned int dwGBitMask;
  unsigned int dwUBitMask;
  unsigned int dwZBitMask;
  unsigned int dwBumpDvBitMask;
  _DDPIXELFORMAT::__unnamed::__unnamed MultiSampleCaps;
};

/*  415 */
union $01AE0C4CAA17A9DEB3CF9215716A3B58
{
  unsigned int dwBBitMask;
  unsigned int dwVBitMask;
  unsigned int dwStencilBitMask;
  unsigned int dwBumpLuminanceBitMask;
};

/*  416 */
union $F006553FDB25FB59A59693178CCFF094
{
  unsigned int dwRGBAlphaBitMask;
  unsigned int dwYUVAlphaBitMask;
  unsigned int dwLuminanceAlphaBitMask;
  unsigned int dwRGBZBitMask;
  unsigned int dwYUVZBitMask;
};

/*  417 */
struct _DDPIXELFORMAT
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwFourCC;
  $DAED55BFC94E6097478CA68F0B175AFE ___u3;
  $CF4E6002FA4B19EC2239361E8AC5A039 ___u4;
  $F5C15FB6CDB1891DDE09688C7E058C5E ___u5;
  $01AE0C4CAA17A9DEB3CF9215716A3B58 ___u6;
  $F006553FDB25FB59A59693178CCFF094 ___u7;
};

/*  418 */
union $83FB4F737B5EDC31066F75BACF4F71E0
{
  unsigned int dwCaps4;
  unsigned int dwVolumeDepth;
};

/*  419 */
struct _DDSCAPS2
{
  unsigned int dwCaps;
  unsigned int dwCaps2;
  unsigned int dwCaps3;
  $83FB4F737B5EDC31066F75BACF4F71E0 ___u3;
};

/*  420 */
union $00F4D6FA838FAD5B65924731E0E9CCBC
{
  int lPitch;
  unsigned int dwLinearSize;
};

/*  421 */
union $DE343801BC75A137C516A9D9B3162490
{
  unsigned int dwBackBufferCount;
  unsigned int dwDepth;
};

/*  422 */
union $FA885138A45ED3CE38760E5920CA9439
{
  unsigned int dwMipMapCount;
  unsigned int dwRefreshRate;
  unsigned int dwSrcVBHandle;
};

/*  423 */
union $1EC1816A3382F0C34E07393CF9A976AA
{
  _DDCOLORKEY ddckCKDestOverlay;
  unsigned int dwEmptyFaceColor;
};

/*  424 */
union $D2CF551C973C82D17B7E812AF103F29E
{
  _DDPIXELFORMAT ddpfPixelFormat;
  unsigned int dwFVF;
};

/*  425 */
struct _DDSURFACEDESC2
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwHeight;
  unsigned int dwWidth;
  $00F4D6FA838FAD5B65924731E0E9CCBC ___u4;
  $DE343801BC75A137C516A9D9B3162490 ___u5;
  $FA885138A45ED3CE38760E5920CA9439 ___u6;
  unsigned int dwAlphaBitDepth;
  unsigned int dwReserved;
  void *lpSurface;
  $1EC1816A3382F0C34E07393CF9A976AA ___u10;
  _DDCOLORKEY ddckCKDestBlt;
  _DDCOLORKEY ddckCKSrcOverlay;
  _DDCOLORKEY ddckCKSrcBlt;
  $D2CF551C973C82D17B7E812AF103F29E ___u14;
  _DDSCAPS2 ddsCaps;
  unsigned int dwTextureStage;
};

/*  426 */
struct CSurface
{
  IDirectDrawSurface7 *m_pdds;
  _DDSURFACEDESC2 m_ddsd;
  int m_bColorKeyed;
};

/*  427 */
struct CDummyDraw
{
  CDummyDrawVtbl *vfptr;
  CMapData *m_pMap;
  int m_nType;
  float m_fPosAbs[8];
  float m_fReAbs[8];
  float m_fScrNor[8];
  float m_fScrExt[8];
};

/*  428 */
struct CDummyDrawVtbl
{
  void *(__thiscall *__vecDelDtor)(CDummyDraw *this, unsigned int);
};

/*  429 */
struct __declspec(align(8)) CMapData
{
  CMapDataVtbl *vfptr;
  __declspec(align(8)) char m_bUse;
  char m_bLoad;
  __declspec(align(4)) int m_nMapIndex;
  CLevel m_Level;
  int m_nMapCode;
  _LAYER_SET *m_ls;
  _MULTI_BLOCK *m_mb;
  CExtDummy m_Dummy;
  int m_nMapInPlayerNum;
  int m_nMapInMonsterNum;
  int m_nMonBlockNum;
  _mon_block *m_pMonBlock;
  int m_nMonDumNum;
  int m_nPortalNum;
  _portal_dummy *m_pPortal;
  int m_nItemStoreDumNum;
  _store_dummy *m_pItemStoreDummy;
  int m_nStartDumNum;
  _start_dummy *m_pStartDummy;
  int m_nBindDumNum;
  _bind_dummy *m_pBindDummy;
  int m_nResDumNum;
  _res_dummy *m_pResDummy;
  int m_nQuestDumNum;
  _quest_dummy *m_pQuestDummy;
  _map_fld *m_pMapSet;
  CExtDummy *m_pExtDummy_Town;
  CItemStore *m_ItemStore;
  CRecordData m_tbMonBlk;
  CRecordData m_tbPortal;
  CDummyPosTable m_tbMonDumPos;
  CDummyPosTable m_tbPortalDumPos;
  CDummyPosTable m_tbStoreDumPos;
  CDummyPosTable m_tbStartDumPos;
  CDummyPosTable m_tbBindDumPos;
  CDummyPosTable m_tbResDumPosHigh;
  CDummyPosTable m_tbResDumPosMiddle;
  CDummyPosTable m_tbResDumPosLow;
  CDummyPosTable m_tbQuestDumPos;
  _bsp_info m_BspInfo;
  _sec_info m_SecInfo;
  CMyTimer m_tmrMineGradeReSet;
};

/*  430 */
struct CMapDataVtbl
{
  void *(__thiscall *__vecDelDtor)(CMapData *this, unsigned int);
};

/*  431 */
struct CLevel
{
  CLevelVtbl *vfptr;
  __declspec(align(8)) char mMapName[256];
  float mCamPos[3];
  D3DXMATRIX mMatView;
  int mIsLoadedBsp;
  CBsp *mBsp;
  CSkyBox *mSkyBox;
  CAniCamera mAutoAniCam;
  CTimer mTimer;
  CExtDummy mDummy;
  unsigned int mLightTexMemSize;
  unsigned int mMapTexMemSize;
  unsigned int mSkyTexMemSize;
  unsigned int mEntityTexMemSize;
  unsigned int mEnvironment;
};

/*  432 */
struct CLevelVtbl
{
  void *(__thiscall *__vecDelDtor)(CLevel *this, unsigned int);
};

/*  433 */
struct $40942CBCB8F0A1CDBC81269929B28324
{
  float _11;
  float _12;
  float _13;
  float _14;
  float _21;
  float _22;
  float _23;
  float _24;
  float _31;
  float _32;
  float _33;
  float _34;
  float _41;
  float _42;
  float _43;
  float _44;
};

/*  434 */
union $E1651AF6C3D8CAA49846B3AEDBB06BA1
{
  $40942CBCB8F0A1CDBC81269929B28324 _s0;
  float m[4][4];
};

/*  435 */
struct _D3DMATRIX
{
  $E1651AF6C3D8CAA49846B3AEDBB06BA1 ___u0;
};

/*  436 */
struct D3DXMATRIX
{
  _D3DMATRIX baseclass_0;
};

/*  437 */
struct _BSP_C_FACE
{
  char Attr;
  char VNum;
  unsigned int VStartId;
  unsigned __int16 MatGIndex;
  float Normal[4];
};

/*  438 */
struct _BSP_MAT_GROUP
{
  unsigned __int16 Type;
  unsigned __int16 TriNum;
  __int16 MtlId;
  __int16 LgtId;
  float BBMin[3];
  float BBMax[3];
  float Origin[3];
  unsigned int VBMinIndex;
  unsigned int IBMinIndex;
  unsigned int VertexBufferId;
  unsigned int VCnt;
  unsigned int CFaceStartVId;
  void *MultiSourceUV;
  void *MultiSourceST;
  unsigned __int16 ObjectId;
  float CoronaAlpha;
};

/*  439 */
struct _SCALE_TRACK
{
  float frame;
  float scale[3];
  float scale_axis[4];
};

/*  440 */
struct _POS_TRACK
{
  float frame;
  float pos[3];
};

/*  441 */
struct _ROT_TRACK
{
  float frame;
  float quat[4];
};

/*  442 */
struct _ANI_OBJECT
{
  char ObjectName[64];
  char ParentName[64];
  unsigned __int16 flag;
  unsigned __int16 parent;
  int frames;
  int Pos_cnt;
  int Rot_cnt;
  int Scale_cnt;
  float scale[3];
  float scale_quat[4];
  float pos[3];
  float quat[4];
  _SCALE_TRACK *Scale;
  _POS_TRACK *Pos;
  _ROT_TRACK *Rot;
  char AniFrameCache;
  float s_matrix[4][4];
  float now_frame;
  float f_matrix[4][4];
};

/*  443 */
struct _E_ENTRY
{
  unsigned int offset;
  unsigned int size;
};

/*  444 */
struct _ENTITY_FILE_HEADER
{
  _E_ENTRY CompHeader;
  _E_ENTRY Vertex;
  _E_ENTRY VColor;
  _E_ENTRY UV;
  _E_ENTRY Face;
  _E_ENTRY FaceId;
  _E_ENTRY VertexId;
  _E_ENTRY MatGroup;
  _E_ENTRY Object;
  _E_ENTRY Track;
};

/*  445 */
struct _ONE_LAYER
{
  __int16 m_iTileAniTexNum;
  int m_iSurface;
  unsigned int m_dwAlphaType;
  unsigned int m_ARGB;
  unsigned int m_dwFlag;
  __int16 m_sUVLavaWave;
  __int16 m_sUVLavaSpeed;
  __int16 m_sUVScrollU;
  __int16 m_sUVScrollV;
  __int16 m_sUVRotate;
  __int16 m_sUVScaleStart;
  __int16 m_sUVScaleEnd;
  __int16 m_sUVScaleSpeed;
  __int16 m_sUVMetal;
  __int16 m_sANIAlphaFlicker;
  unsigned __int16 m_sANIAlphaFlickerAni;
  __int16 m_sANITexFrame;
  __int16 m_sANITexSpeed;
  __int16 m_sGradientAlpha;
};

/*  446 */
struct _R3MATERIAL
{
  int m_iMatNum;
  char m_name[128];
  unsigned int m_dwFlag;
  int m_iDetailSurface;
  float m_fDetailScale;
  unsigned int m_dwLayerNum;
  _ONE_LAYER m_Layer[4];
};

/*  447 */
struct IDirect3DResource8
{
  IUnknown baseclass_0;
};

/*  448 */
struct IDirect3DVertexBuffer8
{
  IDirect3DResource8 baseclass_0;
};

/*  449 */
union $B3185CC329BDC5A6DA4B2C96D7DC3DD4
{
  float x;
  float pos[1];
};

/*  450 */
union $25C8602110B22A2EB54BB3EE6752756B
{
  float nx;
  float normal[1];
};

/*  451 */
struct _D3DR3VERTEX_TEX1
{
  $B3185CC329BDC5A6DA4B2C96D7DC3DD4 ___u0;
  float y;
  float z;
  $25C8602110B22A2EB54BB3EE6752756B ___u3;
  float ny;
  float nz;
  unsigned int color;
  float u;
  float v;
};

/*  452 */
union $42A39AC029B3127F486DF502FF8A7E09
{
  float x;
  float local[1];
};

/*  453 */
struct _D3DR3VERTEX_TEX2
{
  $42A39AC029B3127F486DF502FF8A7E09 ___u0;
  float y;
  float z;
  $25C8602110B22A2EB54BB3EE6752756B ___u3;
  float ny;
  float nz;
  unsigned int color;
  float uv[2][2];
};

/*  454 */
union $C7799AEB15F1DDCECA2526C6D45B986D
{
  IDirect3DVertexBuffer8 *m_lpVertexBuffer;
  _D3DR3VERTEX_TEX1 *m_VertexBufferTex1;
  _D3DR3VERTEX_TEX2 *m_VertexBufferTex2;
};

/*  455 */
struct CVertexBuffer
{
  unsigned int m_Flag;
  unsigned int m_Size;
  $C7799AEB15F1DDCECA2526C6D45B986D ___u2;
};

/*  456 */
struct IDirect3DIndexBuffer8
{
  IDirect3DResource8 baseclass_0;
};

/*  457 */
union $A5C0F6A776D44A2EF3AFB8A703F72FFC
{
  IDirect3DIndexBuffer8 *m_lpIndexBuffer;
  unsigned __int16 *m_IndexBuffer;
};

/*  458 */
struct CIndexBuffer
{
  unsigned int m_Flag;
  unsigned int m_Size;
  $A5C0F6A776D44A2EF3AFB8A703F72FFC ___u2;
};

/*  459 */
struct _ENTITY_M_GROUP
{
  unsigned __int16 Type;
  unsigned __int16 TriNum;
  __int16 MtlId;
  float BBMin[3];
  float BBMax[3];
  unsigned int VBMinIndex;
  unsigned int IBMinIndex;
  unsigned int VCnt;
  unsigned __int16 ObjectId;
  void *MultiSourceUV;
};

/*  460 */
struct CEntity
{
  int mIsUseMemory;
  int mIsEntityLoad;
  int mIsAlpha;
  _ENTITY_FILE_HEADER mHeader;
  unsigned int mVetexBufferSize;
  float (*mOrgUV)[2];
  unsigned int mMapColor;
  unsigned int mFlag;
  _R3MATERIAL *mMat;
  CVertexBuffer mStaticVertexBuffer;
  CIndexBuffer mStaticIndexedBuffer;
  unsigned int mTextureSize;
  int mMatGroupNum;
  _ENTITY_M_GROUP *mMatGroup;
  int mObjectNum;
  _ANI_OBJECT *mObject;
  char *mTrack;
  int mStartTexID;
  int mTexNum;
  void *mIndependencyTex;
  float mStartTime;
  float mBBMin[3];
  float mBBMax[3];
  float mAddFrame;
  float mFrame;
};

/*  461 */
struct _PARTICLE_ELEMENT
{
  float mDirStep[3];
  float mDir[3];
  float mPos[3];
  float mTime;
  float mARGBStep[4];
  float mARGB[4];
  float mScaleStep;
  float mScale;
  float mZRotStep;
  float mZRot;
  float mYRotStep;
  float mYRot;
  char mFlag;
  char mIsLive;
  unsigned __int16 mNowTrack;
  float mNowFrame;
};

/*  462 */
union $3E60C3DACEF2E33FF1D1871D4F2565FA
{
  float mElasticity;
  float mTexRepeat;
};

/*  463 */
#pragma pack(push, 4)
struct CParticle
{
  char mEntityName[128];
  int mNum;
  _PARTICLE_ELEMENT *mElement;
  CEntity *mEntity;
  float mTotalTime;
  float mLiveTime;
  float mStartTimeRange;
  float mTimeSpeed;
  float mGravity[3];
  float mStartPower[2][3];
  float mStartScale[2];
  float mStartZRot[2];
  float mStartYRot[2];
  char mFlickerAlpha;
  float mFlickerTime;
  float mStartARGB[4][2];
  float mOnePerTimeEpsilon;
  float mRotMat[4][4];
  $3E60C3DACEF2E33FF1D1871D4F2565FA ___u18;
  float mZFront;
  float mEmitTime;
  unsigned __int16 mSpecialID;
  unsigned __int16 mTrackCnt;
  float mTimeTrack[12];
  char mTrackFlag[12];
  char mATrack[12];
  char mRTrack[12][2];
  char mGTrack[12][2];
  char mBTrack[12][2];
  float mScaleTrack[12][2];
  float mZRotTrack[12][2];
  float mYRotTrack[12][2];
  float mPowerTrack[12][2][3];
  float mSpecialARGV[2][3];
  void *mBsp;
  unsigned int mFlag;
  unsigned int mAlphaType;
  float mStartPos[2][3];
  float mCreatePos[3];
  int mState;
  float mOnePerTime;
  float mOnePerTimeEpsilonTemp;
  float mParticleTimer;
  float mNextCreatorTime;
};
#pragma pack(pop)

/*  464 */
union $D702D035F589A3FF876782FB29EF6D4D
{
  char name[52];
  unsigned int name_cmp[13];
};

/*  465 */
struct _MERGE_FILE
{
  $D702D035F589A3FF876782FB29EF6D4D ___u0;
  unsigned int file_length;
  unsigned __int16 name_cnt;
  unsigned __int16 cnt;
  unsigned int start_index;
};

/*  466 */
struct CMergeFile
{
  char mFileName[256];
  _MERGE_FILE *mMergeFNF;
  unsigned int *mOffset;
  unsigned int *mIndex;
  unsigned int mCnt;
  unsigned int mHeaderSize;
};

/*  467 */
struct CMergeFileManager
{
  char mPath[256];
  unsigned int mPathNameLeng;
  unsigned int mMergeFileNum;
  CMergeFile *mMergeFile;
};

/*  468 */
struct _ENTITY_LIST
{
  char IsParticle;
  char IsFileExist;
  char Name[62];
  float FadeStart;
  float FadeEnd;
  unsigned __int16 Flag;
  unsigned __int16 ShaderID;
  float Factor[2];
};

/*  469 */
struct _LEAF_ENTITIES_LIST_INFO
{
  unsigned int start_id;
  unsigned __int16 entities_num;
};

/*  470 */
struct _MAP_ENTITIES_LIST
{
  unsigned __int16 ID;
  float Scale;
  float Pos[3];
  float RotX;
  float RotY;
  __int16 BBMin[3];
  __int16 BBMax[3];
  float AddFrame;
  CParticle *Particle;
  unsigned int Color;
  unsigned int mMapColor;
};

/*  471 */
struct _SOUND_ENTITY_LIST
{
  unsigned __int16 ID;
  char Name[62];
};

/*  472 */
struct _SOUND_ENTITIES_LIST
{
  unsigned __int16 ID;
  unsigned __int16 EventTime;
  unsigned int Flag;
  float Scale;
  float Attn;
  float Pos[3];
  float BoxScale[3];
  float BoxAttn;
  float BoxRotX;
  float BoxRotY;
  float NextPlayTime;
  float BBMin[3];
  float BBMax[3];
  float mInvMat[4][4];
};

/*  473 */
struct _LEAF_SOUND_ENTITIES_LIST_INFO
{
  unsigned __int16 start_id;
  unsigned __int16 entities_num;
};

/*  474 */
struct _BSP_NODE
{
  unsigned int f_normal_id;
  float d;
  __int16 front;
  __int16 back;
  __int16 bb_min[3];
  __int16 bb_max[3];
};

/*  475 */
struct _BSP_LEAF
{
  char type;
  unsigned __int16 face_num;
  unsigned int face_start_id;
  unsigned __int16 m_group_num;
  unsigned int m_group_start_id;
  __int16 bb_min[3];
  __int16 bb_max[3];
};

/*  476 */
struct _TOOL_COL_LINE
{
  unsigned int attr;
  unsigned __int16 start_v;
  unsigned __int16 end_v;
  float height;
  unsigned __int16 front;
  unsigned __int16 back;
};

/*  477 */
struct _TOOL_COL_LEAF
{
  unsigned int start_id;
  unsigned __int16 line_num;
};

/*  478 */
struct _PATH_NODE
{
  float TotalLeng;
  float Path[17][3];
  int WhatDirection;
  unsigned __int16 FrontLinetId;
  unsigned __int16 BackLineId;
  int PathCnt;
  int IsFind;
};

/*  479 */
struct CPathFinder
{
  int mMaxDepth;
  _PATH_NODE mPathNode[12];
  float mStart[3];
  _PATH_NODE mStackPathNode[20];
  int mStackPoint;
};

/*  480 */
struct _ENTRY
{
  unsigned int offset;
  unsigned int size;
};

/*  481 */
struct _BSP_FILE_HEADER
{
  unsigned int version;
  _ENTRY CPlanes;
  _ENTRY CFaceId;
  _ENTRY Node;
  _ENTRY Leaf;
  _ENTRY MatListInLeaf;
  _ENTRY Object;
  _ENTRY Track;
  _ENTRY EventObjectID;
  _ENTRY ReadSpare[35];
  _ENTRY BVertex;
  _ENTRY WVertex;
  _ENTRY FVertex;
  _ENTRY VertexColor;
  _ENTRY UV;
  _ENTRY LgtUV;
  _ENTRY Face;
  _ENTRY FaceId;
  _ENTRY VertexId;
  _ENTRY ReadMatGroup;
  _ENTRY FreeSpare[32];
};

/*  482 */
struct _EXT_BSP_FILE_HEADER
{
  unsigned int version;
  _ENTRY CFVertex;
  _ENTRY CFLine;
  _ENTRY CFLineId;
  _ENTRY CFLeaf;
  _ENTRY EntityList;
  _ENTRY EntityID;
  _ENTRY LeafEntityList;
  _ENTRY SoundEntityID;
  _ENTRY LeafSoundEntityList;
  _ENTRY ReadSpare[18];
  _ENTRY MapEntitiesList;
  _ENTRY SoundEntityList;
  _ENTRY SoundEntitiesList;
  _ENTRY FreeSpare[18];
};

/*  483 */
struct CAlpha
{
  unsigned int mAlphaFaceCnt;
  unsigned int *mAlphaFace;
  __int16 *mAlphaFaceZ;
  unsigned int *mTempAlphaFace;
  __int16 *mTempAlphaFaceZ;
  int mAlphaSize;
  void *mBsp;
};

/*  484 */
union $ECCF14FF485066234D6B13628F7DAC97
{
  CEntity *mEnvEntity;
  CParticle *mEnvParticle;
};

/*  485 */
#pragma pack(push, 4)
struct CBsp
{
  float (*mCVertex)[3];
  float (*mCNNormal)[3];
  unsigned int *mCVertexId;
  _BSP_C_FACE *mCFace;
  float (*mCNEdgeNormal)[4];
  unsigned int *mCFaceId;
  unsigned int *mVertexColor;
  __int16 (*mLgtUV)[2];
  int mNowCFaceId;
  unsigned __int16 *MatListInLeafId;
  unsigned int mMatGroupNum;
  _BSP_MAT_GROUP *mMatGroup;
  unsigned int mCVertexNum;
  unsigned int mCFaceNum;
  unsigned int mVertexNum;
  unsigned int mFaceNum;
  int mIsLoaded;
  unsigned int mObjectNum;
  _ANI_OBJECT *mObject;
  unsigned __int16 *mEventObjectID;
  unsigned int mEnvID;
  $ECCF14FF485066234D6B13628F7DAC97 ___u21;
  CMergeFileManager mMapEntityMFM;
  char *mEntityCache;
  unsigned int mEntityCacheSize;
  unsigned int mNowRenderMatGroupNum;
  unsigned int mNowShadowMatGroupNum;
  CEntity *mEntity;
  CParticle *mParticle;
  _ENTITY_LIST *mEntityList;
  unsigned __int16 *mEntityID;
  _LEAF_ENTITIES_LIST_INFO *mLeafEntityList;
  _MAP_ENTITIES_LIST *mMapEntitiesList;
  unsigned int mEntityListNum;
  unsigned int mLeafEntityListNum;
  unsigned int mEntityIDNum;
  unsigned int mMapEntitiesListNum;
  char *mSoundEntityCache;
  unsigned int mSoundEntityCacheSize;
  unsigned int mSoundEntityIDNum;
  unsigned int mLeafSoundEntityListNum;
  unsigned int mSoundEntityListNum;
  unsigned int mSoundEntitiesListNum;
  _SOUND_ENTITY_LIST *mSoundEntityList;
  _SOUND_ENTITIES_LIST *mSoundEntitiesList;
  unsigned __int16 *mSoundEntityID;
  _LEAF_SOUND_ENTITIES_LIST_INFO *mLeafSoundEntityList;
  unsigned int mTotalAllocSize;
  unsigned int mTotalWaveSize;
  unsigned int mVertexBufferSize;
  _BSP_NODE *mNode;
  _BSP_LEAF *mLeaf;
  unsigned int mLeafNum;
  unsigned int mNodeNum;
  unsigned int mCFVertexNum;
  unsigned int mCFLineNum;
  unsigned int mCFLineIdNum;
  float (*mCFVertex)[3];
  _TOOL_COL_LINE *mCFLine;
  unsigned __int16 *mCFLineId;
  _TOOL_COL_LEAF *mCFLeaf;
  float (*mCFVNormal)[3];
  float (*mCFNormal)[4];
  CPathFinder mPathFinder;
  int mColFaceId;
  unsigned int mFindPathCnt;
  __int16 mNowPlayerNum;
  unsigned int mStaticVBCnt;
  CVertexBuffer mStaticVertexBuffer[80];
  unsigned int mVBVertexNum[80];
  CIndexBuffer mStaticIndexedBuffer;
  void *mMultiLayerUV;
  void *mMultiLayerST;
  char *mStaticAlloc;
  unsigned int mStaticAllocSize;
  char *mExtBspStaticAlloc;
  unsigned int mExtBspStaticAllocSize;
  int mPickPoly;
  char *mMatGroupCache;
  int mMatGroupCacheSize;
  float mTempCamera[3];
  __int16 mTempSearchOk;
  __int16 mNowLeafNum;
  _BSP_FILE_HEADER mBSPHeader;
  _EXT_BSP_FILE_HEADER mExtBSPHeader;
  CAlpha mAlpha;
};
#pragma pack(pop)

/*  486 */
struct CSkyBox
{
  int mIsSkyLoad;
  CEntity mEntity;
  _ENTITY_M_GROUP *mMatGroup;
  int mMatNum;
  int mMatGroupNum;
  __int16 mMatGroupSort[512];
};

/*  487 */
struct _ANI_CAMERA_EXT
{
  float frame;
  float fov;
  float tdist;
  float temp1;
  float temp2;
};

/*  488 */
struct _ANI_CAMERA
{
  char mName[64];
  unsigned int h_num;
  float fov;
  float tdist;
  unsigned int ext_num;
  _ANI_CAMERA_EXT *ext;
  _ANI_OBJECT *obj;
};

/*  489 */
struct CAniCamera
{
  _ANI_CAMERA *AniCamera;
  _ANI_OBJECT *mDummy;
  unsigned int mDummyNum;
  unsigned int mAniCameraNum;
  unsigned int mStartFrame;
  unsigned int mEndFrame;
  unsigned int mPlayStartFrame;
  unsigned int mPlayEndFrame;
  int mPlayIndex;
  int mIsSetPerspect;
  float mStartTick;
  unsigned int mFlag;
  float mOldFrame;
  float mNowFrame;
};

/*  490 */
struct CTimer
{
  float mLoopTime;
  float mTime;
  float mRealTime;
  float mMinFPS;
  float mfLoopHop;
  unsigned int mOldTime;
  unsigned int mLoopCnt;
  unsigned int mLoopHop;
  int m_bUsingQPF;
  int m_bTimerInitialized;
  float mFPS;
  unsigned int mLoopFPSCnt;
  float mFPSTime;
  float m_fTicksPerSec;
  float m_fFramesPerSec;
  float m_fAverageFramesPerSec;
  float m_fSecsPerFrame;
  float m_fLamTime;
  unsigned __int64 m_qwTicks;
  unsigned __int64 m_qwStartTicks;
  unsigned __int64 m_qwTicksPerSec;
  unsigned __int64 m_qwTicksPerFrame;
};

/*  491 */
union $5CA2DEBC757552518522447F5D1B1DF5
{
  unsigned int mdwArgv[4];
  float mfArgv[1];
};

/*  492 */
struct _EXT_DUMMY
{
  char mName[32];
  unsigned int mFlag;
  float mBBmin[3];
  float mBBmax[3];
  unsigned int mID;
  $5CA2DEBC757552518522447F5D1B1DF5 ___u5;
  float mMat[4][4];
  float mInvMat[4][4];
};

/*  493 */
struct CExtDummy
{
  unsigned int mMaxNum;
  unsigned int mNum;
  _EXT_DUMMY *mDummy;
};

/*  494 */
struct CObjectList
{
  CObjectListVtbl *vfptr;
  _object_list_point m_Head;
  _object_list_point m_Tail;
  int m_nSize;
};

/*  495 */
struct CObjectListVtbl
{
  void *(__thiscall *__vecDelDtor)(CObjectList *this, unsigned int);
};

/*  496 */
#pragma pack(push, 4)
struct CGameObject
{
  CGameObjectVtbl *vfptr;
  _base_fld *m_pRecordSet;
  _object_id m_ObjID;
  unsigned int m_dwObjSerial;
  char m_bLive;
  int m_nTotalObjIndex;
  char m_bCorpse;
  char m_bMove;
  char m_bStun;
  char m_bMapLoading;
  unsigned int m_dwLastSendTime;
  unsigned __int16 m_dwCirclePlayerNum;
  float m_fCurPos[3];
  float m_fAbsPos[3];
  int m_nScreenPos[2];
  float m_fOldPos[3];
  CMapData *m_pCurMap;
  _100_per_random_table m_rtPer100;
  int m_nCirclePlayerNum;
  unsigned __int16 m_wMapLayerIndex;
  _object_list_point m_SectorPoint;
  _object_list_point m_SectorNetPoint;
  unsigned int m_dwNextFreeStunTime;
  unsigned int m_dwOldTickBreakTranspar;
  char m_bBreakTranspar;
  char m_bMaxVision;
  char *m_bPlayerCircleList;
  char m_bObserver;
  unsigned int m_dwCurSec;
};
#pragma pack(pop)

/*  497 */
#pragma pack(push, 4)
struct CCharacter
{
  CGameObject baseclass_0;
  float m_fTarPos[3];
  int m_AroundNum;
  CCharacter *m_AroundSlot[5];
  unsigned int m_dwNextGenAttackTime;
  _sf_continous m_SFCont[2][8];
  unsigned int m_dwEffSerialCounter;
  char m_bLastContEffectUpdate;
  unsigned __int16 m_wLastContEffect;
  _effect_parameter m_EP;
  unsigned __int16 m_wEffectTempValue;
  int m_nContEffectSec;
  CMyTimer m_tmrSFCont;
};
#pragma pack(pop)

/*  498 */
#pragma pack(push, 4)
struct _sf_continous
{
  char m_bExist;
  char m_byEffectCode;
  unsigned __int16 m_wEffectIndex;
  char m_byLv;
  unsigned int m_dwStartSec;
  unsigned __int16 m_wDurSec;
  unsigned int m_dwEffSerial;
};
#pragma pack(pop)

/*  499 */
#pragma pack(push, 2)
struct _effect_parameter::__param_data
{
  float m_fEff_Rate[30];
  float m_fEff_Plus[38];
  char m_bEff_State[23];
  float m_fEff_Have[5];
};
#pragma pack(pop)

/*  500 */
#pragma pack(push, 4)
struct _effect_parameter
{
  _effect_parameter::__param_data *m_pDataParam;
  char m_bLock;
};
#pragma pack(pop)

/*  501 */
#pragma pack(push, 4)
struct CMyTimer
{
  CMyTimerVtbl *vfptr;
  int m_nTickTerm;
  unsigned int m_dwTickOld;
  char m_bOper;
};
#pragma pack(pop)

/*  502 */
struct CMyTimerVtbl
{
  void *(__thiscall *__vecDelDtor)(CMyTimer *this, unsigned int);
};

/*  503 */
struct CGameObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(CGameObject *this, unsigned int);
  void (__thiscall *SetStun)(CGameObject *this, char);
  unsigned __int16 (__thiscall *CalcCurHPRate)(CGameObject *this);
  void (__thiscall *SendMsg_RealFixPosition)(CGameObject *this, char);
  void (__thiscall *Loop)(CGameObject *this);
  void (__thiscall *AlterSec)(CGameObject *this);
  void (__thiscall *OutOfSec)(CGameObject *this);
  void (__thiscall *SendMsg_FixPosition)(CGameObject *this, int);
  void (__thiscall *SendMsg_RealMovePoint)(CGameObject *this, int);
  void (__thiscall *SendMsg_StunInform)(CGameObject *this);
  void (__thiscall *SendMsg_SetHPInform)(CGameObject *this);
  int (__thiscall *GetHP)(CGameObject *this);
  char (__thiscall *SetHP)(CGameObject *this, int, char);
  int (__thiscall *GetMaxHP)(CGameObject *this);
  void (__thiscall *RecvKillMessage)(CGameObject *this, CCharacter *);
  void (__thiscall *SFContInsertMessage)(CGameObject *this, char, char);
  void (__thiscall *SFContDelMessage)(CGameObject *this, char, char, char);
  void (__thiscall *SFContUpdateTimeMessage)(CGameObject *this, char, char, int);
  char (__thiscall *RobbedHP)(CGameObject *this, CCharacter *, int);
  char (__thiscall *FixTargetWhile)(CGameObject *this, CCharacter *, unsigned int);
  void (__thiscall *SetAttackPart)(CGameObject *this, int);
  int (__thiscall *GetGenAttackProb)(CGameObject *this, CCharacter *, int);
  int (__thiscall *SetDamage)(CGameObject *this, int, CCharacter *, int, char);
  int (__thiscall *GetDefFC)(CGameObject *this, int, CCharacter *, int *);
  int (__thiscall *GetFireTol)(CGameObject *this);
  int (__thiscall *GetWaterTol)(CGameObject *this);
  int (__thiscall *GetSoilTol)(CGameObject *this);
  int (__thiscall *GetWindTol)(CGameObject *this);
  float (__thiscall *GetDefGap)(CGameObject *this, int);
  float (__thiscall *GetDefFacing)(CGameObject *this, int);
  float (__thiscall *GetWeaponAdjust)(CGameObject *this);
  int (__thiscall *GetLevel)(CGameObject *this);
  int (__thiscall *GetDefSkill)(CGameObject *this);
  float (__thiscall *GetWidth)(CGameObject *this);
  float (__thiscall *GetAttackRange)(CGameObject *this);
  int (__thiscall *AttackableHeight)(CGameObject *this);
  int (__thiscall *GetWeaponClass)(CGameObject *this);
  int (__thiscall *GetAvoidRate)(CGameObject *this);
  int (__thiscall *GetAttackLevel)(CGameObject *this);
  int (__thiscall *GetAttackDP)(CGameObject *this);
  int (__thiscall *GetObjRace)(CGameObject *this);
  char *(__thiscall *GetObjName)(CGameObject *this);
  char (__thiscall *IsRecvableContEffect)(CGameObject *this);
  char (__thiscall *IsBeAttackedAble)(CGameObject *this, char);
  char (__thiscall *IsRewardExp)(CGameObject *this);
  char (__thiscall *IsBeDamagedAble)(CGameObject *this, CCharacter *);
  char (__thiscall *IsInTown)(CGameObject *this);
  char (__thiscall *IsAttackableInTown)(CGameObject *this);
  char (__thiscall *SF_AttHPtoDstFP_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_ContDamageTimeInc_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_Resurrect_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_HPInc_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_STInc_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_ContHelpTimeInc_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_OverHealing_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_LateContHelpSkillRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_LateContHelpForceRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_LateContDamageRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_AllContHelpSkillRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_AllContHelpForceRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_AllContDamageForceRemove_Once)(CGameObject *this, CCharacter *);
  char (__thiscall *SF_OthersContHelpSFRemove_Once)(CGameObject *this, float);
  char (__thiscall *SF_SkillContHelpTimeInc_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_ConvertMonsterTarget)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_TransMonsterHP)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_ReleaseMonsterTarget)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_IncHPCircleParty)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_Stun)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_SPDec)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_FPDec)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_DamageAndStun)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_TransDestHP)(CGameObject *this, CCharacter *, float, char *);
  char (__thiscall *SF_RemoveAllContHelp_Once)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_MakePortalReturnBindPositionPartyMember)(CGameObject *this, CCharacter *, float, char *);
  char (__thiscall *SF_ReturnBindPosition)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_IncreaseDP)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_ConvertTargetDest)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_RecoverAllReturnStateAnimusHPFull)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_MakeZeroAnimusRecallTimeOnce)(CGameObject *this, CCharacter *, float);
  char (__thiscall *SF_SelfDestruction)(CGameObject *this, CCharacter *, float);
};

/*  504 */
struct _base_fld
{
  unsigned int m_dwIndex;
  char m_strCode[64];
};

/*  505 */
struct _object_id
{
  char m_byKind;
  char m_byID;
  unsigned __int16 m_wIndex;
};

/*  506 */
struct _100_per_random_table
{
  unsigned __int16 m_wCurTable;
  unsigned __int16 m_wCurPoint;
};

/*  507 */
struct _object_list_point
{
  CGameObject *m_pItem;
  _object_list_point *m_pNext;
  _object_list_point *m_pPrev;
};

/*  508 */
#pragma pack(push, 4)
struct CRecordData
{
  CRecordDataVtbl *vfptr;
  char m_bLoad;
  char m_szFileName[129];
  unsigned int m_dwTotalSize;
  _record_bin_header m_Header;
  int m_nLowNum;
  char **m_ppsRecord;
};
#pragma pack(pop)

/*  509 */
struct CRecordDataVtbl
{
  void *(__thiscall *__vecDelDtor)(CRecordData *this, unsigned int);
};

/*  510 */
struct _record_bin_header
{
  int m_nRecordNum;
  int m_nFieldNum;
  int m_nRecordSize;
};

/*  511 */
struct _mon_active_fld
{
  _base_fld baseclass_0;
  unsigned int m_dwRegenTime;
  unsigned int m_dwRegenLimNum;
  unsigned int m_dwRegenProp;
  unsigned int m_dwRegenMinNum;
  unsigned int m_dwStdKill;
  unsigned int m_dwRegenMaxNum;
};

/*  512 */
struct _mon_block_fld::_dummy_info
{
  char m_strDummyCode[64];
  unsigned int m_dwSelectProp;
};

/*  513 */
struct _mon_block_fld
{
  _base_fld baseclass_0;
  unsigned int m_dwDummyNum;
  _mon_block_fld::_dummy_info m_DummyInfo[20];
  int m_nMin;
  int m_nMob;
  int m_nMax;
};

/*  514 */
#pragma pack(push, 2)
struct _dummy_position
{
  char m_szCode[64];
  unsigned __int16 m_wLineIndex;
  char m_bPosAble;
  __int16 m_zLocalMin[3];
  __int16 m_zLocalMax[3];
  float m_fMin[3];
  float m_fMax[3];
  float m_fRT[3];
  float m_fLB[3];
  float m_fCenterPos[3];
};
#pragma pack(pop)

/*  515 */
#pragma pack(push, 4)
struct _mon_block
{
  _mon_block_fld *m_pBlkRec;
  _dummy_position *m_pDumPos[20];
  char m_bBossBlock;
  CMapData *m_pMap;
};
#pragma pack(pop)

/*  516 */
struct _mon_active
{
  _mon_active_fld *m_pActRec;
  _mon_block *m_pBlk;
  unsigned __int16 m_wMonRecIndex;
  __int16 m_zCurMonNum;
  unsigned int m_dwCumMonNum;
  unsigned int m_dwLastRespawnTime;
  int m_nLimRegenNum;
};

/*  517 */
struct _MULTI_BLOCK
{
  int m_nBlockNum;
  CRecordData *m_ptbMonBlock;
  _mon_active **m_ppMonAct;
};

/*  518 */
struct _LAYER_SET
{
  int m_nSecNum;
  CObjectList *m_pListSectorObj;
  CObjectList *m_pListSectorPlayer;
  CObjectList *m_pListSectorTower;
  _MULTI_BLOCK *m_pMB;
  _mon_active m_MonAct[200][300];
  unsigned int m_dwStartActiveTime;
  unsigned int m_dwLastInertTime;
};

/*  519 */
struct _portal_fld
{
  _base_fld baseclass_0;
  char m_strLinkMapCode[64];
  char m_strLinkPortalCode[64];
  char m_szMenu[64];
  int m_nKind;
  char m_strUseRace[64];
};

/*  520 */
struct _portal_dummy
{
  _portal_fld *m_pPortalRec;
  _dummy_position *m_pDumPos;
};

/*  521 */
struct _store_dummy
{
  int m_nStoreType;
  _base_fld *m_pStoreRec;
  _dummy_position *m_pDumPos;
};

/*  522 */
struct _start_dummy
{
  _dummy_position *m_pDumPos;
};

/*  523 */
struct _bind_dummy
{
  _dummy_position *m_pDumPos;
};

/*  524 */
#pragma pack(push, 4)
struct _res_dummy
{
  _dummy_position *m_pDumPos;
  float m_fMinLocal[3][3];
  float m_fMaxLocal[3][3];
  char m_byGrade[3];
  unsigned int m_dwDelay[3][2];
  char m_byQualityGrade;
};
#pragma pack(pop)

/*  525 */
struct _quest_dummy
{
  _dummy_position *m_pDumPos;
};

/*  526 */
struct _map_fld
{
  _base_fld baseclass_0;
  char m_strFileName[64];
  int m_nMapType;
  int m_nLayerNum;
  int m_nRaceVillageCode;
  int m_nMonsterSetFileNum;
  int m_nMapClass;
  int m_nRadius;
};

/*  527 */
struct _StoreList_fld
{
  _base_fld baseclass_0;
  char m_strBinding_DummyName[64];
  char m_strStore_NPCcode[64];
  char m_strStore_NPCname[64];
  char m_strStore_MAPcode[64];
  int m_nStore_trade;
  int m_b;
  int m_nStore_NPCangle;
  int m_nNpc_Class1;
  int m_nNpc_Class2;
  int m_nNpc_Class3;
  int m_nNpc_Class4;
  int m_nNpc_Class5;
  int m_nStore_LISTcount;
  char m_strItemlist[240][64];
};

/*  528 */
#pragma pack(push, 4)
struct _good_storage_info
{
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  int bExist;
  char byMoneyUnit;
  int nStdPrice;
  unsigned int dwDurPoint;
};
#pragma pack(pop)

/*  529 */
struct _CLID
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/*  530 */
struct _EQUIPKEY
{
  __int16 zItemIndex;
};

/*  531 */
struct _REGED_AVATOR_DB
{
  unsigned __int16 m_wszAvatorName[17];
  unsigned int m_dwRecordNum;
  char m_byRaceSexCode;
  char m_bySlotIndex;
  char m_szClassCode[5];
  char m_byLevel;
  unsigned int m_dwDalant;
  unsigned int m_dwGold;
  unsigned int m_dwBaseShape;
  _EQUIPKEY m_EquipKey[8];
  char m_byEquipLv[8];
  unsigned int m_dwLastConnTime;
};

/*  532 */
struct _REGED
{
  _REGED_AVATOR_DB baseclass_0;
  unsigned int m_dwFixEquipLv[8];
};

/*  533 */
struct _AVATOR_DB_BASE
{
  _REGED baseclass_0;
  unsigned int m_dwHP;
  unsigned int m_dwFP;
  unsigned int m_dwSP;
  unsigned int m_dwDP;
  double m_dExp;
  double m_dLossExp;
  double m_dPvPPoint;
  double m_dPvPCashBag;
  unsigned int m_dwPvpRank;
  unsigned __int16 m_wRankRate;
  char m_byBagNum;
  char m_byMapCode;
  __int16 m_zClassHistory[3];
  unsigned int m_dwClassInitCnt;
  char m_byLastClassGrade;
  float m_fStartPos[3];
  unsigned int m_dwTotalPlayMin;
  unsigned int m_dwStartPlayTime;
  char m_szBindMapCode[12];
  char m_szBindDummy[12];
  unsigned int m_dwGuildSerial;
  char m_byClassInGuild;
  unsigned int m_dwGuildExplusDate;
  char m_byGuildExplusApprovNum;
  char m_byGuildExplusSeniorNum;
  unsigned int m_dwAccountSerial;
};

/*  534 */
struct _LINKKEY
{
  unsigned __int16 wEffectCode;
};

/*  535 */
struct _LINK_DB_BASE::_LIST
{
  _LINKKEY Key;
};

/*  536 */
struct _LINK_DB_BASE
{
  _LINK_DB_BASE::_LIST m_LinkList[50];
  char m_byLinkBoardLock;
  unsigned int m_dwSkill[2];
  unsigned int m_dwForce[2];
  unsigned int m_dwCharacter[2];
  unsigned int m_dwAnimus[2];
  unsigned int m_dwInven;
  unsigned int m_dwInvenBag[5];
};

/*  537 */
struct _EMBELLKEY
{
  char bySlotIndex;
  char byTableCode;
  unsigned __int16 wItemIndex;
};

/*  538 */
struct _EQUIP_DB_BASE::_EMBELLISH_LIST
{
  _EMBELLKEY Key;
  unsigned __int16 wAmount;
};

/*  539 */
struct _EQUIP_DB_BASE
{
  _EQUIP_DB_BASE::_EMBELLISH_LIST m_EmbellishList[6];
};

/*  540 */
struct _FORCEKEY
{
  unsigned int dwKey;
};

/*  541 */
struct _FORCE_DB_BASE::_LIST
{
  _FORCEKEY Key;
};

/*  542 */
struct _FORCE_DB_BASE
{
  _FORCE_DB_BASE::_LIST m_List[88];
};

/*  543 */
struct _ANIMUSKEY
{
  char byItemIndex;
};

/*  544 */
struct _ANIMUS_DB_BASE::_LIST
{
  _ANIMUSKEY Key;
  unsigned int dwExp;
  unsigned int dwParam;
};

/*  545 */
struct _ANIMUS_DB_BASE
{
  _ANIMUS_DB_BASE::_LIST m_List[4];
};

/*  546 */
struct _STAT_DB_BASE
{
  unsigned int m_dwDamWpCnt[2];
  unsigned int m_dwDefenceCnt;
  unsigned int m_dwShieldCnt;
  unsigned int m_dwSkillCum[48];
  unsigned int m_dwForceCum[24];
  unsigned int m_dwMakeCum[3];
  unsigned int m_dwSpecialCum;
};

/*  547 */
struct _INVENKEY
{
  char bySlotIndex;
  char byTableCode;
  unsigned __int16 wItemIndex;
};

/*  548 */
struct _INVEN_DB_BASE::_LIST
{
  _INVENKEY Key;
  unsigned int dwDur;
  unsigned int dwUpt;
};

/*  549 */
struct _INVEN_DB_BASE
{
  _INVEN_DB_BASE::_LIST m_List[100];
};

/*  550 */
struct _CUTTING_DB_BASE::_LIST
{
  char byResIndex;
  char byAmt;
};

/*  551 */
struct _CUTTING_DB_BASE
{
  char m_byLeftNum;
  _CUTTING_DB_BASE::_LIST m_List[40];
};

/*  552 */
struct _QUEST_DB_BASE::_LIST
{
  char byQuestType;
  unsigned __int16 wIndex;
  unsigned __int16 wNum[3];
  unsigned int dwPassSec;
};

/*  553 */
struct _QUEST_DB_BASE
{
  _QUEST_DB_BASE::_LIST m_List[15];
};

/*  554 */
struct _UNIT_DB_BASE::_LIST
{
  char bySlotIndex;
  char byFrame;
  unsigned int dwGauge;
  char byPart[6];
  unsigned int dwBullet[2];
  unsigned int dwSpare[8];
  int nPullingFee;
  unsigned int dwCutTime;
  unsigned __int16 wBooster;
};

/*  555 */
struct _UNIT_DB_BASE
{
  _UNIT_DB_BASE::_LIST m_List[4];
};

/*  556 */
struct _SFCONT_DB_BASE::_LIST
{
  unsigned int dwKey;
};

/*  557 */
struct _SFCONT_DB_BASE
{
  _SFCONT_DB_BASE::_LIST m_List[2][8];
};

/*  558 */
struct _TRADE_DB_BASE::_LIST
{
  char byInvenIndex;
  unsigned int dwPrice;
  unsigned __int16 wPassSec;
};

/*  559 */
struct _TRADE_DB_BASE
{
  _TRADE_DB_BASE::_LIST m_List[10];
};

/*  560 */
struct _BUDDY_DB_BASE::_LIST
{
  unsigned int dwSerial;
  unsigned __int16 wszName[17];
};

/*  561 */
struct _BUDDY_DB_BASE
{
  _BUDDY_DB_BASE::_LIST m_List[50];
};

/*  562 */
struct _TRUNK_DB_BASE::_LIST
{
  _INVENKEY Key;
  unsigned int dwDur;
  unsigned int dwUpt;
  char byRace;
};

/*  563 */
struct _TRUNK_DB_BASE
{
  unsigned __int16 wszPasswd[13];
  double dDalant;
  double dGold;
  char byHintIndex;
  unsigned __int16 wszHintAnswer[17];
  char bySlotNum;
  _TRUNK_DB_BASE::_LIST m_List[100];
};

/*  564 */
struct _AVATOR_DATA
{
  _AVATOR_DB_BASE dbAvator;
  _LINK_DB_BASE dbLink;
  _EQUIP_DB_BASE dbEquip;
  _FORCE_DB_BASE dbForce;
  _ANIMUS_DB_BASE dbAnimus;
  _STAT_DB_BASE dbStat;
  _INVEN_DB_BASE dbInven;
  _CUTTING_DB_BASE dbCutting;
  _QUEST_DB_BASE dbQuest;
  _UNIT_DB_BASE dbUnit;
  _SFCONT_DB_BASE dbSfcont;
  _TRADE_DB_BASE dbTrade;
  _BUDDY_DB_BASE dbBuddy;
  _TRUNK_DB_BASE dbTrunk;
};

/*  565 */
#pragma pack(push, 4)
struct _DB_QRY_SYN_DATA
{
  char m_bUse;
  char m_bLoad;
  unsigned int m_dwAccountSerial;
  _CLID m_idWorld;
  char m_byQryCase;
  char m_byResult;
  char m_sData[12662];
};
#pragma pack(pop)

/*  566 */
struct _SYNC_STATE
{
  char bEnter;
  char bReged;
  char bSelect;
};

/*  567 */
#pragma pack(push, 4)
struct CUserDB
{
  char m_bFireGuardVerify;
  _GLBID m_gidGlobal;
  _CLID m_idWorld;
  unsigned int m_dwIP;
  unsigned int m_dwTotalPlayMin;
  char m_szAccountID[13];
  unsigned int m_dwAccountSerial;
  unsigned int m_ipAddress;
  char m_byUserDgr;
  char m_bySubDgr;
  unsigned __int16 m_wszAvatorName[17];
  char m_aszAvatorName[17];
  unsigned int m_dwSerial;
  char m_byNameLen;
  _REGED m_RegedList[3];
  _AVATOR_DATA m_AvatorData;
  _AVATOR_DATA m_AvatorData_bk;
  _NOT_ARRANGED_AVATOR_DB m_NotArrangedChar[15];
  unsigned int m_dwArrangePassCase0[15];
  char m_bActive;
  char m_bField;
  char m_bWndFullMode;
  char m_bDBWaitState;
  _DB_QRY_SYN_DATA *m_pDBPushData;
  char m_bChatLock;
  _SYNC_STATE m_ss;
  unsigned int m_dwMessengerKey[4];
  unsigned int m_dwOperLobbyTime;
  char m_bCreateTrunkFree;
  CMyTimer m_tmrCheckPlayMin;
  char m_bDataUpdate;
  unsigned int m_dwTermContSaveTime;
  unsigned int m_dwLastContSaveTime;
  unsigned int m_dwReLobbyTime;
  char m_bNoneUpdateData;
  _BILLING_INFO m_BillingInfo;
  char m_bBillingNoLogout;
  char m_bPcBangUser;
};
#pragma pack(pop)

/*  568 */
#pragma pack(push, 4)
struct CPartyPlayer
{
  char m_bLogin;
  _CLID m_id;
  unsigned __int16 m_wszName[17];
  unsigned __int16 m_wZoneIndex;
  CPartyPlayer *m_pPartyBoss;
  CPartyPlayer *m_pPartyMember[8];
  char m_bLock;
  char m_byLootShareSystem;
  CPartyPlayer *m_pLootAuthor;
};
#pragma pack(pop)

/*  569 */
struct _character_db_load
{
  unsigned __int16 m_wszCharID[17];
  unsigned int m_dwSerial;
  char m_byRaceSexCode;
  unsigned int m_dwHP;
  unsigned int m_dwFP;
  unsigned int m_dwSP;
  unsigned int m_dwDP;
  double m_dExp;
  double m_dLossExp;
  unsigned int m_dwRank;
  unsigned __int16 m_wRankRate;
  double m_dPvPPoint;
  double m_dPvPCashBag;
  char m_byLevel;
  unsigned int m_dwDalant;
  unsigned int m_dwGold;
  char m_sStartMapCode;
  float m_fStartPos[3];
  char m_byDftPart_Face;
  char m_byDftPart[5];
  char m_byUseBagNum;
};

/*  570 */
struct _STORAGE_LIST::_storage_con
{
  char m_bLoad;
  char m_byTableCode;
  char m_byClientIndex;
  unsigned __int16 m_wItemIndex;
  unsigned int m_dwDur;
  unsigned int m_dwLv;
  unsigned __int16 m_wSerial;
  char m_bLock;
};

/*  571 */
struct _STORAGE_LIST
{
  int m_nListNum;
  int m_nUsedNum;
  int m_nListCode;
  _STORAGE_LIST::_db_con *m_pStorageList;
};

/*  572 */
struct _STORAGE_LIST::_db_con
{
  _STORAGE_LIST::_storage_con baseclass_0;
  _STORAGE_LIST *m_pInList;
  char m_byStorageIndex;
};

/*  573 */
struct _bag_db_load
{
  _STORAGE_LIST baseclass_0;
  _STORAGE_LIST::_db_con m_List[100];
};

/*  574 */
struct _equip_db_load
{
  _STORAGE_LIST baseclass_0;
  _STORAGE_LIST::_db_con m_List[8];
};

/*  575 */
struct _embellish_db_load
{
  _STORAGE_LIST baseclass_0;
  _STORAGE_LIST::_db_con m_List[6];
};

/*  576 */
struct _force_db_load
{
  _STORAGE_LIST baseclass_0;
  _STORAGE_LIST::_db_con m_List[88];
};

/*  577 */
struct _animus_db_load
{
  _STORAGE_LIST baseclass_0;
  _STORAGE_LIST::_db_con m_List[4];
};

/*  578 */
struct _trunk_db_load
{
  _STORAGE_LIST baseclass_0;
  char m_byItemSlotRace[100];
  _STORAGE_LIST::_db_con m_List[100];
};

/*  579 */
#pragma pack(push, 4)
struct _trade_wait_link::__node
{
  char bLoad;
  _STORAGE_LIST::_db_con Item;
  unsigned int dwPrice;
  unsigned __int16 wPassSec;
};
#pragma pack(pop)

/*  580 */
struct _trade_wait_link
{
  _trade_wait_link::__node m_Link[10];
};

/*  581 */
struct _mastery_lim_data
{
  int m_nBnsMMastery[2];
  int m_nBnsSMastery;
  int m_nBnsDefMastery;
  int m_nBnsPryMastery;
  int m_nBnsMakeMastery[3];
  int m_nBnsSkillMastery[8];
  int m_nBnsForceMastery[24];
};

/*  582 */
struct _class_fld::_bns_item
{
  char strDefaultItem[64];
  int nAmount;
};

/*  583 */
struct _class_fld
{
  _base_fld baseclass_0;
  int m_nRaceCode;
  int m_nClass;
  int m_nIconIDX;
  int m_nGrade;
  int m_nUpGradeLv;
  char m_strCh_Class[8][64];
  char m_strTemp[64];
  char m_strKorName[64];
  char m_strEngName[64];
  int m_nConLim;
  char m_strLinkClassSkill[3][64];
  int m_bUnitUsable;
  int m_bAnimusUsable;
  int m_bLauncherUsable;
  int m_bWMKToolUsable;
  int m_bDMKToolUnitUsable;
  int m_bBMKToolUnitUsable;
  int m_nMakeTrapMaxNum;
  int m_nBnsForHP;
  int m_nBnsForFP;
  int m_nBnsForSP;
  int m_nUpValueDefMastery;
  _mastery_lim_data m_MasteryLim;
  int m_bSelectRewardItem;
  _class_fld::_bns_item m_DefaultItem[9];
};

/*  584 */
#pragma pack(push, 2)
struct _quick_link
{
  char byLinkIndex;
  unsigned __int16 wSerial;
};
#pragma pack(pop)

/*  585 */
struct __declspec(align(8)) CGuild
{
  CGuildVtbl *vfptr;
  __declspec(align(8)) int m_nIndex;
  unsigned int m_dwSerial;
  unsigned __int16 m_wszName[17];
  char m_aszName[17];
  char m_byGrade;
  __declspec(align(8)) double m_dTotalDalant;
  double m_dTotalGold;
  unsigned int m_dwEmblemBack;
  unsigned int m_dwEmblemMark;
  char m_byRace;
  __declspec(align(4)) int m_nMemberNum;
  _guild_member_info *m_MemberData;
  int m_nApplierNum;
  _guild_applier_info *m_ApplierData;
  char m_bNowProcessSgtMter;
  __declspec(align(4)) unsigned int m_dwSuggesterSerial;
  _suggested_matter m_SuggestedMatter;
  _guild_member_download_zocl *m_DownPacket_Member;
  _guild_applier_download_zocl *m_DownPacket_Applier;
  _guild_query_info_result_zocl *m_QueryPacket_Info;
  _guild_money_io_download_zocl *m_MoneyIO_List;
  _guild_member_buddy_download_zocl *m_Buddy_List;
  int m_nIOMoneyHistoryNum;
  __declspec(align(8)) _io_money_data m_IOMoneyHistory[100];
  char m_bDBWait;
  char m_bIOWait;
  char m_bRankWait;
  char m_byMoneyOutputKind;
  int m_nTempMemberNum;
  unsigned int m_dwLastLoopTime;
  char m_szHistoryFileName[128];
};

/*  586 */
struct CGuildVtbl
{
  void *(__thiscall *__vecDelDtor)(CGuild *this, unsigned int);
};

/*  587 */
struct __declspec(align(8)) CPlayer
{
  CCharacter baseclass_0;
  char m_bLoad;
  char m_bOper;
  char m_bFullMode;
  char m_byUserDgr;
  char m_bySubDgr;
  char m_bFirstStart;
  char m_bOutOfMap;
  char m_bReContATrade;
  char m_byMoveDirect;
  char m_byPlusKey;
  unsigned __int16 m_wXorKey;
  unsigned int m_dwMoveCount;
  unsigned int m_dwTargetCount;
  unsigned int m_dwAttackCount;
  char m_bBaseDownload;
  char m_bInvenDownload;
  char m_bForceDownload;
  char m_bCumDownload;
  char m_bQuestDownload;
  char m_bSpecialDownload;
  char m_bLinkBoardDownload;
  char m_bGuildListDownload;
  char m_bGuildDownload;
  char m_bBuddyListDownload;
  char m_bBlockParty;
  char m_bBlockWhisper;
  char m_bBlockTrade;
  __declspec(align(4)) unsigned int m_dwSelfDestructionTime;
  int m_nSelfDestructionDamage;
  CUserDB *m_pUserDB;
  CPartyPlayer *m_pPartyMgr;
  CPlayerDB m_Param;
  _CLID m_id;
  char m_byMoveType;
  char m_byModeType;
  char m_byStandType;
  __declspec(align(4)) _WEAPON_PARAM m_pmWpn;
  _DTRADE_PARAM m_pmTrd;
  _MASTERY_PARAM m_pmMst;
  _TOWER_PARAM m_pmTwr;
  _AUTO_TRADE_PARAM m_pmAutoTrade;
  _TRAP_PARAM m_pmTrp;
  _BUDDY_LIST m_pmBuddy;
  CQuestMgr m_QuestMgr;
  char m_byMapInModeBuffer;
  __declspec(align(4)) int m_nVoteSerial;
  unsigned int m_dwLastCheckRegionTime;
  unsigned __int16 m_wRegionMapIndex;
  unsigned __int16 m_wRegionIndex;
  char m_byHSKQuestCode;
  __declspec(align(4)) int m_nHSKPvpPoint;
  unsigned __int16 m_wKillPoint;
  __declspec(align(4)) CDarkHoleChannel *m_pDHChannel;
  float m_fTalik_DefencePoint;
  float m_fTalik_AvoidPoint;
  char m_bCheat_100SuccMake;
  char m_bCheat_Matchless;
  char m_bFreeRecallWaitTime;
  char m_bFreeSFByClass;
  char m_bLootFree;
  char m_bNeverDie;
  __declspec(align(4)) int m_nMaxAttackPnt;
  char m_bSpyGM;
  char m_bRecvMapChat;
  unsigned __int16 m_wVisualVer;
  int m_nLastBeatenPart;
  unsigned int m_dwLastState;
  unsigned __int16 m_wExpRate;
  __declspec(align(4)) int m_nAddDfnMstByClass;
  int m_nAddPointByClass[3];
  int m_nMaxPoint[3];
  int m_nTolValue[4];
  int m_nMaxDP;
  __int16 m_zLastTol[4];
  float m_fEquipSpeed;
  int m_nOldPoint[3];
  int m_nOldMaxDP;
  float m_fSendTarPos[2];
  char m_byLastDirect;
  __declspec(align(4)) float m_fLastRecvPos[3];
  char m_byLastRecvMapIndex;
  __declspec(align(4)) unsigned int m_dwLastTakeItemTime;
  int m_nCheckMovePacket;
  char m_bCheckMovePacket;
  char m_byDefMatCount;
  _100_per_random_table m_MakeRandTable;
  __declspec(align(4)) CMapData *m_pBindMapData;
  _dummy_position *m_pBindDummyData;
  unsigned int m_dwNextTimeDungeonDie;
  unsigned int m_dwLastTimeCheckUnitViewOver;
  unsigned int m_dwUnitViewOverTime;
  _UNIT_DB_BASE::_LIST *m_pUsingUnit;
  CParkingUnit *m_pParkingUnit;
  char m_byUsingWeaponPart;
  __declspec(align(4)) int m_nUnitDefFc;
  _STORAGE_LIST::_db_con *m_pSiegeItem;
  _STORAGE_LIST::_db_con *m_pRecalledAnimusItem;
  CAnimus *m_pRecalledAnimusChar;
  unsigned int m_dwLastRecallTime;
  char m_byNextRecallReturn;
  __declspec(align(2)) unsigned __int16 m_wTimeFreeRecallSerial;
  CMyTimer m_tmrIntervalSec;
  unsigned int m_dwLastSetPointTime;
  CMyTimer m_tmrBilling;
  float m_fBeforeDungeonPos[3];
  CMapData *m_pBeforeDungeonMap;
  _MEM_PAST_WHISPER m_PastWhiper[10];
  unsigned int m_dwContItemEffEndTime;
  float m_fContItemAFRate;
  float m_fContItemDefRate;
  int m_nContItemHitRate;
  unsigned int m_dwPtnNextTime[3];
  char m_bUpCheckEquipEffect;
  char m_bDownCheckEquipEffect;
  char m_byEffectEquipCode[14];
  char m_byPosRaceTown;
  __declspec(align(4)) CMapData *m_pBeforeTownCheckMap;
  float m_fBeforeTownCheckPos[2];
  CPlayer::__target m_TargetObject;
  unsigned __int16 m_wPointRate_PartySend[3];
  char m_bMineMode;
  __declspec(align(2)) unsigned int m_dwMineNextTime;
  unsigned __int16 m_wBatterySerialTmp;
  char m_bySelectOreIndex;
  char m_byDelaySec;
  __int16 m_zMinePos[2];
  _ATTACK_DELAY_CHECKER m_AttDelayChker;
  float m_fUnitPv_AttFc;
  float m_fUnitPv_DefFc;
  float m_fUnitPv_RepPr;
  char m_szItemHistoryFileName[64];
  char m_szLvHistoryFileName[64];
  unsigned int m_dwUMWHLastTime;
  _other_shape_all_zocl m_bufShapeAll;
  _other_shape_part_zocl m_bufSpapePart;
};

/*  588 */
#pragma pack(push, 4)
struct _guild_member_info
{
  unsigned int dwSerial;
  unsigned __int16 wszName[17];
  char byClassInGuild;
  char byLv;
  unsigned int dwPvpPoint;
  char byRank;
  char byGrade;
  CPlayer *pPlayer;
  char bVote;
};
#pragma pack(pop)

/*  589 */
struct _guild_applier_info
{
  CPlayer *pPlayer;
  unsigned int dwApplyTime;
};

/*  590 */
#pragma pack(push, 4)
struct _suggested_matter
{
  char byMatterType;
  unsigned int dwMatterDst;
  unsigned __int16 wszMatterDst[64];
  unsigned int dwMatterObj1;
  unsigned int dwMatterObj2;
  char byVoteState[2];
  unsigned __int16 wszComment[65];
  unsigned int dwMatterVoteSynKey;
  unsigned int dwStartTime;
  int nTotal_VotableMemNum;
  _guild_member_info *VotableMem[150];
};
#pragma pack(pop)

/*  591 */
struct _guild_member_download_zocl
{
  char byDownType;
  unsigned int dwGuildSerial;
  char byGuildGrade;
  unsigned int dwEmblemBack;
  unsigned int dwEmblemMark;
  double dDalant;
  double dGold;
  unsigned __int16 wDataSize;
  char sData[10000];
};

/*  592 */
struct _guild_applier_download_zocl
{
  unsigned __int16 wDataSize;
  char sData[10000];
};

/*  593 */
struct _guild_query_info_result_zocl
{
  unsigned int dwGuildSerial;
  unsigned __int16 wszGuildName[17];
  char byGrade;
  unsigned int dwEmblemBack;
  unsigned int dwEmblemMark;
};

/*  594 */
struct _guild_money_io_download_zocl
{
  unsigned __int16 wDataSize;
  char sData[10000];
};

/*  595 */
struct _guild_member_buddy_download_zocl
{
  unsigned __int16 wDataSize;
  char sData[900];
};

/*  596 */
#pragma pack(push, 8)
struct _io_money_data
{
  unsigned __int16 wszIOerName[17];
  unsigned int dwIOerSerial;
  int nIODalant;
  int nIOGold;
  double dLeftDalant;
  double dLeftGold;
  char byDate[4];
};
#pragma pack(pop)

/*  597 */
struct __declspec(align(8)) CPlayerDB
{
  char m_byPvPGrade;
  _character_db_load m_dbChar;
  _bag_db_load m_dbInven;
  _equip_db_load m_dbEquip;
  _embellish_db_load m_dbEmbellish;
  _force_db_load m_dbForce;
  _animus_db_load m_dbAnimus;
  _trunk_db_load m_dbTrunk;
  __declspec(align(4)) _STORAGE_LIST *m_pStoragePtr[6];
  _UNIT_DB_BASE m_UnitDB;
  _QUEST_DB_BASE m_QuestDB;
  _SFCONT_DB_BASE m_SFContDB;
  __declspec(align(2)) _trade_wait_link m_TradeWaitLink;
  unsigned __int16 *m_wCuttingResBuffer;
  char m_byNameLen;
  __declspec(align(4)) unsigned int m_dwAlterMastery[80];
  _class_fld *m_pClassData;
  _class_fld *m_pClassHistory[3];
  _class_fld **m_ppHistoryEffect[4];
  _quick_link m_QLink[50];
  CGuild *m_pGuild;
  _guild_member_info *m_pGuildMemPtr;
  char m_byClassInGuild;
  __declspec(align(4)) CGuild *m_pApplyGuild;
  char m_bGuildLock;
  char m_bTrunkOpen;
  unsigned __int16 m_wszTrunkPasswd[13];
  __declspec(align(8)) double m_dTrunkDalant;
  double m_dTrunkGold;
  char m_byTrunkSlotNum;
  char m_byTrunkHintIndex;
  unsigned __int16 m_wszTrunkHintAnswer[17];
  int m_nMakeTrapMaxNum;
  unsigned __int16 m_wSerialCount;
  __declspec(align(4)) CPlayer *m_pThis;
  char m_aszName[17];
};

/*  598 */
#pragma pack(push, 4)
struct _WEAPON_PARAM
{
  _STORAGE_LIST::_db_con *pFixWp;
  _UNIT_DB_BASE::_LIST *pFixUnit;
  int nGaMaxAF;
  int nGaMinAF;
  char byGaMinSel;
  char byGaMaxSel;
  int nMaMaxAF;
  int nMaMinAF;
  char byMaMinSel;
  char byMaMaxSel;
  char byAttTolType;
  char byWpClass;
  char byWpType;
  unsigned __int16 wGaAttRange;
  unsigned __int16 wMaAttRange;
};
#pragma pack(pop)

/*  599 */
#pragma pack(push, 4)
struct _DTRADE_ITEM
{
  char bLoad;
  char byStorageCode;
  unsigned int dwSerial;
  char byAmount;
};
#pragma pack(pop)

/*  600 */
#pragma pack(push, 4)
struct _DTRADE_PARAM
{
  char bDTradeMode;
  char bDTradeLock;
  char bDTradeOK;
  unsigned __int16 wDTradeDstIndex;
  unsigned int dwDTradeDstSerial;
  _DTRADE_ITEM DItemNode[15];
  unsigned int dwDTrade_Dalant;
  unsigned int dwDTrade_Gold;
  char byEmptyInvenNum;
  char bySellItemNum;
  unsigned int dwKey[4];
};
#pragma pack(pop)

/*  601 */
struct _mastery_up_data
{
  char bUpdate;
  char byCode;
  char byIndex;
  char byMastery;
};

/*  602 */
#pragma pack(push, 2)
struct _skill_lv_up_data
{
  char bUpdate;
  unsigned __int16 wIndex;
  char byLv;
};
#pragma pack(pop)

/*  603 */
#pragma pack(push, 4)
struct _MASTERY_PARAM
{
  char m_byRaceCode;
  _STAT_DB_BASE m_BaseCum;
  unsigned int m_dwSkillMasteryCum[8];
  unsigned int m_dwForceLvCum[4];
  char m_mtyWp[2];
  char m_mtySuffer;
  char m_mtyShield;
  char m_lvSkill[48];
  char m_mtySkill[8];
  char m_mtyForce[24];
  char m_mtyStaff;
  char m_mtyMakeItem[3];
  char m_mtySpecial;
  unsigned int *m_ppdwMasteryCumPtr[7];
  char *m_ppbyMasteryPtr[7];
  char *m_ppbyEquipMasteryPrt[6];
  _mastery_up_data m_MastUpData;
  _skill_lv_up_data m_SkillUpData;
  char m_bUpdateEquipMast;
};
#pragma pack(pop)

/*  604 */
#pragma pack(push, 4)
struct CGuardTower
{
  CCharacter baseclass_0;
  int m_nHP;
  CPlayer *m_pMasterTwr;
  unsigned int m_dwMasterSerial;
  char m_byRaceCode;
  _STORAGE_LIST::_db_con *m_pItem;
  unsigned __int16 m_wItemSerial;
  char m_bSystemStruct;
  int m_nIniIndex;
  unsigned int m_dwStartMakeTime;
  char m_bComplete;
  char m_bQuick;
  CCharacter *m_pTarget;
  unsigned int m_dwLastDestroyTime;
  unsigned int m_dwLastWaitTime;
};
#pragma pack(pop)

/*  605 */
#pragma pack(push, 4)
struct _TOWER_PARAM::_list
{
  _STORAGE_LIST::_db_con *m_pTowerItem;
  unsigned __int16 m_wItemSerial;
  CGuardTower *m_pTowerObj;
};
#pragma pack(pop)

/*  606 */
struct _TOWER_PARAM
{
  int m_nCount;
  _TOWER_PARAM::_list m_List[6];
};

/*  607 */
#pragma pack(push, 4)
struct _uta_list
{
  int m_nListIndex;
  char m_bySort_Table;
  char m_bySort_Kind;
  char m_bySort_Lv;
  _uta_node m_Node[1000];
  char m_byByteSize_ItemIndex;
  char m_byByteSize_ItemAmount;
  char m_byByteSize_ItemLv;
  char m_byPageCount;
  unsigned int m_dwListVer;
  char m_bSort[4];
  _a_trade_reged_list_result_zocl m_ListPacket[4][100];
  unsigned int m_dwLastVerUpTime;
  char m_bUpdate;
};
#pragma pack(pop)

/*  608 */
#pragma pack(push, 4)
struct _AUTO_TRADE_PARAM::_param
{
  _STORAGE_LIST::_db_con *pItem;
  unsigned __int16 wItemSerial;
  unsigned int dwPrice;
  char byInvenSlotIndex;
  _uta_list *pList;
  unsigned int dwRegedSerial;
  unsigned int dwPushTime;
  unsigned __int16 wPassSec;
};
#pragma pack(pop)

/*  609 */
#pragma pack(push, 4)
struct _AUTO_TRADE_PARAM
{
  char m_byUseNum;
  _AUTO_TRADE_PARAM::_param m_Item[10];
};
#pragma pack(pop)

/*  610 */
#pragma pack(push, 8)
struct CTrap
{
  CCharacter baseclass_0;
  int m_nHP;
  CPlayer *m_pMaster;
  char m_byRaceCode;
  unsigned int m_dwMasterSerial;
  unsigned __int16 m_wszMasterName[17];
  char m_aszMasterName[17];
  double m_dMasterPvPPoint;
  unsigned int m_dwStartMakeTime;
  char m_bComplete;
  char m_bBreakTransparBuffer;
  unsigned int m_dwLastDestroyTime;
};
#pragma pack(pop)

/*  611 */
struct _TRAP_PARAM::_param
{
  CTrap *pItem;
  unsigned int dwSerial;
};

/*  612 */
struct _TRAP_PARAM
{
  _TRAP_PARAM::_param m_Item[20];
  int m_nCount;
};

/*  613 */
#pragma pack(push, 4)
struct _BUDDY_LIST::__list
{
  unsigned int dwSerial;
  unsigned __int16 wszName[17];
  CPlayer *pPtr;
};
#pragma pack(pop)

/*  614 */
struct CNetIndexList::_index_node
{
  unsigned int m_dwIndex;
  CNetIndexList::_index_node *m_pPrev;
  CNetIndexList::_index_node *m_pNext;
};

/*  615 */
struct CNetIndexList
{
  CNetIndexList::_index_node m_Head;
  CNetIndexList::_index_node m_Tail;
  CNetIndexList::_index_node m_BufHead;
  CNetIndexList::_index_node m_BufTail;
  CNetIndexList::_index_node *m_pBufNode;
  CNetCriticalSection m_csList;
  unsigned int m_dwCount;
  unsigned int m_dwBufCount;
  unsigned int m_dwMaxBufNum;
};

/*  616 */
struct _BUDDY_LIST
{
  _BUDDY_LIST::__list m_List[50];
  CNetIndexList m_LastApply;
};

/*  617 */
struct _event_condition_node
{
  int m_nAcepIDXType;
  int m_nAcepSub;
  char m_strAcepVal[64];
};

/*  618 */
struct _event_node
{
  int m_bActiveType;
  int m_nQTType;
  int m_bSelectQuestManual;
  int m_nAcepProNum;
  int m_nAcepProDen;
  _event_condition_node m_CondNode[5];
  char m_strLinkQuest[5][64];
};

/*  619 */
struct _event_node_point
{
  _event_node *m_pEvent;
  int m_nEventType;
  int m_nEventIndex;
  int m_nEventNodeIndex;
};

/*  620 */
#pragma pack(push, 2)
struct CQuestMgr
{
  CPlayer *m_pMaster;
  _QUEST_DB_BASE *m_pQuestData;
  unsigned int m_dwOldTime;
  _event_node_point m_LastSelectEvent;
  char m_byCurQuestNum[3];
  CMyTimer m_tmTimeOut;
};
#pragma pack(pop)

/*  621 */
#pragma pack(push, 4)
struct CDarkHoleChannel
{
  CDarkHoleChannelVtbl *vfptr;
  unsigned __int16 m_wChannelIndex;
  unsigned int m_dwChannelSerial;
  _dh_quest_setup *m_pQuestSetup;
  unsigned __int16 m_wLayerIndex;
  _LAYER_SET *m_pLayerSet;
  _dh_mission_mgr m_MissionMgr;
  unsigned __int16 m_wszOpenerName[17];
  char m_aszOpenerName[17];
  unsigned int m_dwOpenerSerial;
  unsigned int m_dwPartySerial[8];
  int m_nOpenerDegree;
  int m_nOpenerSubDegree;
  CDarkHole *m_pHoleObj;
  unsigned int m_dwHoleSerial;
  _dh_player_mgr m_Quester[32];
  _dh_player_mgr *m_pLeaderPtr;
  unsigned int m_dwEnterOrderCounter;
  unsigned int m_dwLoopTime;
  unsigned int m_dwNextCloseTime;
  unsigned int m_dwSendNewMissionMsgNextTime;
  CIndexList m_listEnterMember;
  char m_bMoveNextMission;
};
#pragma pack(pop)

/*  622 */
struct CDarkHoleChannelVtbl
{
  void *(__thiscall *__vecDelDtor)(CDarkHoleChannel *this, unsigned int);
};

/*  623 */
struct __declspec(align(8)) _dh_quest_setup
{
  _dh_quest_setupVtbl *vfptr;
  __declspec(align(8)) char szQuestTitle[33];
  __declspec(align(4)) int bPartyOnly;
  unsigned int dwMaxMember;
  CMapData *pUseMap;
  _dh_mission_setup *pStartMissionSetup;
  unsigned int dwMonRepIndex;
  _dh_reward_sub_setup RewardOne;
  _dh_reward_sub_setup RewardOther;
  char szDescirptCode[17];
  char szStartMissionBuffer[33];
  __declspec(align(4)) int nEmbMissionSetupNum;
  _dh_mission_setup *EmbMissionSetup[100];
  int nDummyBlockNum;
  _dh_quest_setup::__dummy_block *pDummyBlock[32];
};

/*  624 */
struct _dh_quest_setupVtbl
{
  void *(__thiscall *__vecDelDtor)(_dh_quest_setup *this, unsigned int);
};

/*  625 */
#pragma pack(push, 4)
struct _dh_mission_setup
{
  _dh_mission_setupVtbl *vfptr;
  char szMissionTitle[33];
  _dummy_position *pAreaDummy;
  _dummy_position *pStartDummy;
  char byJobOrder;
  unsigned int dwLimTimeMSec;
  char byResultType;
  char *pszNextMissionTitle;
  int nAddMonsterNum;
  _dh_mission_setup::__add_monster *pAddMonster[32];
  char szDescirptCode[17];
  char szCompleteMsg[17];
  int nLootItemNum;
  _dh_mission_setup::__item *pLootItem[32];
  int nChangeMonsterNum;
  _dh_mission_setup::__change_monster *pChangeMonster[32];
  int nInnerCheckNum;
  _dh_mission_setup::__inner_check *pInnerCheck[64];
  int nRespondCheckNum;
  _dh_mission_setup::__respond_check *pRespondCheck[32];
  int nEmbJobSetupNum;
  _dh_job_setup *EmbJobSetup[8];
  _dh_mission_setup *pNextMission;
};
#pragma pack(pop)

/*  626 */
struct _dh_mission_setupVtbl
{
  void *(__thiscall *__vecDelDtor)(_dh_mission_setup *this, unsigned int);
};

/*  627 */
struct _monster_fld::__child_mon
{
  char strChildMon[64];
  int nChildMonNum;
};

/*  628 */
struct _monster_fld
{
  _base_fld baseclass_0;
  char m_strName[64];
  char m_strEffectCode[64];
  int m_nMobGrade;
  int m_nRaceCode;
  int m_nToCombatTime;
  int m_nPincerCnt;
  int m_nPreAttRange;
  int m_nMinMoveDistance;
  int m_nMaxMoveDistance;
  int m_nMinMoveArea;
  int m_nMaxMoveArea;
  int m_nGuardRecallTimeMS;
  int m_nGuardingArea;
  float m_fTarDecType;
  int m_nUglierType;
  float m_fLevel;
  int m_bMonsterCondition;
  float m_fExt;
  float m_fAttFcStd;
  int m_nAttack_DP;
  int m_nProperty;
  float m_fAttGap;
  int m_bAttRangeType;
  int m_nAttType;
  float m_fMinAFSelProb;
  float m_fMaxAFSelProb;
  float m_fAttSklUnit;
  float m_fDefSklUnit;
  float m_fWeakPart;
  int m_bUseDefence;
  float m_fStdDefFc;
  float m_fDefGap;
  float m_fDefFacing;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  float m_fForceLevel;
  float m_fForceMastery;
  float m_fForceAttStd;
  char m_strAttTechID1[64];
  float m_fAttTech1UseProb;
  float m_fAttTechID1MotionTime;
  char m_strAttTechID2[64];
  float m_fAttTech2UseProb;
  float m_fAttTechID2MotionTime;
  char m_strAttTechID3[64];
  float m_fAttTech3UseProb;
  float m_fAttTechID3MotionTime;
  char m_strPSecTechID[64];
  float m_fPSecTechIDMotionTime;
  char m_strMSecTechID[64];
  float m_fMSecTechIDMotionTime;
  float m_fMaxHP;
  float m_fHPRecDelay;
  float m_fHPRecUnit;
  float m_fAttSpd;
  float m_fAttMoTime1;
  float m_fAttMoTime2;
  float m_fCrtMoTime;
  float m_fViewExt;
  float m_fAttExt;
  float m_fMRefExt;
  float m_fCopTime;
  float m_fMovSpd;
  float m_fWarMovSpd;
  float m_fScaleRate;
  int m_bScaleChange;
  float m_fWidth;
  float m_fWaitTime;
  int m_nAsitReqRate;
  int m_nAsitAptRate;
  _monster_fld::__child_mon m_Child[3];
  float m_fEmoType;
  float m_fOffensiveRate;
  float m_fDamHPStd;
  float m_fEmoImpStdTime;
  float m_fGoodToOrdHPPer;
  float m_fOrdToBadHPPer;
  float m_fBadToWorseHPPer;
  float m_fEspTFProb;
  float m_fTypeCompTerms;
  float m_fPSecTechChat;
  float m_fPAttTechChat;
  float m_fEmo0Chat;
  float m_fEmo0ChatProb;
  float m_fEmo1Chat;
  float m_fEmo1ChatProb;
  float m_fEmo2Chat;
  float m_fEmo2ChatProb;
  float m_fEmo3Chat;
  float m_fEmo3ChatProb;
  float m_fEmo4Chat;
  float m_fEmo4ChatProb;
  float m_fAsitReqSteEspChat;
  float m_fAsitReqSteEspChatProb;
  float m_fAsitReqSteHelpChat;
  float m_fAsitReqSteHelpChatProb;
  float m_fAsitReqSteCopChat;
  float m_fAsitReqSteCopChatProb;
  int m_nAttEffType;
  int m_nDefEffType;
};

/*  629 */
struct _dh_mission_setup::__add_monster
{
  _monster_fld *pMonFld;
  int nNum;
  AREA_TYPE EventAreaType;
  void *pvEventPosition;
};

/*  630 */
#pragma pack(push, 4)
struct _dh_mission_setup::__item
{
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  unsigned __int16 wMonsterIndex;
  unsigned int dwDur;
};
#pragma pack(pop)

/*  631 */
struct _dh_mission_setup::__change_monster
{
  unsigned __int16 wMonsterIndexA;
  unsigned __int16 wMonsterIndexB;
  int nProb;
  char *pszIfMissionDescirptCode;
  char *pszifCompleteMsg;
};

/*  632 */
#pragma pack(push, 2)
struct _dh_mission_setup::__inner_check
{
  AREA_TYPE EventAreaType;
  void *pvEventPosition;
  AREA_TYPE ReactAreaType;
  void *pvReactPosition;
  char byTableCode;
  unsigned __int16 wObjIndex;
  unsigned int dwNum;
  char *pszMsg;
};
#pragma pack(pop)

/*  633 */
#pragma pack(push, 2)
struct _dh_mission_setup::__respond_check
{
  char byActTableCode;
  unsigned __int16 byActObjIndex;
  char byReactTableCode;
  unsigned __int16 byReactObjIndex;
  unsigned int dwReactNum;
  AREA_TYPE ReactAreaType;
  void *pvReactPosition;
  char *pszMsg;
};
#pragma pack(pop)

/*  634 */
#pragma pack(push, 4)
struct _dh_job_setup
{
  _dh_job_setupVtbl *vfptr;
  char szJobTitle[33];
  EM_DH_EVENT eventType;
  _job_sub_setup JobSetup;
  int nReactNum;
  _react_sub_setup *ReactSetup[10];
  char szDescirptCode[17];
};
#pragma pack(pop)

/*  635 */
struct _dh_job_setupVtbl
{
  void *(__thiscall *__vecDelDtor)(_dh_job_setup *this, unsigned int);
};

/*  636 */
#pragma pack(push, 4)
struct _job_sub_setup
{
  _base_fld *pEventFld;
  char byTable;
  int nEventCount;
};
#pragma pack(pop)

/*  637 */
#pragma pack(push, 4)
struct _react_sub_setup
{
  char byReactType;
  _dummy_position *pPortalDummy;
};
#pragma pack(pop)

/*  638 */
struct _dh_reward_sub_setup
{
  _dh_reward_sub_setupVtbl *vfptr;
  __declspec(align(8)) int nItemNum;
  _STORAGE_LIST::_db_con *Item[20];
  __declspec(align(8)) double dExp;
  unsigned int dwPvp;
  unsigned int dwDalant;
};

/*  639 */
struct _dh_reward_sub_setupVtbl
{
  void *(__thiscall *__vecDelDtor)(_dh_reward_sub_setup *this, unsigned int);
};

/*  640 */
struct _dh_quest_setup::__dummy_block
{
  char *pszBlockName;
  int nSubDummyNum;
  _dummy_position *pSubDummy[32];
};

/*  641 */
#pragma pack(push, 4)
struct _dh_mission_mgr::_count
{
  int nCount;
  char bPass;
};
#pragma pack(pop)

/*  642 */
struct _dh_mission_mgr::_if_change
{
  _dh_mission_setup *pMissionPtr;
  char *pszDespt;
  char *pszComMsg;
};

/*  643 */
#pragma pack(push, 4)
struct _dh_mission_mgr
{
  _dh_mission_setup *pCurMssionPtr;
  _dh_mission_mgr::_count Count[8];
  char bCheck;
  char bOpenPortal[128];
  unsigned int dwMissionStartTime;
  unsigned int dwMissionEndTime;
  char bInnerCheck[64];
  _dh_mission_mgr::_if_change IfCont[100];
};
#pragma pack(pop)

/*  644 */
#pragma pack(push, 4)
struct CDarkHole
{
  CGameObject baseclass_0;
  CDarkHoleChannel *m_pChannel;
  unsigned int m_dwChannelSerial;
  unsigned int m_dwOpenerSerial;
  unsigned __int16 m_wszOpenerName[17];
  char m_aszOpenerName[17];
  unsigned int m_dwNextCloseTime;
  unsigned int m_dwNextHurryTime;
  char m_bHurry;
};
#pragma pack(pop)

/*  645 */
#pragma pack(push, 4)
struct _dh_player_mgr
{
  CPlayer *pOne;
  unsigned int dwSerial;
  CMapData *pLastMap;
  unsigned __int16 wLastLayer;
  float fLastPos[3];
  int nEnterOrder;
};
#pragma pack(pop)

/*  646 */
struct CIndexList
{
  CIndexListVtbl *vfptr;
  CIndexList::_index_node m_Head;
  CIndexList::_index_node m_Tail;
  CIndexList::_index_node m_BufHead;
  CIndexList::_index_node m_BufTail;
  CIndexList::_index_node *m_pBufNode;
  CSyncCS m_csList;
  unsigned int m_dwCount;
  unsigned int m_dwBufCount;
  unsigned int m_dwMaxBufNum;
};

/*  647 */
struct CIndexListVtbl
{
  void *(__thiscall *__vecDelDtor)(CIndexList *this, unsigned int);
};

/*  648 */
#pragma pack(push, 4)
struct CIndexList::_index_node
{
  char m_bLoad;
  unsigned int m_dwIndex;
  unsigned int m_dwInfoDataSize;
  char *m_pInfo;
  CIndexList::_index_node *m_pPrev;
  CIndexList::_index_node *m_pNext;
};
#pragma pack(pop)

/*  649 */
struct CSyncCS
{
  CSyncCSVtbl *vfptr;
  char m_bUse;
  __declspec(align(4)) _RTL_CRITICAL_SECTION m_cs;
};

/*  650 */
struct CSyncCSVtbl
{
  void *(__thiscall *__vecDelDtor)(CSyncCS *this, unsigned int);
};

/*  651 */
#pragma pack(push, 4)
struct CParkingUnit
{
  CGameObject baseclass_0;
  CPlayer *m_pOwner;
  unsigned int m_dwOwnerSerial;
  char m_byFrame;
  char m_byPartCode[6];
  char m_byCreateType;
  char m_byTransDistCode;
  unsigned int m_dwParkingStartTime;
  unsigned __int16 m_wHPRate;
  unsigned int m_dwLastDestroyTime;
};
#pragma pack(pop)

/*  652 */
struct _animus_fld
{
  _base_fld baseclass_0;
  int m_nLevel;
  unsigned int m_nForLvUpExp;
  float m_fPenalty;
  float m_fAttGap;
  int m_nAttack_DP;
  int m_nAttFcStd;
  int m_nMinAFSelProb;
  int m_nMaxAFSelProb;
  int m_nAttSklUnit;
  int m_nDefSklUnit;
  float m_fWeakPart;
  int m_nStdDefFc;
  float m_fDefGap;
  float m_fDefFacing;
  int m_nFireTol;
  int m_nWaterTol;
  int m_nSoilTol;
  int m_nWindTol;
  int m_nForceLevel;
  int m_nForceMastery;
  int m_nForceAttStd;
  char m_strAttTechID1[64];
  int m_nAttTech1UseProb;
  int m_nAttTechID1MotionTime;
  char m_strPSecTechID[64];
  int m_nPSecTechIDMotionTime;
  char m_strMSecTechID[64];
  int m_nMSecTechIDMotionTime;
  int m_nMaxHP;
  int m_nHPRecDelay;
  int m_nHPRecUnit;
  int m_nMaxFP;
  int m_nFPRecDelay;
  int m_nFPRecUnit;
  int m_nAttSpd;
  int m_nAttMoTime1;
  int m_nAttMoTime2;
  int m_nCrtMoTime;
  int m_nViewExt;
  int m_nRefExt;
  int m_nAttExt;
  int m_nMovSpd;
  int m_nScaleRate;
  int m_nWidth;
  int m_nAttEffType;
  int m_nDefEffType;
};

/*  653 */
struct CAITimer
{
  unsigned int m_BefTime;
  unsigned int m_Delay;
  unsigned int m_DDelay;
};

/*  654 */
#pragma pack(push, 4)
struct _attack_param
{
  CCharacter *pDst;
  int nPart;
  int nTol;
  int nClass;
  int nMinAF;
  int nMaxAF;
  int nMinSel;
  int nMaxSel;
  int nExtentRange;
  int nShotNum;
  int nAddAttPnt;
  int nWpType;
  char byEffectCode;
  _base_fld *pFld;
  float fArea[3];
  int nLevel;
  int nMastery;
  char bPassCount;
  int nAttactType;
  char bMatchless;
  int nMaxAttackPnt;
};
#pragma pack(pop)

/*  655 */
struct SKILL
{
  int m_Type;
  int m_Element;
  int m_MinDmg;
  int m_StdDmg;
  int m_MaxDmg;
  int m_CritDmg;
  int m_MinProb;
  int m_MaxProb;
  int m_IsCritical;
  _attack_param m_param;
  unsigned int m_Len;
  unsigned int m_CastDelay;
  unsigned int m_Delay;
  unsigned int m_bLoad;
  unsigned int m_Active;
  unsigned int m_BefTime;
};

/*  656 */
#pragma pack(push, 4)
struct CAnimus
{
  CCharacter baseclass_0;
  char m_byClassCode;
  int m_nHP;
  int m_nFP;
  unsigned int m_dwExp;
  CPlayer *m_pMaster;
  unsigned int m_dwMasterSerial;
  unsigned __int16 m_wszMasterName[17];
  char m_aszMasterName[17];
  char m_byRoleCode;
  unsigned int m_dwLastDestroyTime;
  float m_fMoveSpeed;
  char m_byPosRaceTown;
  CMapData *m_pBeforeTownCheckMap;
  float m_fBeforeTownCheckPos[2];
  unsigned int m_dwStunTime;
  unsigned int m_dwBeAttackedTargetTime;
  CCharacter *m_pNextTarget;
  _animus_fld *m_pRecord;
  int m_nMaxHP;
  int m_nMaxFP;
  float m_Mightiness;
  int m_DefPart[5];
  unsigned int m_dwAIMode;
  CCharacter *m_pTarget;
  float m_BefTarget[3];
  CAITimer m_AITimer[3];
  SKILL m_Skill[2];
};
#pragma pack(pop)

/*  657 */
#pragma pack(push, 4)
struct _MEM_PAST_WHISPER
{
  char bMemory;
  unsigned __int16 wszName[17];
  char byNameLen;
  CPlayer *pDst;
  unsigned int dwMemoryTime;
};
#pragma pack(pop)

/*  658 */
#pragma pack(push, 4)
struct CPlayer::__target
{
  CGameObject *pObject;
  char byKind;
  char byID;
  unsigned int dwSerial;
  unsigned __int16 wHPRate;
};
#pragma pack(pop)

/*  659 */
#pragma pack(push, 2)
struct _ATTACK_DELAY_CHECKER::_eff_list
{
  char byEffectCode;
  unsigned __int16 wEffectIndex;
  unsigned int dwNextTime;
};
#pragma pack(pop)

/*  660 */
#pragma pack(push, 4)
struct _ATTACK_DELAY_CHECKER::_mas_list
{
  char byEffectCode;
  char byMastery;
  unsigned int dwNextTime;
};
#pragma pack(pop)

/*  661 */
#pragma pack(push, 4)
struct _ATTACK_DELAY_CHECKER
{
  _ATTACK_DELAY_CHECKER::_eff_list EFF[10];
  _ATTACK_DELAY_CHECKER::_mas_list MAS[10];
  unsigned int dwNextEffTime;
  unsigned int dwNextGenTime;
  unsigned int dwLastGnAttackTime;
  unsigned int dwLastSFAttackTime;
  int nFailCount;
  int m_nNextAddTime;
  char byTemp_EffectCode;
  unsigned __int16 wTemp_EffectIndex;
  char byTemp_EffectMastery;
};
#pragma pack(pop)

/*  662 */
struct _other_shape_all_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  char byRecIndex;
  char byFaceIndex;
  char byHairIndex;
  unsigned __int16 wModelPerPart[8];
  char byUserGrade;
  unsigned int dwGuildSerial;
  unsigned __int16 wszName[17];
  char bySpecialPart;
  char byFrameIndex;
  char byUnitPartIndex[6];
};

/*  663 */
struct _other_shape_part_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  unsigned __int16 wModelPerPart[8];
  char bySpecialPart;
  char byFrameIndex;
  char byUnitPartIndex[6];
};

/*  664 */
#pragma pack(push, 4)
struct _uta_node
{
  char bLoad;
  CPlayer *pSeller;
  unsigned int dwSellerSerial;
  _STORAGE_LIST::_db_con *pItem;
  unsigned __int16 wItemSerial;
  unsigned int dwPrice;
  unsigned int dwRegedSerial;
  unsigned int dwRegedTime;
  unsigned int dwPassTime;
  char byItemLv;
};
#pragma pack(pop)

/*  665 */
struct _a_trade_reged_list_result_zocl
{
  char byRetCode;
  char byTableCode;
  char byKind;
  char byLvClass;
  unsigned __int16 wListIndex;
  unsigned int dwVer;
  char bySortType;
  char byPage;
  unsigned __int16 wItemNum;
  unsigned __int16 wDataSize;
  char sData[1000];
};

/*  666 */
#pragma pack(push, 4)
struct UTA
{
  char m_bOper;
  _uta_list *m_listWeapon[12];
  _uta_list *m_listAmor[8];
  _uta_list *m_listRing;
  _uta_list *m_listAmulet;
  _uta_list *m_listForce[6];
  _uta_list *m_listAnimus;
  _uta_list *m_listBullet;
  _uta_list *m_listRes;
  _uta_list *m_listOre;
  _uta_list *m_listBooty;
  _uta_list *m_listPotion;
  int m_nListNum;
  _uta_list *m_Ptrlist[1000];
  int m_nResNum;
  int m_nOreNum;
  int m_nBootyNum;
  unsigned int m_dwLastUpdateTime;
  unsigned int m_dwRegedSerialCounter;
};
#pragma pack(pop)

/*  667 */
#pragma pack(push, 4)
struct CItemStore
{
  char m_bLive;
  int m_nIndex;
  unsigned int m_dwSecIndex;
  char m_byNpcRaceCode;
  CMapData *m_pExistMap;
  _store_dummy *m_pDum;
  _StoreList_fld *m_pRec;
  int m_nStorageItemNum;
  _good_storage_info *m_pStorageItem;
  UTA *m_pUta;
  float m_fLastTradeDalant;
  float m_fLastTradeGold;
};
#pragma pack(pop)

/*  668 */
struct CDummyPosTable
{
  CDummyPosTableVtbl *vfptr;
  _dummy_position *m_pDumPos;
  int m_nDumPosDataNum;
};

/*  669 */
struct CDummyPosTableVtbl
{
  void *(__thiscall *__vecDelDtor)(CDummyPosTable *this, unsigned int);
};

/*  670 */
#pragma pack(push, 4)
struct _bsp_info
{
  char m_szBspName[50];
  int m_nMapMaxSize[3];
  int m_nMapMinSize[3];
  int m_nMapSize[3];
  int m_nLeafNum;
};
#pragma pack(pop)

/*  671 */
struct _sec_info
{
  int m_nSecNumW;
  int m_nSecNumH;
  int m_nSecNum;
};

/*  672 */
struct CCollLineDraw
{
  CCollLineDrawVtbl *vfptr;
  CMapData *m_pMap;
  CRect m_rcWnd;
  int m_nPointNum;
  _coll_point *m_Point;
  int m_nLineNum;
  _TOOL_COL_LINE *m_pLine;
};

/*  673 */
struct CCollLineDrawVtbl
{
  void *(__thiscall *__vecDelDtor)(CCollLineDraw *this, unsigned int);
};

/*  674 */
struct CRect
{
  tagRECT baseclass_0;
};

/*  675 */
struct _coll_point
{
  float m_fPosAbs[2];
  float m_fScrNor[2];
  float m_fReAbs[2];
  float m_fScrExt[2];
};

/*  676 */
struct CObject
{
  CObjectVtbl *vfptr;
};

/*  677 */
struct CRuntimeClass
{
  const char *m_lpszClassName;
  int m_nObjectSize;
  unsigned int m_wSchema;
  CObject *(__stdcall *m_pfnCreateObject)();
  CRuntimeClass *(__stdcall *m_pfnGetBaseClass)();
  CRuntimeClass *m_pNextClass;
};

/*  678 */
struct CString
{
  char *m_pchData;
};

/*  679 */
struct CFile
{
  CObject baseclass_0;
  unsigned int m_hFile;
  int m_bCloseOnDelete;
  CString m_strFileName;
};

/*  680 */
struct CDumpContext
{
  int m_nDepth;
  CFile *m_pFile;
};

/*  681 */
struct CObjectVtbl
{
  CRuntimeClass *(__thiscall *GetRuntimeClass)(CObject *this);
  void *(__thiscall *__vecDelDtor)(CObject *this, unsigned int);
  _BYTE gap8[4];
  void (__thiscall *AssertValid)(CObject *this);
  void (__thiscall *Dump)(CObject *this, CDumpContext *);
};

/*  682 */
struct CGdiObject
{
  CObject baseclass_0;
  void *m_hObject;
};

/*  683 */
struct CFont
{
  CGdiObject baseclass_0;
};

/*  684 */
struct HPEN__
{
  int unused;
};

/*  685 */
struct tagPOINT
{
  int x;
  int y;
};

/*  686 */
struct CPoint
{
  tagPOINT baseclass_0;
};

/*  687 */
struct _map_rate
{
  float fSide[2];
  int nStandard;
  int nPartner;
};

/*  688 */
struct CMapExtend
{
  CPoint m_ptStartMap;
  CPoint m_ptEndMap;
  CPoint m_ptCenter;
  char m_bExtendMode;
  __declspec(align(4)) CRect m_rcExtend;
  CPoint m_ptStartScreen;
  CPoint m_ptEndScreen;
  CPoint m_ptMoveScreen;
  CSize m_sizeExtend;
  HPEN__ *m_hPen;
  CSurface **m_pSF;
  _map_rate m_Rate;
  int m_bSetArea;
  int m_bMove;
};

/*  689 */
struct CMapDisplay
{
  CDisplay baseclass_0;
  CSurface *m_pSFMap;
  CSurface *m_pSFObj[2][10];
  CSurface *m_pSFCorpse;
  CSurface *m_pSFSelect;
  CSurface *m_pSFCircle;
  CSurface *m_pSFBuf;
  int m_nDummyDrawNum[20];
  CDummyDraw *m_DummyDraw[20];
  CCollLineDraw m_CollLineDraw[20];
  CRect m_rcWnd;
  CMyTimer m_tmrDraw;
  CFont m_Font;
  HPEN__ *m_hPenBorder;
  char m_bDisplayMode;
  __declspec(align(4)) CMapData *m_pActMap;
  unsigned __int16 m_wLayerIndex;
  __declspec(align(4)) CMapData *m_pOldActMap;
  unsigned __int16 m_wOldLayerIndex;
  __declspec(align(4)) CMapExtend m_MapExtend;
};

/*  690 */
#pragma pack(push, 4)
struct CMapOperation
{
  CMapOperationVtbl *vfptr;
  int m_nLoopStartPoint;
  unsigned int m_dwSpeedHackStdTime;
  int m_nMapNum;
  int m_nStdMapNum;
  CMapData *m_Map;
  int m_nRegionNum;
  _region_data m_RegionData[100];
  char m_bReSpawnMonster;
  CMyTimer m_tmrObjTerm;
  CMyTimer m_tmrSystem;
  CMyTimer m_tmrRecover;
  unsigned int m_dwLastObjLoopTime;
};
#pragma pack(pop)

/*  691 */
struct CMapOperationVtbl
{
  void *(__thiscall *__vecDelDtor)(CMapOperation *this, unsigned int);
};

/*  692 */
#pragma pack(push, 4)
struct _region_data
{
  char szRegionData[32];
  CMapData *pMap;
  unsigned __int16 wDummyLineIndex;
};
#pragma pack(pop)

/*  693 */
struct CFrameRate
{
  CFrameRateVtbl *vfptr;
  float m_fSpeedPerFrame;
  unsigned int m_dwFrames;
  unsigned int m_dwFrameTime;
  unsigned int m_dwFrameCount;
  unsigned int m_dwDisplayTick;
};

/*  694 */
struct CFrameRateVtbl
{
  void *(__thiscall *__vecDelDtor)(CFrameRate *this, unsigned int);
};

/*  695 */
struct CNetWorking
{
  CNetWorkingVtbl *vfptr;
  __declspec(align(8)) char m_szSystemName[128];
  unsigned int m_dwUseProcessNum;
  CLogFile m_LogFile;
  CNetProcess m_Process[4];
  CNetProcess *m_pProcess[4];
  char m_szLogPath[128];
};

/*  696 */
struct _MSG_HEADER
{
  unsigned __int16 m_wSize;
  char m_byType[2];
};

/*  697 */
struct CNetWorkingVtbl
{
  void *(__thiscall *__vecDelDtor)(CNetWorking *this, unsigned int);
  void (__thiscall *UserLoop)(CNetWorking *this);
  char (__thiscall *DataAnalysis)(CNetWorking *this, unsigned int, unsigned int, _MSG_HEADER *, char *);
  void (__thiscall *AcceptClientCheck)(CNetWorking *this, unsigned int, unsigned int, unsigned int);
  void (__thiscall *CloseClientCheck)(CNetWorking *this, unsigned int, unsigned int, unsigned int);
  char (__thiscall *ExpulsionSocket)(CNetWorking *this, unsigned int, unsigned int, char, void *);
  void (__thiscall *AnsyncConnectComplete)(CNetWorking *this, unsigned int, unsigned int, int);
};

/*  698 */
struct __declspec(align(8)) CNetProcess
{
  CNetProcessVtbl *vfptr;
  __declspec(align(8)) CNetSocket m_NetSocket;
  _FORCE_CLOSE m_FC;
  _NET_TYPE_PARAM m_Type;
  int m_nIndex;
  int m_nOddMsgNum;
  unsigned int m_nTryConnectCount;
  char m_bPassablePacket[256][256];
  char m_bSetProcess;
  __declspec(align(4)) int m_nEventThreadNum;
  CNetWorking *m_pNetwork;
  CLogFile m_LogFile[3];
  CLogFile m_LogHack;
  CNetCriticalSection *m_csRecv;
  struct _NET_BUFFER *m_pRecvBuffer;
  struct _NET_BUFFER *m_pSendBuffer;
  _thread_parameter m_pmAcceptThread;
  _thread_parameter m_pmEventThread[101];
  _thread_parameter m_pmRecvThread[8];
  _thread_parameter m_pmSendThread;
  _thread_parameter m_pmConnectThread;
  CNetIndexList m_listAcceptEvent;
  CNetIndexList m_listCloseEvent;
  CNetIndexList m_listRecvEvent;
  CNetIndexList m_listAcceptReady;
  _ANSYNC_CONNECT_DATA *m_AnsyncConnectData;
  CNetIndexList m_listAnsyncConnect;
  CNetIndexList m_listAnsyncConnectComplete;
  CNetFrameRate m_fpsSendThread;
  int m_nKeyCheckNodeNum;
  _KEY_CHECK_NODE *m_ndKeyCheck;
  unsigned int *m_dwKeyCheckBufferList;
  CNetIndexList m_listKeyCheck;
  CNetIndexList m_listKeyCheck_Empty;
  CNetTimer m_tmrListCheckerKeyCheck;
  CNetTimer m_tmrCheckResSH;
  CNetTimer m_tmrCheckKeyCT;
  CNetTimer m_tmrCheckRecvBreak;
  char *m_sTempSendBuffer;
  char *m_sTempRecvBuffer;
  unsigned int m_dwCurTime;
};

/*  699 */
struct CNetProcessVtbl
{
  void *(__thiscall *__vecDelDtor)(CNetProcess *this, unsigned int);
};

/*  700 */
struct CNetSocket
{
  CNetSocketVtbl *vfptr;
  __declspec(align(8)) unsigned int m_sAccept;
  void *m_AcceptEvent;
  _socket *m_Socket;
  void **m_Event;
  _SOCK_TYPE_PARAM m_SockType;
  _total_count m_TotalCount;
  char m_bSetSocket;
  __declspec(align(4)) unsigned int m_dwSerialCounter;
  int m_nIPCheckNodeNum;
  _IP_CHECK_NODE *m_ndIPCheck;
  unsigned int *m_dwIPCheckBufferList;
  CNetIndexList m_listIPCheck;
  CNetIndexList m_listIPCheck_Empty;
  CNetTimer m_tmrListCheckerIPCheck;
};

/*  701 */
struct CNetSocketVtbl
{
  void *(__thiscall *__vecDelDtor)(CNetSocket *this, unsigned int);
};

/*  702 */
struct in_addr::__unnamed::__unnamed
{
  char s_b1;
  char s_b2;
  char s_b3;
  char s_b4;
};

/*  703 */
union in_addr::__unnamed
{
  in_addr::__unnamed::__unnamed S_un_b;
  in_addr::__unnamed::__unnamed S_un_w;
  unsigned int S_addr;
};

/*  704 */
struct in_addr
{
  in_addr::__unnamed S_un;
};

/*  705 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/*  706 */
#pragma pack(push, 4)
struct _socket
{
  unsigned int m_Socket;
  int m_nIndex;
  unsigned int m_dwSerial;
  sockaddr_in m_Addr;
  char m_szID[20];
  char m_bAccept;
  char m_bSendable;
  char m_bEnterCheck;
  unsigned int m_dwConnectTime;
  unsigned int m_dwLastCloseTime;
  unsigned int m_dwRealClientKeyValue[4];
  unsigned int m_dwTotalRecvMsg;
  unsigned int m_dwTotalSendMsg;
  unsigned int m_dwTotalRecvBlock;
  unsigned int m_dwBoundResponTerm;
  unsigned int m_dwSendBlockTime;
  unsigned int m_dwRecvPopMissTime;
  unsigned int m_dwSendSpeedHackTime;
  unsigned int m_dwResponSpeedHackTime;
  char m_bySpeedHackContCount;
  char m_bySpeedHackMissCount;
  unsigned int m_dwSpeedHackKey[4];
  unsigned int m_dwPingPongCount;
  unsigned int m_dwSpeedHackCount;
  unsigned int m_dwLastRecvTime;
  unsigned int m_dwLastSendTime;
};
#pragma pack(pop)

/*  707 */
#pragma pack(push, 4)
struct _SOCK_TYPE_PARAM
{
  char m_byProtocolID;
  int m_bServer;
  unsigned __int16 m_wPort;
  unsigned __int16 m_wSocketMaxNum;
  int m_bAcceptIPCheck;
  unsigned int m_dwIPCheckTerm;
  unsigned int m_dwSocketRecycleTerm;
};
#pragma pack(pop)

/*  708 */
struct _total_count
{
  unsigned int m_dwAcceptNum;
  unsigned int m_dwSendAbleNum;
  double m_dTotalRecvBYTESize;
  double m_dTotalSendBYTESize;
  unsigned int m_dwTotalRecvErrNum;
  unsigned int m_dwTotalSendErrNum;
  unsigned int m_dwTotalSendBlockNum;
  unsigned int m_dwTotalRecvBlockNum;
  unsigned int m_dwBufferClean;
  unsigned int m_dwFdWriteCnt;
  unsigned int m_dwNoFindEmptySocket;
  unsigned int m_dwNoEventSelect;
};

/*  709 */
struct _IP_CHECK_NODE
{
  unsigned int dwIP;
  unsigned int dwWaitStartTime;
};

/*  710 */
#pragma pack(push, 4)
struct CNetTimer
{
  int m_nTickTerm;
  unsigned int m_dwTickOld;
  char m_bOper;
};
#pragma pack(pop)

/*  711 */
struct _FORCE_CLOSE::__FD_NODE
{
  unsigned int dwObjIndex;
  unsigned int dwObjSerial;
  unsigned int dwEventCreateTime;
};

/*  712 */
struct _FORCE_CLOSE
{
  unsigned int m_dwNodeNum;
  _FORCE_CLOSE::__FD_NODE *m_pFDData;
  CNetTimer m_tmFD;
  CNetIndexList m_listFD;
  CNetIndexList m_listFDEmpty;
};

/*  713 */
#pragma pack(push, 4)
struct _NET_TYPE_PARAM
{
  _SOCK_TYPE_PARAM baseclass_0;
  char m_byRecvThreadNum;
  unsigned int m_dwSendBufferSize;
  unsigned int m_dwRecvBufferSize;
  char m_bSendSafe;
  unsigned int m_dwSendSafeSize;
  int m_bSpeedHackCheck;
  int m_bRealSockCheck;
  int m_bSystemLogFile;
  int m_bRecvLogFile;
  int m_bSendLogFile;
  int m_bOddMsgWriteLog;
  int m_bOddMsgDisconnect;
  char m_byRecvSleepTime;
  char m_bySendSleepTime;
  int m_bSvrToS;
  int m_bAnSyncConnect;
  int m_bPassSendQueueFull;
  int m_bKeyCheck;
  unsigned int m_dwKeyCheckTerm;
  unsigned int m_dwProcessMsgNumPerLoop;
  char m_szModuleName[128];
};
#pragma pack(pop)

/*  714 */
struct _thread_parameter
{
  int m_bStart;
  void *m_pParam;
  int m_nIndex;
};

/*  715 */
struct _ANSYNC_CONNECT_DATA
{
  sockaddr_in Addr;
  int nResult;
};

/*  716 */
struct CNetFrameRate
{
  unsigned int m_dwFrames;
  unsigned int m_dwFrameTime;
  unsigned int m_dwFrameCount;
};

/*  717 */
struct _KEY_CHECK_NODE
{
  unsigned int dwSerial;
  unsigned int dwKey[4];
  unsigned int dwIP;
  unsigned int dwWaitStartTime;
};

/*  718 */
struct CNetworkEX
{
  CNetWorking baseclass_0;
  unsigned int dwMonsterPosMiss;
  unsigned int dwPlayerPosMiss;
};

/*  719 */
struct CMsgData
{
  CMsgDataVtbl *vfptr;
  int m_nObjNum;
  int m_nMaxBufNum;
  _message m_gmListHead;
  _message m_gmListTail;
  _message *m_gmBuf;
  _message m_gmListEmptyHead;
  _message m_gmListEmptyTail;
  CMyCriticalSection m_csList;
  CMyCriticalSection m_csEmpty;
};

/*  720 */
struct _message
{
  unsigned int dwMessage;
  unsigned int dwKey1;
  unsigned int dwKey2;
  unsigned int dwKey3;
  _message *pNext;
  _message *pPrev;
};

/*  721 */
struct CMsgDataVtbl
{
  void *(__thiscall *__vecDelDtor)(CMsgData *this, unsigned int);
  void (__thiscall *ProcessMessage)(CMsgData *this, _message *);
};

/*  722 */
struct CMyCriticalSection
{
  CMyCriticalSectionVtbl *vfptr;
  _RTL_CRITICAL_SECTION m_cs;
};

/*  723 */
struct CMyCriticalSectionVtbl
{
  void *(__thiscall *__vecDelDtor)(CMyCriticalSection *this, unsigned int);
};

/*  724 */
struct CMsgProcess
{
  CMsgData baseclass_0;
};

/*  725 */
struct CConnNumPHMgr::__cnt_per_h
{
  int nUserCumPerMin;
  unsigned int dwCounting;
  int nMaxUserNum;
};

/*  726 */
struct _USER_NUM_SHEET
{
  int nAveragePerHour;
  int nMaxPerHour;
  int nCount;
};

/*  727 */
struct CConnNumPHMgr
{
  CConnNumPHMgr::__cnt_per_h m_cph;
  _USER_NUM_SHEET m_LastResult;
  int m_nLastHour;
  unsigned int m_dwCheckLastTime;
};

/*  728 */
struct CCheckSum
{
  CCheckSumVtbl *vfptr;
};

/*  729 */
struct CCheckSumVtbl
{
  void *(__thiscall *__vecDelDtor)(CCheckSum *this, unsigned int);
};

/*  730 */
struct CMapDataTable
{
  CMapDataTableVtbl *vfptr;
  _map_fld *m_pRecord;
  unsigned int m_dwRecordNum;
};

/*  731 */
struct CMapDataTableVtbl
{
  void *(__thiscall *__vecDelDtor)(CMapDataTable *this, unsigned int);
};

/*  732 */
struct CWeaponBulletLinkTable
{
  CWeaponBulletLinkTableVtbl *vfptr;
  CRecordData m_tblBullet;
  int **m_ppnWeaponIndex;
  int m_nBulletNum;
};

/*  733 */
struct CWeaponBulletLinkTableVtbl
{
  void *(__thiscall *__vecDelDtor)(CWeaponBulletLinkTable *this, unsigned int);
};

/*  734 */
struct CItemLootTable
{
  CItemLootTableVtbl *vfptr;
  CRecordData m_tblLoot;
  CItemLootTable::_linker_code **m_ppLinkCode;
  int m_nLootNum;
};

/*  735 */
struct CItemLootTableVtbl
{
  void *(__thiscall *__vecDelDtor)(CItemLootTable *this, unsigned int);
};

/*  736 */
#pragma pack(push, 2)
struct CItemLootTable::_linker_code
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  int bExist;
};
#pragma pack(pop)

/*  737 */
struct COreCuttingTable
{
  COreCuttingTableVtbl *vfptr;
  CRecordData m_tblOreCutting;
  int m_nOreNum;
  COreCuttingTable::_ore_cut_list *pOreList;
};

/*  738 */
struct COreCuttingTableVtbl
{
  void *(__thiscall *__vecDelDtor)(COreCuttingTable *this, unsigned int);
};

/*  739 */
#pragma pack(push, 4)
struct COreCuttingTable::_ore_cut_list::_res_list
{
  unsigned __int16 wResIndex;
  unsigned int dwRate;
  unsigned int dwCumRate;
};
#pragma pack(pop)

/*  740 */
struct COreCuttingTable::_ore_cut_list
{
  int nResNum;
  unsigned int dwTotalRate;
  COreCuttingTable::_ore_cut_list::_res_list ResList[100];
};

/*  741 */
struct CItemUpgradeTable
{
  CItemUpgradeTableVtbl *vfptr;
  CRecordData m_tblItemUpgrade;
  int m_nResNum;
  unsigned __int16 *m_pwResIndex;
};

/*  742 */
struct CItemUpgradeTableVtbl
{
  void *(__thiscall *__vecDelDtor)(CItemUpgradeTable *this, unsigned int);
};

/*  743 */
struct _PVP_RANK_PACKED_DATA
{
  unsigned __int16 wDataLen;
  char szPackedData[380];
};

/*  744 */
struct _PVP_RANK_REFRESH_USER
{
  unsigned int dwSerial;
  char byLv;
  char byRace;
  unsigned __int16 wPvpRate;
  unsigned int dwPvpRank;
};

/*  745 */
#pragma pack(push, 4)
struct _guild_member_refresh_data::__refresh_data
{
  unsigned int dwSerial;
  char byGrade;
  char byLv;
  unsigned int dwPvpPoint;
};
#pragma pack(pop)

/*  746 */
#pragma pack(push, 4)
struct _guild_member_refresh_data
{
  unsigned int dwGuildSerial;
  unsigned __int16 wMemberCount;
  _guild_member_refresh_data::__refresh_data rMemberData[150];
};
#pragma pack(pop)

/*  747 */
struct __declspec(align(4)) CMainThread
{
  CMainThreadVtbl *vfptr;
  __declspec(align(8)) _SRAND m_Rand;
  __declspec(align(4)) _WAIT_ENTER_ACCOUNT m_WaitEnterAccount[4032];
  CRFWorldDatabase *m_pWorldDB;
  CRFBillingdatabase *m_pBillingDB;
  CMapDisplay m_MapDisplay;
  CMapOperation m_MapOper;
  CFrameRate m_MainFrameRate;
  CFrameRate m_DBFrameRate;
  CNetworkEX m_Network;
  CMsgProcess m_GameMsg;
  CConnNumPHMgr m_MgrConnNum;
  CConnNumPHMgr m_HisMainFPS;
  CConnNumPHMgr m_HisSendFPS;
  CConnNumPHMgr m_HisDataFPS;
  CMyTimer m_tmServerState;
  char m_bVerCheck;
  __declspec(align(4)) CMyTimer m_tmEconomyState;
  _DB_QRY_SYN_DATA m_DBQrySynData[8064];
  CNetIndexList m_listDQSData;
  CNetIndexList m_listDQSDataComplete;
  CNetIndexList m_listDQSDataEmpty;
  CCheckSum m_CheckSum;
  int m_nLimUserNum;
  char m_szWorldName[33];
  char m_byWorldCode;
  char m_bWorldOpen;
  char m_bWorldService;
  char m_szWorldDBName[64];
  unsigned int m_dwMessengerIP;
  unsigned int m_dwAccountIP;
  unsigned int m_dwCheckAccountOldTick;
  CMyTimer m_tmrCheckAvator;
  CMyTimer m_tmrCheckLoop;
  CMyTimer m_tmrAccountPing;
  CMyTimer m_tmrStateMsgGotoWeb;
  int m_bBillingOper;
  int m_bFreeServer;
  CMapDataTable m_tblMapData;
  CRecordData m_tblPlayer;
  CRecordData m_tblMonster;
  CRecordData m_tblNPC;
  CRecordData m_tblAnimus;
  CRecordData m_tblClass;
  CRecordData m_tblExp;
  CRecordData m_tblGrade;
  CWeaponBulletLinkTable m_tblWeaponBulletLink;
  CItemLootTable m_tblItemLoot;
  COreCuttingTable m_tblOreCutting;
  CRecordData m_tblItemMakeData;
  CRecordData m_tblItemCombineData;
  CRecordData m_tblItemExchangeData;
  CItemUpgradeTable m_tblItemUpgrade;
  CRecordData m_tblItemData[31];
  CRecordData m_tblEffectData[4];
  CRecordData m_tblUnitPart[6];
  CRecordData m_tblUnitBullet;
  CRecordData m_tblUnitFrame;
  CRecordData m_tblEditData;
  char m_bRuleThread;
  char m_bDQSThread;
  __declspec(align(4)) CLogFile m_logSystemError;
  CLogFile m_logLoadingError;
  CLogFile m_logDungeon;
  CLogFile m_logKillMon;
  CLogFile m_logCheat;
  CLogFile m_logRankJob;
  CLogFile m_logServerState;
  CLogFile m_logDTrade;
  CLogFile m_logGuild;
  CLogFile m_logDQS;
  CLogFile m_logRename;
  CLogFile m_logAutoTrade;
  CLogFile m_logEvent;
  CLogFile m_logMove;
  CLogFile m_logSave;
  CLogFile m_logReturnGate;
  CLogFile m_logHack;
  CMyTimer m_tmForceUserExit;
  int m_nForceExitSocketIndexOffset;
  char m_bServerClosing;
  char m_bCheckOverTickCount;
  __declspec(align(4)) int m_nSleepTerm;
  int m_nSleepValue;
  int m_nSleepIgnore;
  int m_nPvpSaveJobIndexOffset;
  char m_byPvpRankJobStep;
  __declspec(align(2)) unsigned __int16 m_wPvpRankJobHour;
  unsigned __int16 m_wPvpRankJobMin;
  unsigned __int16 m_wPvpRankJobStartDay;
  char m_szPvpRankDate[32];
  char m_byPvpRankDataVersion;
  __declspec(align(2)) unsigned __int16 m_wPvpRankDataSaveUserCount;
  _PVP_RANK_DATA m_PvpRankData[3][100];
  _PVP_RANK_DATA m_PvpRankDataTomorrow[3][100];
  _PVP_RANK_PACKED_DATA m_PackedRankData[3][10];
  char m_PackedPvpRankData[3][2048];
  unsigned __int16 m_wPackedPvpRankDataLen[3];
  __declspec(align(4)) _PVP_RANK_REFRESH_USER m_PvpRankRefreshUser[4032];
  int m_nPvpRankDataVersionUpSendOffset;
  unsigned int m_dwPvpRankTopSerial[3][5];
  unsigned int m_dwPvpRankTopSerial_Old[3][5];
  _guild_member_refresh_data m_GuildMemberRefresh[300];
  int m_nRankInGuildJobOffset;
  char m_bCheckSumActive;
  char m_byWebAgentServerNetInx;
  char m_bConnectedWebAgentServer;
  char m_byControllServerNetInx;
  char m_bConnectedControllServer;
};

/*  748 */
struct CMainThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(CMainThread *this, unsigned int);
};

/*  749 */
#pragma pack(push, 4)
struct _economy_history_data
{
  double dTradeGold[3];
  double dTradeDalant[3];
  unsigned __int16 wEconomyGuide[3];
  double dOreMineCount[3][3];
  double dOreCutCount[3][3];
};
#pragma pack(pop)

/*  750 */
struct CFGChecker
{
  CFGCheckerVtbl *vfptr;
};

/*  751 */
struct CFGCheckerVtbl
{
  void *(__thiscall *__vecDelDtor)(CFGChecker *this, unsigned int);
};

/*  752 */
struct FireGuard
{
  char dummy[1];
};

/*  753 */
struct _pt_result_verify_key_zocl
{
  unsigned int nSize;
  char key[128];
};

/*  754 */
struct _pt_requst_verify_clzo
{
  unsigned int nSize;
  char key[128];
};

/*  755 */
struct _pt_result_verify_zocl
{
  char bSuccess;
};

/*  756 */
#pragma pack(push, 4)
struct _QUEST_CASH
{
  unsigned int dwAvatorSerial;
  char byQuestType;
  int nPvpPoint;
  unsigned __int16 wKillPoint;
};
#pragma pack(pop)

/*  757 */
struct CHolyStoneSystem::__holy_keeper_data
{
  CMapData *pCreateMap;
  _dummy_position CreateDummy;
  _dummy_position ActiveDummy;
  _dummy_position CenterDummy;
  _monster_fld *pRec;
};

/*  758 */
struct CHolyStoneSystem::__holy_stone_data
{
  CMapData *pCreateMap;
  _dummy_position CreateDummy;
  _monster_fld *pRec;
  int nRace;
};

/*  759 */
#pragma pack(push, 4)
struct CHolyStoneSystem
{
  CHolyStoneSystemVtbl *vfptr;
  unsigned __int16 m_wStartYear;
  char m_byStartMonth;
  char m_byStartDay;
  char m_byStartHour;
  char m_byStartMin;
  unsigned int m_dwNextStartTime;
  int m_nHolyMasterRace;
  char m_byNumOfTime;
  char m_bChaos;
  unsigned int m_dwControlTerm;
  unsigned int m_dwCumPlayerNum;
  unsigned int m_dwCumCount;
  CMyTimer m_tmrCumPlayer;
  int m_nStartStoneHP;
  unsigned int m_dwPassTimeInScene;
  unsigned int m_dwKeeperPlusTime;
  char m_bExitHoly;
  char m_byUserHolyState;
  int m_nStoneHP_Buffer[3];
  int m_nSceneCode;
  unsigned int m_nStoneStartTime;
  unsigned int m_nStoneEndTime;
  unsigned int m_nKeeperStartTime;
  unsigned int m_nKeeperChaosTime;
  unsigned int m_nKeeperEndTime;
  CMyTimer m_tmrHSKSystem;
  _QUEST_CASH m_cashQuest[8064];
  CRecordData m_tblQuest;
  CLogFile m_logQuest;
  CLogFile m_logQuestDestroy;
  int m_nHolyStoneNum;
  CHolyStoneSystem::__holy_keeper_data m_HolyKeeperData;
  CHolyStoneSystem::__holy_stone_data m_HolyStoneData[3];
  CMyTimer m_tmrLogPer10Min;
  CLogFile m_logPer10Min;
  unsigned int m_dwMinePointPerRace[3];
  CPlayer *m_pkDestroyer;
  unsigned int m_dwDestroyerSerial;
  CHolyStoneSystem::DESTROYER_STATE m_eDestroyerState;
};
#pragma pack(pop)

/*  760 */
struct CHolyStoneSystemVtbl
{
  void *(__thiscall *__vecDelDtor)(CHolyStoneSystem *this, unsigned int);
};

/*  761 */
struct _OreItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nOre_List;
  int m_nOre_Level;
  int m_nKindClt;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_nmin_C_random;
  int m_nmax_C_random;
  int m_nProcessPrice;
  char m_strTooltipIndex[64];
};

/*  762 */
struct CTransportShip::__mgr_member
{
  CPlayer *pPtr;
  unsigned int dwSerial;
};

/*  763 */
struct _TicketItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nLevelLim;
  char m_strMapCode[64];
  char m_strDummyName[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  764 */
struct CTransportShip::__mgr_ticket
{
  int nCurTicketNum;
  int nReserTicketNum;
  unsigned int dwNextUpdateTime;
  _TicketItem_fld *pLinkTicketItem;
};

/*  765 */
#pragma pack(push, 4)
struct CTransportShip
{
  char m_bAnchor;
  char m_byDirect;
  char m_bHurry;
  unsigned int m_dwNextHurryTime;
  unsigned int m_dwEventCreateTime;
  char m_byRaceCode_Layer;
  CMapData *m_pLinkShipMap;
  CMapData *m_pLinkPortMap[2];
  CMyTimer m_tmrCheckState;
  CTransportShip::__mgr_member m_NewMember[4032];
  CTransportShip::__mgr_member m_OldMember[4032];
  CNetIndexList m_listLogoffMember;
  CTransportShip::__mgr_ticket m_MgrTicket[2];
};
#pragma pack(pop)

/*  766 */
#pragma pack(push, 4)
struct CWorldSchedule
{
  char m_bOper;
  CRecordData m_tblSch;
  int m_nMaxSchNum;
  int m_nSchCursor;
  int m_nCurHour;
  int m_nCurMin;
  int m_nCurMilSec;
  unsigned int m_dwLastCheckTime;
  CMyTimer m_tmrCheck;
};
#pragma pack(pop)

/*  767 */
struct _WorldSchedule_fld
{
  _base_fld baseclass_0;
  int m_nHour;
  int m_nMin;
  int m_nEventCode;
  int m_nEventInfo1;
  int m_nEventInfo2;
  int m_nEventInfo3;
};

/*  768 */
struct _started_vote_inform_zocl
{
  int nVoteSerial;
  char byLimGrade;
  unsigned __int16 wLeftSec;
  char bActed;
  unsigned __int16 wPoint[3];
  char bHurry;
  unsigned __int16 wContentSize;
  unsigned __int16 wszContent[1280];
};

/*  769 */
#pragma pack(push, 4)
struct CVoteSystem
{
  char m_bActive;
  char m_byRaceCode;
  int m_nSerial;
  char m_bHurry;
  unsigned int m_dwPoint[3];
  CNetIndexList m_listVote;
  unsigned int m_dwStartVoteTime;
  unsigned int m_dwLastBroadcastTime;
  char m_byLimGrade;
  _started_vote_inform_zocl m_SendStarted;
};
#pragma pack(pop)

/*  770 */
struct _starting_vote_inform_zocl
{
  int nVoteSerial;
  char byLimGrade;
  unsigned __int16 wLeftSec;
  unsigned __int16 wContentSize;
  unsigned __int16 wszContent[1280];
};

/*  771 */
struct _complete_vote_inform_zocl
{
  int nVoteSerial;
  unsigned __int16 wPoint[3];
};

/*  772 */
struct _progress_vote_inform_zocl
{
  int nVoteSerial;
  unsigned __int16 wPoint[3];
  char bHurry;
};

/*  773 */
struct _WeaponItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nItemGrade;
  int m_nFixPart;
  int m_nType;
  int m_nSubType;
  char m_strCivil[64];
  char m_strClassLim[64];
  int m_nLevelLim;
  int m_nExpertID1;
  int m_nExpertLim1;
  int m_nExpertID2;
  int m_nExpertLim2;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nDurUnit;
  float m_fEquipSpeed;
  int m_bRepair;
  int m_nRepPrice;
  int m_nEffState;
  int m_nProperty;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  float m_fAttGap;
  int m_nAttack_DP;
  float m_fGADst;
  int m_nGASpd;
  int m_nGAMinSelProb;
  float m_fGAMinAF;
  int m_nGAMaxSelProb;
  float m_fGAMaxAF;
  int m_nMADst;
  int m_nMASpd;
  int m_nMAMinSelProb;
  float m_fMAMinAF;
  int m_nMAMaxSelProb;
  float m_fMAMaxAF;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_nDuration;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_nUpgrade;
  char m_strTooltipIndex[64];
  int m_nAttEffType;
};

/*  774 */
struct _DfnEquipItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nItemGrade;
  int m_nFixPart;
  int m_nHelmetClass;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nExpertID1;
  int m_nExpertLim1;
  int m_nExpertID2;
  int m_nExpertLim2;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nDurUnit;
  float m_fEquipSpeed;
  int m_bRepair;
  int m_nRepPrice;
  int m_nEffState;
  int m_nGASpd;
  int m_nProperty;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  float m_fDefFc;
  int m_nDefence_DP;
  int m_nMaxDP;
  float m_fDefGap;
  float m_fDefFacing;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_nDuration;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_nUpgrade;
  char m_strTooltipIndex[64];
  int m_nDefEffType;
};

/*  775 */
struct _RingItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nEffState;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  776 */
struct _AmuletItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nEffState;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  777 */
struct _cont_param_list
{
  int m_nContParamCode;
  int m_nContParamIndex;
  float m_fContValue[7];
};

/*  778 */
struct _force_fld
{
  _base_fld baseclass_0;
  int m_nClass;
  int m_nIconIDX;
  int m_nMastIndex;
  char m_strMastKorName[64];
  char m_strMastEngName[64];
  char m_strKorName[64];
  char m_strEngName[64];
  int m_nLv;
  int m_bActivate;
  char m_strUsableRace[64];
  char m_strActableDst[64];
  int m_nNeedMastIndex;
  char m_strFixWeapon[64];
  int m_bFixshield;
  int m_nSpecialType;
  int m_nNeedSpecialType;
  int m_nNeedHP;
  int m_nNeedFP;
  int m_nNeedSP;
  float m_fActDelay;
  int m_bAttackable;
  int m_nProperty;
  int m_nEffectGroup;
  float m_fAttFormulaConstant;
  int m_nActDistance;
  int m_nTempEffectType;
  int m_nTempParamCode;
  float m_fTempValue[7];
  int m_nContEffectType;
  int m_nContAreaType;
  _cont_param_list m_ContParamList[5];
  int m_nContEffectSec[7];
  int m_nEffectClass;
};

/*  779 */
struct _ForceItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  char m_strForce_Codekey[64];
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  780 */
struct _BulletItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_nDurUnit;
  float m_fEquipSpeed;
  int m_nEffectGroup;
  int m_nProperty;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  float m_fGAAF;
  char m_strEffectIndex[64];
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_bUpgrade;
  char m_strTooltipIndex[64];
};

/*  781 */
struct _ResourceItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nAncStdPrice;
  int m_nExStdPrice;
  int m_nMecaStdPrice;
  int m_nStoragePrice;
  int m_nEffCode;
  float m_fEffUnit;
  float m_fEffUnitMax;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  782 */
struct _BootyItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/*  783 */
struct _PotionItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  float m_fActDelay;
  int m_nLevelLim;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  float m_fEquipSpeed;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_nDuration;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_bUpgrade;
  char m_strTooltipIndex[64];
};

/*  784 */
struct _uta_regist_info
{
  _uta_list *pList;
  _uta_node *pNode;
};

/*  785 */
struct CReturnGate
{
  CGameObject baseclass_0;
  CReturnGate::STATE m_eState;
  CPlayer *m_pkOwner;
  unsigned int m_dwOwnerSerial;
  CMapData *m_pDestMap;
  float m_fBindPos[3];
  unsigned int m_dwCloseTime;
};

/*  786 */
struct CReturnGateController
{
  CMyTimer *m_pkTimer;
  CNetIndexList *m_pkEmptyInxList;
  CNetIndexList *m_pkUseInxList;
  unsigned int m_uiGateTotCnt;
  CReturnGate **m_ppkGatePool;
};

/*  787 */
struct _object_create_setdata
{
  _base_fld *m_pRecordSet;
  CMapData *m_pMap;
  int m_nLayerIndex;
  float m_fStartPos[3];
};

/*  788 */
struct CReturnGateCreateParam
{
  _object_create_setdata baseclass_0;
  CPlayer *m_pkOwner;
};

/*  789 */
struct _open_return_gate_inform_zocl
{
  unsigned __int16 wGateInx;
  unsigned int dwObjSerial;
  unsigned int dwOpenerSerial;
  unsigned __int16 wszOpenerName[17];
  __int16 zPos[3];
};

/*  790 */
struct _close_return_gate_inform_zocl
{
  unsigned int dwObjSerial;
};

/*  791 */
struct _enter_return_gate_result_zocl
{
  char byResult;
};

/*  792 */
#pragma pack(push, 4)
struct CRecallRequest
{
  unsigned __int16 m_usID;
  CRecallRequest::STATE m_eState;
  CPlayer *m_pkOwner;
  unsigned int m_dwOwnerSerial;
  CPlayer *m_pkDest;
  unsigned int m_dwDestSerial;
  unsigned int m_dwCloseTime;
};
#pragma pack(pop)

/*  793 */
struct CRecallEffectController
{
  unsigned int m_uiInfoTotCnt;
  CRecallRequest **m_ppkReqeust;
  CMyTimer *m_pkTimer;
  CNetIndexList *m_pkEmptyInxList;
  CNetIndexList *m_pkUseInxList;
};

/*  794 */
struct _recall_request_result_zocl
{
  char byRet;
  unsigned __int16 wszDestName[17];
};

/*  795 */
struct _notify_recall_request_zocl
{
  unsigned __int16 wRequestID;
  unsigned __int16 wszPerformerName[17];
};

/*  796 */
struct _decide_recall_error_result_zocl
{
  char byErr;
};

/*  797 */
#pragma pack(push, 4)
struct CHolyStone
{
  CCharacter baseclass_0;
  char m_bOper;
  int m_nHP;
  int m_nMaxHP;
  unsigned int m_dwLastDestroyTime;
  _monster_fld *m_pRec;
  _dummy_position *m_pDum;
  char m_byMasterRaceCode;
  int m_nDefPart[5];
  int m_nOldRate;
  unsigned int m_dwLastRecoverTime;
};
#pragma pack(pop)

/*  798 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/*  799 */
struct RACE_WAR_REWARD_ITEM::CItemList
{
  RACE_WAR_REWARD_ITEM::CItemListVtbl *vfptr;
  unsigned int m_uiCnt;
  unsigned int m_CurDropCnt[3][1000];
  unsigned int m_TotDropCnt[3][1000];
  unsigned int m_uiCurItemInx[3];
};

/*  800 */
struct RACE_WAR_REWARD_ITEM::CItemListVtbl
{
  void (__thiscall *DropItem)(RACE_WAR_REWARD_ITEM::CItemList *this, char);
  unsigned int (__thiscall *GetDropCnt)(RACE_WAR_REWARD_ITEM::CItemList *this, unsigned int, unsigned int);
};

/*  801 */
#pragma pack(push, 4)
struct RACE_WAR_REWARD_ITEM::CDropItem
{
  RACE_WAR_REWARD_ITEM::CDropItemVtbl *vfptr;
  char m_ucD;
  char m_ucTableCode;
  _base_fld *m_pFld;
};
#pragma pack(pop)

/*  802 */
struct RACE_WAR_REWARD_ITEM::CDropItemVtbl
{
  unsigned int (__thiscall *GetDropCnt)(RACE_WAR_REWARD_ITEM::CDropItem *this, unsigned int);
};

/*  803 */
#pragma pack(push, 4)
struct RACE_WAR_REWARD_ITEM::CFixDropItem
{
  RACE_WAR_REWARD_ITEM::CDropItem baseclass_0;
  char m_ucCount;
};
#pragma pack(pop)

/*  804 */
struct RACE_WAR_REWARD_ITEM::CFixItemList
{
  RACE_WAR_REWARD_ITEM::CItemList baseclass_0;
  RACE_WAR_REWARD_ITEM::CFixDropItem m_kDropItem[1000];
};

/*  805 */
#pragma pack(push, 4)
struct RACE_WAR_REWARD_ITEM::CRateDropItem
{
  RACE_WAR_REWARD_ITEM::CDropItem baseclass_0;
  unsigned __int16 m_usRate;
};
#pragma pack(pop)

/*  806 */
struct RACE_WAR_REWARD_ITEM::CRateItemList
{
  RACE_WAR_REWARD_ITEM::CItemList baseclass_0;
  RACE_WAR_REWARD_ITEM::CRateDropItem m_kDropItem[1000];
};

/*  807 */
struct CRaceWarRewardItemDropManager
{
  _FILETIME m_ftWrite;
  CMyTimer *m_pkTimer;
  unsigned int m_uiDropCntOnce;
  unsigned int m_dwDelay;
  CRaceWarRewardItemDropManager::STATE m_eState;
  char m_ucDestroyedRace;
  __declspec(align(4)) RACE_WAR_REWARD_ITEM::CFixItemList m_kFixList;
  RACE_WAR_REWARD_ITEM::CRateItemList m_kRateList;
};

/*  808 */
#pragma pack(push, 4)
struct _event_respawn::_mon
{
  _base_fld *pMonsterFld;
  unsigned __int16 wNum;
};
#pragma pack(pop)

/*  809 */
struct _event_respawn::_option
{
  char bKillAfterStop;
  char bExpPenalty;
};

/*  810 */
#pragma pack(push, 2)
struct _event_loot_item
{
  char byItemTable;
  unsigned __int16 wItemIndex;
};
#pragma pack(pop)

/*  811 */
#pragma pack(push, 4)
struct CMonster
{
  CCharacter baseclass_0;
  _monster_fld *m_pMonRec;
  _mon_active *m_pActiveRec;
  _dummy_position *m_pDumPosition;
  char m_bDungeon;
  char m_bRobExp;
  int m_nHP;
  unsigned int m_dwLastDestroyTime;
  char m_bOper;
  float m_fCreatePos[3];
  unsigned int m_dwBossTime;
  unsigned int m_dwDestTime;
  unsigned int m_dwDestTime2;
  unsigned int m_dwLastAssistReqTime;
  int m_nEventItemNum;
  _event_loot_item m_eventItem[16];
  char m_byChildMonSetNum;
  CMonster **m_ppChildMon[3];
  CMonster *m_pParentMon;
  unsigned int m_dwParentSerial;
  unsigned int m_dwDestroyNextTime;
  unsigned int m_dwChildRecallTime;
  float m_AroundX;
  float m_AroundY;
  MONSTERAI m_MonAI;
  CCharacter *m_pPlayerTarget;
  CMonster *m_pMonTarget;
  CCharacter *m_pSearchPlayer;
  CCharacter *m_pAssistPlayer;
  CMonster *m_pSearchMon;
  CMonster *m_pHelpMonster;
  float m_MoveTarget[3];
  float m_MoveOldTarget[3];
  float m_MoveOld[3];
  float m_PlayerPos[16][3];
  unsigned int m_CurNode;
  unsigned int m_EndNode;
  char m_byAIStateBuffer[4];
  int m_bNode;
  unsigned int m_CurrentSkill;
  unsigned int m_SearchSkill;
  int m_RunAway;
  unsigned int m_ReAttackDelay;
  unsigned int m_dwLastRecoverTime;
  unsigned int m_dwChildHelpTime;
  unsigned int m_LifeMax;
  unsigned int m_LifeCicle;
  float m_Scale;
  unsigned int m_ChaseDist;
  unsigned int m_MaxSkill;
  SKILL m_Skill[3];
  int m_DefPart[5];
  char m_byCreateDate[4];
  CCharacter *m_AttackedPlayer[3];
  CLootingMgr m_LootMgr;
};
#pragma pack(pop)

/*  812 */
struct FSM
{
  void *m_pObject;
  FSM *m_hParentList;
  char *m_Func;
  unsigned int m_State;
  unsigned int m_Time;
  unsigned int m_ElapseTime;
  void (__cdecl *m_MsgFunc)(void *, unsigned int);
  FSMStateNInput sni;
};

/*  813 */
struct FSMStateNInput
{
  unsigned int m_State;
  unsigned int m_Input;
};

/*  814 */
struct MONSTERAI
{
  FSM Prime_State;
  FSM Move_Target_State;
  FSM Attack_State;
  FSM Player_State;
  FSM Mon_State;
  FSM Act_State;
  FSM Con_State;
  FSM Emotion_State;
  FSM Personal_State;
  FSM Help_State;
  FSM Assist_State;
};

/*  815 */
struct CLootingMgr::_list
{
  CPlayer *pAtter;
  unsigned int dwAtterSerial;
  unsigned int dwAttCount;
  unsigned int dwDamage;
  unsigned int dwLastAttTime;
};

/*  816 */
struct CLootingMgr
{
  char m_bFirst;
  char m_byUserNode;
  __declspec(align(4)) CLootingMgr::_list m_AtterList[64];
};

/*  817 */
struct _event_respawn::_state::_mon
{
  CMonster *pMon;
  unsigned int dwSerial;
  _base_fld *pMonFld;
};

/*  818 */
struct _event_respawn::_state
{
  unsigned int dwLastUpdateTime;
  int nRespawnNum;
  _event_respawn::_state::_mon MonInfo[640];
};

/*  819 */
struct _event_respawn
{
  char bLoad;
  __declspec(align(2)) unsigned __int16 wMonSetNum;
  _event_respawn::_mon MonSet[16];
  CMapData *pMap;
  float fPos[3];
  unsigned int dwTermMSec;
  _event_respawn::_option Option;
  char szScriptName[64];
  char bActive;
  __declspec(align(2)) _event_respawn::_state State;
};

/*  820 */
struct CMonsterEventRespawn
{
  CMonsterEventRespawnVtbl *vfptr;
  int m_nLoadEventRespawn;
  _event_respawn m_EventRespawn[32];
};

/*  821 */
struct CMonsterEventRespawnVtbl
{
  void *(__thiscall *__vecDelDtor)(CMonsterEventRespawn *this, unsigned int);
};

/*  822 */
#pragma pack(push, 4)
struct _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};
#pragma pack(pop)

/*  823 */
#pragma pack(push, 4)
struct _ECONOMY_SYSTEM::_CUR_RATE
{
  float fPayExgRate;
  float fTexRate;
  float fOreRate;
  unsigned __int16 wEconomyGuide;
  double dOldTradeGold;
  double dOldTradeDalant;
  double dOldOreMineCount[3];
  double dOldOreCutCount[3];
};
#pragma pack(pop)

/*  824 */
#pragma pack(push, 8)
struct _ECONOMY_SYSTEM
{
  char m_bLoad;
  double m_dCurTradeGold[3];
  double m_dCurTradeDalant[3];
  double m_dBufTradeGold[3];
  double m_dBufTradeDalant[3];
  double m_dCurOreMineCount[3][3];
  double m_dCurOreCutCount[3][3];
  double m_dBufOreMineCount[3][3];
  double m_dBufOreCutCount[3][3];
  _ECONOMY_SYSTEM::_CUR_RATE m_CurRate[3];
  char m_byCurHour;
  unsigned int m_dwLastUpdateTime;
  unsigned int m_dwSystemOperStartTime;
  unsigned int m_dwLastDate;
};
#pragma pack(pop)

/*  825 */
#pragma pack(push, 8)
struct _economy_calc_data
{
  double dTradeGold[3];
  double dTradeDalant[3];
  double dOreMineCount[3][3];
  double dOreCutCount[3][3];
  float out_fPayExgRate[3];
  float out_fTexRate[3];
  float out_fOreRate[3];
  unsigned __int16 out_wEconomyGuide[3];
};
#pragma pack(pop)

/*  826 */
#pragma pack(push, 8)
struct _log_sheet_economy
{
  unsigned int dwDate;
  double dTradeGold[3];
  double dTradeDalant[3];
  int nMgrValue;
  double dMineOre[3][3];
  double dCutOre[3][3];
};
#pragma pack(pop)

/*  827 */
struct _economy_data_inform_zowb
{
  float fPayExgRate[3];
  float fTexRate[3];
  unsigned __int16 wEconomyGuide[3];
  unsigned __int16 wYear;
  char byMonth;
  char byDay;
};

/*  828 */
struct CBilling
{
  CBillingVtbl *vfptr;
  int m_bOper;
};

/*  829 */
struct CBillingVtbl
{
  void *(__thiscall *__vecDelDtor)(CBilling *this, unsigned int);
};

/*  830 */
struct _billing_start_request_zobi
{
  char szWorldName[33];
};

/*  831 */
struct _billing_login_request_zobi
{
  char szID[13];
  char szIP[16];
  char szCMS[7];
  __int16 iType;
  int lRemainTime;
  _SYSTEMTIME stEndDate;
};

/*  832 */
struct _billing_alive_request_zobi
{
  char szID[13];
  char szIP[16];
  char szCMS[7];
  __int16 iType;
};

/*  833 */
struct _billing_logout_request_zobi
{
  char szID[13];
  char szIP[16];
  char szCMS[7];
  __int16 iType;
};

/*  834 */
#pragma pack(push, 2)
struct _quest_check_result::_node
{
  char byQuestDBSlot;
  char byActIndex;
  unsigned __int16 wCount;
  char bORComplete;
};
#pragma pack(pop)

/*  835 */
#pragma pack(push, 2)
struct _quest_check_result
{
  char m_byCheckNum;
  _quest_check_result::_node m_List[15];
};
#pragma pack(pop)

/*  836 */
struct _quest_fail_result::_node
{
  char byQuestDBSlot;
};

/*  837 */
struct _quest_fail_result
{
  char m_byCheckNum;
  _quest_fail_result::_node m_List[15];
};

/*  838 */
struct _QuestEvent_fld
{
  _base_fld baseclass_0;
  _event_node m_Node[3];
};

/*  839 */
struct _action_node
{
  int m_nActType;
  char m_strActSub[64];
  char m_strActArea[64];
  int m_nReqAct;
  int m_nSetCntPro_100;
  char m_strLinkQuestItem[64];
  int m_nOrder;
};

/*  840 */
struct _quest_reward_item
{
  char m_strConsITCode[64];
  int m_nConsITCnt;
  int m_nLinkQuestIdx;
};

/*  841 */
struct _quest_reward_mastery
{
  int m_nConsMasteryID;
  int m_nConsMasterySubID;
  int m_nConsMasteryCnt;
};

/*  842 */
struct _Quest_fld
{
  _base_fld baseclass_0;
  int m_nLimLv;
  int m_nLimMin;
  int m_nQuestType;
  int m_n1;
  int m_n2;
  int m_bSelectQuestMenual;
  int m_bCompQuestType;
  _action_node m_ActionNode[3];
  double m_dConsExp;
  int m_nConsContribution;
  int m_nConsDalant;
  int m_nConsGold;
  int m_bSelectConsITMenual;
  _quest_reward_item m_RewardItem[6];
  _quest_reward_mastery m_RewardMastery[2];
  char m_strConsSkillCode[64];
  int m_nConsSkillCnt;
  char m_strConsForceCode[64];
  int m_nConsForceCnt;
  char m_strLinkQuest[5][64];
  int m_nViewportType;
  char m_strViewportCode[64];
  char m_txtQTExp[64];
  int m_nStore_trade;
};

/*  843 */
struct _be_damaged_char
{
  CCharacter *m_pChar;
  int m_nDamage;
};

/*  844 */
#pragma pack(push, 4)
struct CAttack
{
  _attack_param *m_pp;
  CCharacter *m_pAttChar;
  char m_bIsCrtAtt;
  int m_nDamagedObjNum;
  _be_damaged_char m_DamList[30];
  char m_bFailure;
};
#pragma pack(pop)

/*  845 */
#pragma pack(push, 4)
struct CHolyKeeper
{
  CCharacter baseclass_0;
  int m_nHP;
  unsigned int m_dwLastDestroyTime;
  _monster_fld *m_pRec;
  _dummy_position *m_pPosCreate;
  _dummy_position *m_pPosActive;
  _dummy_position *m_pPosCenter;
  int m_nMasterRace;
  char m_bExit;
  char m_bChaos;
  unsigned int m_dwLastStopTime;
  float m_fMightiness;
  int m_nDefPart[5];
  CPlayer *m_pLastMoveTarget;
  CAttack *m_at;
  _attack_param m_ap;
};
#pragma pack(pop)

/*  846 */
struct _character_create_setdata
{
  _object_create_setdata baseclass_0;
};

/*  847 */
#pragma pack(push, 4)
struct _stone_create_setdata
{
  _character_create_setdata baseclass_0;
  _dummy_position *pDumPosition;
  char byMasterRace;
};
#pragma pack(pop)

/*  848 */
struct _keeper_create_setdata
{
  _character_create_setdata baseclass_0;
  int nMasterRace;
  _dummy_position *pPosCreate;
  _dummy_position *pPosActive;
  _dummy_position *pPosCenter;
};

/*  849 */
struct _holy_quest_report_wrac
{
  char byRaceCode;
  unsigned __int16 wszCharName[17];
  char byDestroyedRaceCode;
};

/*  850 */
struct _holy_stone_hp_inform_zocl
{
  unsigned __int16 wHPRate[3];
};

/*  851 */
struct _notify_holy_stone_destroyed_zocl
{
  char byDummy;
};

/*  852 */
struct _notice_is_arrive_master
{
  char byArrive;
  char byRaceCode;
  unsigned __int16 wszCharName[17];
};

/*  853 */
struct _stone_enter_inform_zocl
{
  char bNow;
  unsigned __int16 wTotalSecTime;
  __int16 zHurrySecTime;
  __int16 zExitSecTime;
};

/*  854 */
struct _stone_exit_inform_zocl
{
  char byMasterRace;
};

/*  855 */
struct _keeper_enter_inform_zocl
{
  char bNow;
  unsigned __int16 wTotalSecTime;
  __int16 zHurrySecTime;
  __int16 zExitSecTime;
  char byMasterRace;
  char bChaos;
};

/*  856 */
struct _keeper_exit_inform_zocl
{
  char dummy[1];
};

/*  857 */
struct _kepper_wait_inform_zocl
{
  char byMasterRace;
};

/*  858 */
struct _stone_wait_inform_zocl
{
  char sDum;
};

/*  859 */
struct _holy_keeper_change_chaos_inform
{
  unsigned int dwKeeperSerial;
  char byMasterRace;
};

/*  860 */
struct _create_holy_master_zocl
{
  char byHolyStoneRaceCode;
  char byPlayerRaceCode;
  char byNameLen;
  unsigned __int16 wszName[17];
  int nControlSec;
};

/*  861 */
struct _notice_next_quest_inform_zocl
{
  char byLeftMin;
};

/*  862 */
struct _holy_notice_next_quest_inform_zowb
{
  int nWorldCode;
  char szWorldName[33];
  unsigned __int16 wszRaceBossName[3][17];
  unsigned __int16 wLeftMin;
  char byNumOfTime;
};

/*  863 */
struct _holy_complete_quest_inform_zowb
{
  int nWorldCode;
  char szWorldName[33];
  unsigned __int16 wszRaceBossName[3][17];
  char byMasterRaceCode;
  char byDestoryRaceCode;
  unsigned __int16 wszMasterName[17];
  char byChaosHour;
  char byChaosMin;
  char byNumOfTime;
  char byMasterLv;
  char szMasterClass[5];
  unsigned __int16 wszMasterRaceSubBoss[5][17];
  char byStartHour;
  char byStartMin;
  unsigned __int16 wStartYear;
  char byStartMonth;
  char byStartDay;
  char byEndHour;
  char byEndMin;
  unsigned __int16 wEndYear;
  char byEndMonth;
  char byEndDay;
};

/*  864 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/*  865 */
struct _holy_minetime_extend_inform_zowb
{
  int nWorldCode;
  char byChaosHour;
  char byChaosMin;
  char byNumOfTime;
};

/*  866 */
struct _holy_miss_quest_inform_zowb
{
  int nWorldCode;
  char szWorldName[33];
  unsigned __int16 wszRaceBossName[3][17];
  char byMasterRaceCode;
  char byDestoryRaceCode;
  unsigned __int16 szMasterName[17];
  char byChaosHour;
  char byChaosMin;
  char byNumOfTime;
};

/*  867 */
struct CDarkHoleDungeonQuestSetup
{
  CDarkHoleDungeonQuestSetupVtbl *vfptr;
  int m_nLoadQuest;
  _dh_quest_setup *m_QuestSetup[100];
  char m_szLoadErrMsg[256];
  char m_szLoadFileName[256];
  int m_nCurCondiKind;
  _dh_quest_setup *m_pCurLoadQuest;
  _dh_mission_setup *m_pCurLoadMission;
  _dh_job_setup *m_pCurLoadJob;
};

/*  868 */
struct CDarkHoleDungeonQuestSetupVtbl
{
  void *(__thiscall *__vecDelDtor)(CDarkHoleDungeonQuestSetup *this, unsigned int);
};

/*  869 */
#pragma pack(push, 4)
struct CDarkHoleDungeonQuest
{
  CDarkHoleDungeonQuestSetup baseclass_0;
  char m_bLoad;
  CDarkHoleChannel m_Channel[128];
  unsigned int m_dwCheckLastTime;
  unsigned int m_dwChannelSerialCounter;
};
#pragma pack(pop)

/*  870 */
struct _BattleDungeonItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  char m_strMapCode[64];
  char m_strDummyName[64];
  int m_nGenMob;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bQualification;
  float m_fMobAdd;
  int m_nTerminateTime;
  int m_nEndIF;
  char m_strMobID[64];
  int m_nMobCount;
  int m_bItemLooting;
  int m_nExp;
  int m_nDalant;
  int m_nGold;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
  char m_strMissionIndex[64];
};

/*  871 */
#pragma pack(push, 4)
struct CDarkHoleChannel::__enter_member
{
  char bActive;
  char bDisnormalClose;
  unsigned int dwDisconnectTime;
};
#pragma pack(pop)

/*  872 */
#pragma pack(push, 4)
struct _monster_create_setdata
{
  _character_create_setdata baseclass_0;
  _mon_active *pActiveRec;
  _dummy_position *pDumPosition;
  char bDungeon;
  CMonster *pParent;
  char bRobExp;
};
#pragma pack(pop)

/*  873 */
#pragma pack(push, 2)
struct _ENTER_DUNGEON_NEW_POS
{
  char byMapCode;
  unsigned __int16 wLayerIndex;
  float fPos[3];
};
#pragma pack(pop)

/*  874 */
struct _darkhole_new_member_inform_zocl
{
  unsigned int dwNewMemberSerial;
  unsigned __int16 wszNewMemberName[17];
  char bReconnect;
};

/*  875 */
struct _darkhole_outof_member_inform_zocl
{
  unsigned int dwMemberSerial;
  char bDisconnect;
};

/*  876 */
struct _darkhole_leader_change_inform_zocl
{
  unsigned int dwNewLeaderSerial;
};

/*  877 */
struct _darkhole_quest_info_inform_zocl::__reward_item
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDur;
  unsigned int dwLv;
};

/*  878 */
struct _darkhole_quest_info_inform_zocl
{
  char szDescirptCode[17];
  unsigned int dwLimTimeSec;
  unsigned int dwPassTimeSec;
  double dRwExp;
  unsigned int dwRwPvp;
  unsigned int dwRwDalant;
  char byRwItemNum;
  _darkhole_quest_info_inform_zocl::__reward_item RwItem[100];
};

/*  879 */
struct _darkhole_mission_info_inform_zocl::__job
{
  char byType;
  char byTableCode;
  unsigned __int16 wRecordIndex;
  __int16 zNeedCount;
  char szDescirptCode[17];
  char bPass;
  unsigned __int16 wCurCount;
  char bDisable;
};

/*  880 */
struct _darkhole_mission_info_inform_zocl
{
  char szDescirptCode[17];
  unsigned int dwLimTimeSec;
  unsigned int dwPassTimeSec;
  char byOrder;
  char byJobNum;
  _darkhole_mission_info_inform_zocl::__job Job[128];
};

/*  881 */
struct _darkhole_member_info_inform_zocl::__list
{
  unsigned __int16 wszName[17];
  unsigned int dwSerial;
};

/*  882 */
struct _darkhole_member_info_inform_zocl
{
  unsigned int dwLeaderSerial;
  unsigned __int16 wMemberNum;
  _darkhole_member_info_inform_zocl::__list List[32];
};

/*  883 */
struct _darkhole_job_count_inform_zocl
{
  char byJobIndex;
  unsigned __int16 wJobCount;
};

/*  884 */
struct _darkhole_open_portal_by_react_inform_zocl
{
  unsigned __int16 wPortalIndex;
};

/*  885 */
struct _darkhole_open_all_portal_by_result_inform_zocl
{
  char sDum;
};

/*  886 */
struct _darkhole_job_pass_inform_zocl
{
  char byJobIndex;
};

/*  887 */
struct _darkhole_mission_pass_inform_zocl
{
  char szCompleteMsgCode[17];
};

/*  888 */
struct _darkhole_mission_quest_inform_zocl
{
  char sDum;
};

/*  889 */
struct _darkhole_channel_close_inform_zocl
{
  char sDum;
};

/*  890 */
struct _darkhole_new_mission_inform_zocl::__job
{
  char byType;
  char byTableCode;
  unsigned __int16 wRecordIndex;
  __int16 zNeedCount;
  char szDescirptCode[17];
  char bDisable;
};

/*  891 */
struct _darkhole_new_mission_inform_zocl
{
  char szDescirptCode[17];
  unsigned int dwLimTimeSec;
  char byOrder;
  char byJobNum;
  _darkhole_new_mission_inform_zocl::__job Job[128];
};

/*  892 */
struct _darkhole_timeout_inform_zocl
{
  char sDum;
};

/*  893 */
struct _darkhole_ask_reenter_inform_zocl
{
  unsigned __int16 wChannelIndex;
  unsigned int dwChannelSerial;
};

/*  894 */
struct _darkhole_real_msg_inform_zocl
{
  char szMsg[17];
};

/*  895 */
struct CBattleDungeon
{
  CGameObject baseclass_0;
  unsigned __int16 m_wszOpenerName[17];
  char m_aszOpenerName[17];
  __declspec(align(2)) CMapData *m_pTarMap;
  unsigned __int16 m_wTarLayer;
  __declspec(align(4)) _LAYER_SET *m_pLayerSet;
  unsigned int m_dwOpenerSerial;
  char m_byOpenerDegree;
  __declspec(align(4)) unsigned int m_dwOpenTime;
  int m_nStateCode;
  unsigned int m_dwLastDestroyTime;
  int m_nTerminateTime;
  CMyTimer m_tmrCheckActive;
  char m_bOpen;
  __declspec(align(4)) CNetIndexList m_listActiveMonster;
  CNetIndexList m_listActivePlayer;
  int m_nMissionKillMonNum;
  int m_nTotalKillMonNum;
};

/*  896 */
#pragma pack(push, 4)
struct _battledungeon_create_setdata
{
  _object_create_setdata baseclass_0;
  CPlayer *pOpener;
  CMapData *pTarMap;
  unsigned __int16 wTarLayerIndex;
};
#pragma pack(pop)

/*  897 */
struct _dungeongate_create_zocl
{
  unsigned __int16 wGateIndex;
  unsigned int dwGateSerial;
  unsigned int dwOpenerSerial;
  unsigned __int16 wItemRecIndex;
  char byState;
  __int16 zPos[3];
};

/*  898 */
struct _dungeongate_destroy_zocl
{
  unsigned __int16 wGateIndex;
  unsigned int dwGateSerial;
};

/*  899 */
struct _dungeongate_fixpositon_zocl
{
  unsigned __int16 wGateIndex;
  unsigned int dwGateSerial;
  unsigned int dwOpenerSerial;
  unsigned __int16 wItemRecIndex;
  char byState;
  __int16 zPos[3];
};

/*  900 */
struct _dungeongate_state_change_zocl
{
  char byState;
  unsigned __int16 wGateIndex;
  unsigned int dwGateSerial;
};

/*  901 */
struct _killmon_dungeon_inform_zocl
{
  unsigned __int16 wTotalKillNum;
  unsigned __int16 wMissionKillNum;
};

/*  902 */
struct CMgrAvatorItemHistory::__LOG_DATA
{
  char szFileName[64];
  int nLen;
};

/*  903 */
struct CMgrAvatorItemHistory::__LOG_DATA_10K
{
  CMgrAvatorItemHistory::__LOG_DATA baseclass_0;
  char sData[10000];
};

/*  904 */
struct CMgrAvatorItemHistory::__LOG_DATA_1K
{
  CMgrAvatorItemHistory::__LOG_DATA baseclass_0;
  char sData[1000];
};

/*  905 */
struct CMgrAvatorItemHistory::__LOG_DATA_200
{
  CMgrAvatorItemHistory::__LOG_DATA baseclass_0;
  char sData[200];
};

/*  906 */
struct CMgrAvatorItemHistory
{
  char m_szStdPath[128];
  unsigned int m_dwLastLocalDate;
  unsigned int m_dwLastLocalHour;
  CMyTimer m_tmrUpdateTime;
  char m_szCurDate[32];
  char m_szCurTime[32];
  CMgrAvatorItemHistory::__LOG_DATA_10K m_LogData_10K[404];
  CNetIndexList m_listLogData_10K;
  CNetIndexList m_listLogDataEmpty_10K;
  CMgrAvatorItemHistory::__LOG_DATA_1K m_LogData_1K[404];
  CNetIndexList m_listLogData_1K;
  CNetIndexList m_listLogDataEmpty_1K;
  CMgrAvatorItemHistory::__LOG_DATA_200 m_LogData_200[404];
  CNetIndexList m_listLogData_200;
  CNetIndexList m_listLogDataEmpty_200;
  char m_bIOThread;
  __declspec(align(4)) CFrameRate m_FrameRate;
};

/*  907 */
struct _buy_offer
{
  char byGoodIndex;
  char byGoodAmount;
  char byStorageCode;
  _STORAGE_LIST::_db_con Item;
  unsigned __int16 wSerial;
};

/*  908 */
#pragma pack(push, 2)
struct _sell_offer
{
  _STORAGE_LIST::_db_con *pItem;
  char byAmount;
  char bySlotIndex;
  char byStorageCode;
};
#pragma pack(pop)

/*  909 */
#pragma pack(push, 2)
struct _repair_offer
{
  _STORAGE_LIST::_db_con *pItem;
  unsigned __int16 wNewDurPoint;
  char bySlotIndex;
};
#pragma pack(pop)

/*  910 */
struct CGameStatistics::_map
{
  char *pMapName;
  unsigned int dwMaxHourPerMap_Hour;
};

/*  911 */
struct CGameStatistics::_DAY
{
  unsigned int dwEderEnter_Evt;
  unsigned int dwMaxUserHour_Hour;
  unsigned int dwMaxUser_Hour;
  CGameStatistics::_map MaxHourPerMap_Hour[100];
  unsigned int dwDropStdItem_Evt;
  unsigned int dwDropRareItem_Evt;
  unsigned int dw4MuUpgradeSucc_Evt;
  unsigned int dw4EunUpgradeSucc_Evt;
  unsigned int dw4JaUpgradeSucc_Evt;
  unsigned int dw5MuUpgradeSucc_Evt;
  unsigned int dw5EunUpgradeSucc_Evt;
  unsigned int dw5JaUpgradeSucc_Evt;
  unsigned int dwDaePokUse_Evt;
};

/*  912 */
struct CGameStatistics
{
  CGameStatisticsVtbl *vfptr;
  CGameStatistics::_DAY m_day;
};

/*  913 */
struct CGameStatisticsVtbl
{
  void *(__thiscall *__vecDelDtor)(CGameStatistics *this, unsigned int);
};

/*  914 */
struct _trans_ship_ticket_pass_inform_zocl
{
  char bPass;
  unsigned __int16 wTicketSerial;
};

/*  915 */
struct _trans_ship_kick_inform_zocl
{
  char sDum;
};

/*  916 */
struct _trans_ship_state_inform_zocl
{
  char bAnchor;
  char bHurry;
  char byDirect;
  unsigned int dwPassSec;
};

/*  917 */
struct _npc_fld
{
  _base_fld baseclass_0;
  char m_strName[64];
  int m_nRace;
  int m_bWarType;
  float m_fTarDecType;
  float m_fLevel;
  float m_fExt;
  float m_fAttFcStd;
  float m_fMinAFSelProb;
  float m_fMaxAFSelProb;
  float m_fAttSklUnit;
  float m_fDefSklUnit;
  float m_fWeakPart;
  float m_fStdDefFc;
  float m_fFireTol;
  float m_fWaterTol;
  float m_fSoilTol;
  float m_fWindTol;
  float m_fAttTechID1;
  float m_fAttTech1UseProb;
  float m_fAttTechID2;
  float m_fAttTech2UseProb;
  float m_fAttTechID3;
  float m_fAttTech3UseProb;
  float m_fAttTechMinAFProb;
  float m_fAttTechMinAF;
  float m_fAttTechMaxAFProb;
  float m_fAttTechMaxAF;
  float m_fPSecTechID;
  float m_fMSecTechID;
  float m_fMaxHP;
  float m_fHPRecDelay;
  float m_fHPRecUnit;
  float m_fAttSpd;
  float m_fAttMoTime1;
  float m_fAttMoTime2;
  float m_fViewExt;
  float m_fAttExt;
  float m_fMRefExt;
  float m_fCopTime;
  float m_fMovSpd;
  float m_fWarMovSpd;
  float m_fScaleRate;
  int m_bScaleChange;
  float m_fWidth;
  float m_fWaitTime;
  int m_nAsitReqRate;
  int m_nAsitAptRate;
  char m_strChildMon[64];
  int m_nChildMonNum;
  float m_fEmoType;
  float m_fDamHPStd;
  float m_fEmoImpStdTime;
  float m_fGoodToOrdHPPer;
  float m_fOrdToBadHPPer;
  float m_fBadToWorseHPPer;
  float m_fEspTFProb;
  float m_fTypeCompTerms;
  float m_fPSecTechChat;
  float m_fPAttTechChat;
  float m_fEmo0Chat;
  float m_fEmo0ChatProb;
  float m_fEmo1Chat;
  float m_fEmo1ChatProb;
  float m_fEmo2Chat;
  float m_fEmo2ChatProb;
  float m_fEmo3Chat;
  float m_fEmo3ChatProb;
  float m_fEmo4Chat;
  float m_fEmo4ChatProb;
  float m_fAsitReqSteEspChat;
  float m_fAsitReqSteEspChatProb;
  float m_fAsitReqSteHelpChat;
  float m_fAsitReqSteHelpChatProb;
  float m_fAsitReqSteCopChat;
  float m_fAsitReqSteCopChatProb;
};

/*  918 */
struct CMgrGuildHistory::__LOG_DATA
{
  char szFileName[64];
  int nLen;
  char sData[300];
};

/*  919 */
#pragma pack(push, 4)
struct CMgrGuildHistory
{
  char m_szStdPath[128];
  unsigned int m_dwLastLocalDate;
  unsigned int m_dwLastLocalHour;
  CMyTimer m_tmrUpdateTime;
  char m_szCurTime[32];
  CMgrGuildHistory::__LOG_DATA m_LogData[4032];
  CNetIndexList m_listLogData;
  CNetIndexList m_listLogDataEmpty;
  char m_bIOThread;
};
#pragma pack(pop)

/*  920 */
#pragma pack(push, 4)
struct GuildUserRankCompArray
{
  char byGrade;
  unsigned int dwPvpPoint;
  int nIndex;
};
#pragma pack(pop)

/*  921 */
struct _guild_info_update_inform_zocl
{
  unsigned int dwGuildSerial;
  char byGrade;
  unsigned int dwEmblemBack;
  unsigned int dwEmblemMark;
};

/*  922 */
#pragma pack(push, 4)
struct _qry_case_forceleave
{
  unsigned int in_leaverserial;
  unsigned int in_guildIndex;
  unsigned int in_guildserial;
  char in_apprnum;
  int in_seniornum;
  int in_MemberNum;
};
#pragma pack(pop)

/*  923 */
#pragma pack(push, 8)
struct _qry_case_outputgmoney
{
  unsigned int in_poperserial;
  unsigned __int16 in_w_popername[17];
  unsigned int tmp_guildindex;
  unsigned int in_guildserial;
  int in_subgold;
  int in_subdalant;
  char in_date[4];
  double out_totalgold;
  double out_totaldalant;
};
#pragma pack(pop)

/*  924 */
#pragma pack(push, 4)
struct _qry_case_buyemblem
{
  unsigned int in_guildserial;
  unsigned int in_emblemback;
  unsigned int in_emblemmark;
  int in_emblemdlant;
  unsigned int in_suggestorSerial;
  char in_date[4];
  unsigned int tmp_guildindex;
  unsigned __int16 tmp_w_suggestorname[17];
  double out_totalgold;
  double out_totaldalant;
};
#pragma pack(pop)

/*  925 */
#pragma pack(push, 2)
struct CGuild::MakeBuddyPacket::__guild_buddy_list
{
  unsigned int dwSerial;
  unsigned __int16 wMapCode;
  char byRegionIndex;
};
#pragma pack(pop)

/*  926 */
struct _guild_leave_inform_zocl
{
  char bSelf;
  unsigned int dwMemberSerial;
};

/*  927 */
struct _guild_vote_process_inform_zocl
{
  char bStart;
  char byMatterType;
  unsigned int dwMatterDst;
  unsigned int dwMatterObj1;
  unsigned int dwMatterObj2;
  unsigned int dwMatterVoteSynKey;
  unsigned int dwSuggesterSerial;
  char byLoginSeniorNum;
  char byTotalSeniorNum;
  char bActed;
  char byApprPoint;
  char byOppoPoint;
  char byCommentLen;
  unsigned __int16 wszComment[65];
};

/*  928 */
struct _guild_vote_state_zocl
{
  unsigned int dwMatterVoteSynKey;
  char byApprPoint;
  char byOppoPoint;
  char byLoginSeniorNum;
  char byTotalSeniorNum;
};

/*  929 */
struct _guild_cancel_suggest_inform_zocl
{
  unsigned int dwMatterVoteSynKey;
};

/*  930 */
struct _guild_vote_stop_zocl
{
  unsigned int dwMatterVoteSynKey;
};

/*  931 */
struct _guild_vote_complete_zocl
{
  unsigned int dwMatterVoteSynKey;
  char byApprPoint;
  char byOppoPoint;
  char bPassed;
};

/*  932 */
struct _guild_add_join_applier_inform_zocl
{
  unsigned int dwApplierSerial;
  unsigned __int16 wszName[17];
  char byLv;
  unsigned int dwPvpPoint;
  unsigned int dwApplyTime;
};

/*  933 */
struct _guild_del_join_applier_inform_zocl
{
  unsigned int dwApplierSerial;
  char byDelCode;
};

/*  934 */
struct _guild_join_accept_inform_zocl
{
  unsigned int dwAccepterSerial;
  unsigned int dwApplierSerial;
  unsigned __int16 wszName[17];
  char byClassInGuild;
  char byLv;
  unsigned int dwPvpPoint;
  char byGuildRank;
};

/*  935 */
struct _guild_io_money_inform_zocl
{
  unsigned int dwIOerSerial;
  char byKind;
  char bInPut;
  int nIODalant;
  int nIOGold;
  double dTotalDalant;
  double dTotalGold;
  char byDate[4];
};

/*  936 */
struct _guild_pop_money_fail_zocl
{
  unsigned int dwIOerSerial;
};

/*  937 */
struct _guild_disjoint_inform_zocl
{
  unsigned int dwGuildSerial;
};

/*  938 */
struct _guild_member_login_inform_zocl
{
  unsigned int dwSerial;
  unsigned __int16 wMapCode;
  char byRegionIndex;
};

/*  939 */
struct _guild_member_logoff_inform_zocl
{
  unsigned int dwSerial;
};

/*  940 */
struct _guild_member_pos_inform_zocl
{
  unsigned int dwSerial;
  unsigned __int16 wMapCode;
  char byRegionIndex;
};

/*  941 */
struct _guild_alter_member_state_inform_zocl::__list
{
  unsigned int dwMemberSerial;
  char byLv;
  unsigned int dwPvpPoint;
};

/*  942 */
struct _guild_alter_member_state_inform_zocl
{
  char byAlterMemberNum;
  _guild_alter_member_state_inform_zocl::__list MemberList[150];
};

/*  943 */
struct _guild_alter_member_grade_inform_zocl::__list
{
  unsigned int dwMemberSerial;
  char byRank;
  char byGrade;
};

/*  944 */
struct _guild_alter_member_grade_inform_zocl
{
  char byAlterMemberNum;
  _guild_alter_member_grade_inform_zocl::__list MemberList[150];
};

/*  945 */
struct CMgrAvatorQuestHistory::__LOG_DATA
{
  char szFileName[64];
  int nLen;
  char sData[300];
};

/*  946 */
struct CMgrAvatorQuestHistory
{
  char m_szStdPath[128];
  unsigned int m_dwLastLocalDate;
  unsigned int m_dwLastLocalHour;
  CMyTimer m_tmrUpdateTime;
  char m_szCurTime[32];
  CMgrAvatorQuestHistory::__LOG_DATA m_LogData[404];
  CNetIndexList m_listLogData;
  CNetIndexList m_listLogDataEmpty;
  char m_bIOThread;
  __declspec(align(4)) CFrameRate m_FrameRate;
};

/*  947 */
struct CMgrAvatorLvHistory::__LOG_DATA
{
  char szFileName[64];
  int nLen;
};

/*  948 */
struct CMgrAvatorLvHistory::__LOG_DATA_2K
{
  CMgrAvatorLvHistory::__LOG_DATA baseclass_0;
  char sData[2000];
};

/*  949 */
struct CMgrAvatorLvHistory::__LOG_DATA_1K
{
  CMgrAvatorLvHistory::__LOG_DATA baseclass_0;
  char sData[1000];
};

/*  950 */
struct CMgrAvatorLvHistory::__LOG_DATA_200
{
  CMgrAvatorLvHistory::__LOG_DATA baseclass_0;
  char sData[200];
};

/*  951 */
struct CMgrAvatorLvHistory
{
  char m_szStdPath[128];
  unsigned int m_dwLastLocalDate;
  unsigned int m_dwLastLocalHour;
  CMyTimer m_tmrUpdateTime;
  char m_szCurDate[32];
  char m_szCurTime[32];
  CMgrAvatorLvHistory::__LOG_DATA_2K m_LogData_2K[404];
  CNetIndexList m_listLogData_2K;
  CNetIndexList m_listLogDataEmpty_2K;
  CMgrAvatorLvHistory::__LOG_DATA_1K m_LogData_1K[404];
  CNetIndexList m_listLogData_1K;
  CNetIndexList m_listLogDataEmpty_1K;
  CMgrAvatorLvHistory::__LOG_DATA_200 m_LogData_200[404];
  CNetIndexList m_listLogData_200;
  CNetIndexList m_listLogDataEmpty_200;
  char m_bIOThread;
  __declspec(align(4)) CFrameRate m_FrameRate;
};

/*  952 */
#pragma pack(push, 4)
struct ltd::LtdWriter
{
  char m_bThreadState;
  char m_bStop;
  unsigned int m_ulThread;
  CLogFile m_logLtdWriter;
  int m_nTblCurSerial;
  char m_bInitDB;
  CRFDBItemLog *m_pLtdDB;
  ltd::_LTD m_bufLog[16128];
  CNetIndexList m_listEmpty;
  CNetIndexList m_listTask;
};
#pragma pack(pop)

/*  953 */
struct ltd::_LTD_ARRAY_ITEM
{
  char m_byNum;
  _STORAGE_LIST::_db_con *m_pItems;
  char *m_pByOverlapNum;
};

/*  954 */
struct ltd::_LTD_PARAM
{
  CUserDB *m_pUserDB;
  ltd::_LTD_ARRAY_ITEM m_DstItem;
  ltd::_LTD_ARRAY_ITEM m_MtrItem1;
  ltd::_LTD_ARRAY_ITEM m_MtrItem2;
  unsigned __int16 m_wszEtc[128];
};

/*  955 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/*  956 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/*  957 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/*  958 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/*  959 */
struct WheatyExceptionReport
{
  char dummy[1];
};

/*  960 */
#pragma pack(push, 8)
struct _SYMBOL_INFO
{
  unsigned int SizeOfStruct;
  unsigned int TypeIndex;
  unsigned __int64 Reserved[2];
  unsigned int info;
  unsigned int Size;
  unsigned __int64 ModBase;
  unsigned int Flags;
  unsigned __int64 Value;
  unsigned __int64 Address;
  unsigned int Register;
  unsigned int Scope;
  unsigned int Tag;
  unsigned int NameLen;
  unsigned int MaxNameLen;
  char Name[1];
};
#pragma pack(pop)

/*  961 */
#pragma pack(push, 4)
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};
#pragma pack(pop)

/*  962 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int Reserved[8];
};

/*  963 */
struct _tagSTACKFRAME
{
  _tagADDRESS AddrPC;
  _tagADDRESS AddrReturn;
  _tagADDRESS AddrFrame;
  _tagADDRESS AddrStack;
  void *FuncTableEntry;
  unsigned int Params[4];
  int Far;
  int Virtual;
  unsigned int Reserved[3];
  _KDHELP KdHelp;
  _tagADDRESS AddrBStore;
};

/*  964 */
struct HINSTANCE__
{
  int unused;
};

/*  965 */
struct tagMODULEENTRY32
{
  unsigned int dwSize;
  unsigned int th32ModuleID;
  unsigned int th32ProcessID;
  unsigned int GlblcntUsage;
  unsigned int ProccntUsage;
  char *modBaseAddr;
  unsigned int modBaseSize;
  HINSTANCE__ *hModule;
  char szModule[256];
  char szExePath[260];
};

/*  966 */
struct _MEMORYSTATUS
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned int dwTotalPhys;
  unsigned int dwAvailPhys;
  unsigned int dwTotalPageFile;
  unsigned int dwAvailPageFile;
  unsigned int dwTotalVirtual;
  unsigned int dwAvailVirtual;
};

/*  967 */
struct $409DFF2A380C4FFE2B587D0390AC124E
{
  unsigned __int16 wProcessorArchitecture;
  unsigned __int16 wReserved;
};

/*  968 */
union $3947D1A5BA31CC970E54F4FD19F565EE
{
  unsigned int dwOemId;
  $409DFF2A380C4FFE2B587D0390AC124E _s1;
};

/*  969 */
struct _SYSTEM_INFO
{
  $3947D1A5BA31CC970E54F4FD19F565EE ___u0;
  unsigned int dwPageSize;
  void *lpMinimumApplicationAddress;
  void *lpMaximumApplicationAddress;
  unsigned int dwActiveProcessorMask;
  unsigned int dwNumberOfProcessors;
  unsigned int dwProcessorType;
  unsigned int dwAllocationGranularity;
  unsigned __int16 wProcessorLevel;
  unsigned __int16 wProcessorRevision;
};

/*  970 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/*  971 */
union _IMAGE_SECTION_HEADER::__unnamed
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/*  972 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  _IMAGE_SECTION_HEADER::__unnamed Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/*  973 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/*  974 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/*  975 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/*  976 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/*  977 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/*  978 */
struct _IMAGEHLP_LINE
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned int Address;
};

/*  979 */
struct _IMAGEHLP_STACK_FRAME
{
  unsigned __int64 InstructionOffset;
  unsigned __int64 ReturnOffset;
  unsigned __int64 FrameOffset;
  unsigned __int64 StackOffset;
  unsigned __int64 BackingStoreOffset;
  unsigned __int64 FuncTableEntry;
  unsigned __int64 Params[4];
  unsigned __int64 Reserved[5];
  int Virtual;
  unsigned int Reserved2;
};

/*  980 */
struct _TI_FINDCHILDREN_PARAMS
{
  unsigned int Count;
  unsigned int Start;
  unsigned int ChildId[1];
};

/*  981 */
struct WheatyExceptionReport::DumpTypeIndex::FINDCHILDREN
{
  _TI_FINDCHILDREN_PARAMS baseclass_0;
  unsigned int MoreChildIds[1024];
};

/*  982 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/*  983 */
struct CProcessThread
{
  CProcessThreadVtbl *vfptr;
  _SYN_DATA *m_pSynData;
  CNetIndexList m_listData;
  CNetIndexList m_listDataComplete;
  CNetIndexList m_listDataEmpty;
  unsigned int m_dwSynDataNum;
  unsigned int m_dwSynDataSize;
  unsigned int m_dwWorkCount;
  unsigned int m_dwLoopCount;
  char m_bThread;
  __declspec(align(4)) CLogFile m_logSystem;
  CFrameRate m_FrameRate;
  _THREAD_CONFIG m_Config;
};

/*  984 */
#pragma pack(push, 4)
struct _SYN_HEADER
{
  unsigned int m_dwQryIndex;
  unsigned int m_dwQrySerial;
  char m_byResult;
  char m_byQryCase;
};
#pragma pack(pop)

/*  985 */
#pragma pack(push, 4)
struct _SYN_DATA
{
  _SYN_HEADER baseclass_0;
  char m_bUse;
  char m_bProcess;
  char *m_psData;
};
#pragma pack(pop)

/*  986 */
struct CProcessThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(CProcessThread *this, unsigned int);
  void (__thiscall *CrashThread)(CProcessThread *this);
  char (__thiscall *WorkProcess)(CProcessThread *this, _SYN_DATA *);
  void (__thiscall *CompleteProcess)(CProcessThread *this, _SYN_DATA *);
};

/*  987 */
#pragma pack(push, 4)
struct _THREAD_CONFIG
{
  char szThreadID[128];
  char bProgramExitWhenLackData;
  char szLogFileName[128];
  int nSleepCount;
};
#pragma pack(pop)

/*  988 */
struct CFPS
{
  CFPSVtbl *vfptr;
  unsigned int m_dwFrames;
  unsigned int m_dwFrameTime;
  unsigned int m_dwFrameCount;
};

/*  989 */
struct CFPSVtbl
{
  void *(__thiscall *__vecDelDtor)(CFPS *this, unsigned int);
};

/*  990 */
struct CTerm
{
  unsigned int m_dwStartTime;
};

/*  991 */
struct HKEY__
{
  int unused;
};

/*  992 */
struct _LARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  int HighPart;
};

/*  993 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/*  994 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A _s0;
  _LARGE_INTEGER::__unnamed u;
  __int64 QuadPart;
};

/*  995 */
struct IDirectDrawClipper
{
  IUnknown baseclass_0;
};

/*  996 */
struct HBITMAP__
{
  int unused;
};

/*  997 */
struct tagBITMAP
{
  int bmType;
  int bmWidth;
  int bmHeight;
  int bmWidthBytes;
  unsigned __int16 bmPlanes;
  unsigned __int16 bmBitsPixel;
  void *bmBits;
};

/*  998 */
struct HFONT__
{
  int unused;
};

/*  999 */
struct HDC__
{
  int unused;
};

/* 1000 */
struct IDirectDrawPalette
{
  IUnknown baseclass_0;
};

/* 1001 */
struct IDirectDrawSurface
{
  IUnknown baseclass_0;
};

/* 1002 */
union $6603DE0A41A59F6149BA271AEF97AE16
{
  unsigned int dwZDestConst;
  IDirectDrawSurface *lpDDSZBufferDest;
};

/* 1003 */
union $3B6DA31261E9CAC8C9E72F54233F507A
{
  unsigned int dwZSrcConst;
  IDirectDrawSurface *lpDDSZBufferSrc;
};

/* 1004 */
union $71BDCE3BA83C761E0FB5A2D08187C316
{
  unsigned int dwAlphaDestConst;
  IDirectDrawSurface *lpDDSAlphaDest;
};

/* 1005 */
union $121C3F99E609E792741423793AA2D1CF
{
  unsigned int dwAlphaSrcConst;
  IDirectDrawSurface *lpDDSAlphaSrc;
};

/* 1006 */
union $8BD72E800B9AA56E941648C9DD9FA1A1
{
  unsigned int dwFillColor;
  unsigned int dwFillDepth;
  unsigned int dwFillPixel;
  IDirectDrawSurface *lpDDSPattern;
};

/* 1007 */
struct _DDBLTFX
{
  unsigned int dwSize;
  unsigned int dwDDFX;
  unsigned int dwROP;
  unsigned int dwDDROP;
  unsigned int dwRotationAngle;
  unsigned int dwZBufferOpCode;
  unsigned int dwZBufferLow;
  unsigned int dwZBufferHigh;
  unsigned int dwZBufferBaseDest;
  unsigned int dwZDestConstBitDepth;
  $6603DE0A41A59F6149BA271AEF97AE16 ___u10;
  unsigned int dwZSrcConstBitDepth;
  $3B6DA31261E9CAC8C9E72F54233F507A ___u12;
  unsigned int dwAlphaEdgeBlendBitDepth;
  unsigned int dwAlphaEdgeBlend;
  unsigned int dwReserved;
  unsigned int dwAlphaDestConstBitDepth;
  $71BDCE3BA83C761E0FB5A2D08187C316 ___u17;
  unsigned int dwAlphaSrcConstBitDepth;
  $121C3F99E609E792741423793AA2D1CF ___u19;
  $8BD72E800B9AA56E941648C9DD9FA1A1 ___u20;
  _DDCOLORKEY ddckDestColorkey;
  _DDCOLORKEY ddckSrcColorkey;
};

/* 1008 */
struct tagBITMAPINFOHEADER
{
  unsigned int biSize;
  int biWidth;
  int biHeight;
  unsigned __int16 biPlanes;
  unsigned __int16 biBitCount;
  unsigned int biCompression;
  unsigned int biSizeImage;
  int biXPelsPerMeter;
  int biYPelsPerMeter;
  unsigned int biClrUsed;
  unsigned int biClrImportant;
};

/* 1009 */
struct tagRGBQUAD
{
  char rgbBlue;
  char rgbGreen;
  char rgbRed;
  char rgbReserved;
};

/* 1010 */
struct HRSRC__
{
  int unused;
};

/* 1011 */
struct tagPALETTEENTRY
{
  char peRed;
  char peGreen;
  char peBlue;
  char peFlags;
};

/* 1012 */
struct tagBITMAPFILEHEADER
{
  unsigned __int16 bfType;
  unsigned int bfSize;
  unsigned __int16 bfReserved1;
  unsigned __int16 bfReserved2;
  unsigned int bfOffBits;
};

/* 1013 */
struct AINet
{
  AINetVtbl *vfptr;
  void *m_hSession;
};

/* 1014 */
struct AINetVtbl
{
  void *(__thiscall *__vecDelDtor)(AINet *this, unsigned int);
};

/* 1015 */
struct AINetFile
{
  AINetFileVtbl *vfptr;
  void *m_hFile;
  unsigned int m_dwAccess;
};

/* 1016 */
struct AINetFileVtbl
{
  void *(__thiscall *__vecDelDtor)(AINetFile *this, unsigned int);
};

/* 1017 */
struct AINetFtp
{
  AINet baseclass_0;
  void *m_hConnect;
  unsigned int m_dwContext;
};

/* 1018 */
struct _EVENT_CODE
{
  int extendEXP;
  int extendITEMDROP;
  int extendEXPERT;
};

/* 1019 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 1020 */
#pragma pack(push, 4)
struct _TAPE_PREPARE
{
  unsigned int Operation;
  char Immediate;
};
#pragma pack(pop)

/* 1021 */
struct tagLOCALESIGNATURE
{
  unsigned int lsUsb[4];
  unsigned int lsCsbDefault[2];
  unsigned int lsCsbSupported[2];
};

/* 1022 */
struct tagLOGFONTA
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  char lfFaceName[32];
};

/* 1023 */
struct tagENUMLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
};

/* 1024 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  unsigned int n;
  const unsigned __int16 *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 1025 */
#pragma pack(push, 4)
struct tagCURSORSHAPE
{
  int xHotSpot;
  int yHotSpot;
  int cx;
  int cy;
  int cbWidth;
  char Planes;
  char BitsPixel;
};
#pragma pack(pop)

/* 1026 */
struct tagEMR
{
  unsigned int iType;
  unsigned int nSize;
};

/* 1027 */
struct _RECTL
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 1028 */
struct _POINTL
{
  int x;
  int y;
};

/* 1029 */
struct tagEMRTEXT
{
  _POINTL ptlReference;
  unsigned int nChars;
  unsigned int offString;
  unsigned int fOptions;
  _RECTL rcl;
  unsigned int offDx;
};

/* 1030 */
struct tagEMREXTTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  tagEMRTEXT emrtext;
};

/* 1031 */
struct tagNMHDR
{
  HWND__ *hwndFrom;
  unsigned int idFrom;
  unsigned int code;
};

/* 1032 */
struct tagNMCUSTOMDRAWINFO
{
  tagNMHDR hdr;
  unsigned int dwDrawStage;
  HDC__ *hdc;
  tagRECT rc;
  unsigned int dwItemSpec;
  unsigned int uItemState;
  int lItemlParam;
};

/* 1033 */
struct tagNMTTCUSTOMDRAW
{
  tagNMCUSTOMDRAWINFO nmcd;
  unsigned int uDrawFlags;
};

/* 1034 */
struct _EXCEPTION_DEBUG_INFO
{
  _EXCEPTION_RECORD ExceptionRecord;
  unsigned int dwFirstChance;
};

/* 1035 */
struct _CREATE_THREAD_DEBUG_INFO
{
  void *hThread;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
};

/* 1036 */
#pragma pack(push, 4)
struct _CREATE_PROCESS_DEBUG_INFO
{
  void *hFile;
  void *hProcess;
  void *hThread;
  void *lpBaseOfImage;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpThreadLocalBase;
  unsigned int (__stdcall *lpStartAddress)(void *);
  void *lpImageName;
  unsigned __int16 fUnicode;
};
#pragma pack(pop)

/* 1037 */
struct _EXIT_THREAD_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 1038 */
struct _EXIT_PROCESS_DEBUG_INFO
{
  unsigned int dwExitCode;
};

/* 1039 */
#pragma pack(push, 4)
struct _LOAD_DLL_DEBUG_INFO
{
  void *hFile;
  void *lpBaseOfDll;
  unsigned int dwDebugInfoFileOffset;
  unsigned int nDebugInfoSize;
  void *lpImageName;
  unsigned __int16 fUnicode;
};
#pragma pack(pop)

/* 1040 */
struct _UNLOAD_DLL_DEBUG_INFO
{
  void *lpBaseOfDll;
};

/* 1041 */
struct _OUTPUT_DEBUG_STRING_INFO
{
  char *lpDebugStringData;
  unsigned __int16 fUnicode;
  unsigned __int16 nDebugStringLength;
};

/* 1042 */
struct _RIP_INFO
{
  unsigned int dwError;
  unsigned int dwType;
};

/* 1043 */
union _DEBUG_EVENT::__unnamed
{
  _EXCEPTION_DEBUG_INFO Exception;
  _CREATE_THREAD_DEBUG_INFO CreateThread;
  _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
  _EXIT_THREAD_DEBUG_INFO ExitThread;
  _EXIT_PROCESS_DEBUG_INFO ExitProcess;
  _LOAD_DLL_DEBUG_INFO LoadDll;
  _UNLOAD_DLL_DEBUG_INFO UnloadDll;
  _OUTPUT_DEBUG_STRING_INFO DebugString;
  _RIP_INFO RipInfo;
};

/* 1044 */
struct _DEBUG_EVENT
{
  unsigned int dwDebugEventCode;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
  _DEBUG_EVENT::__unnamed u;
};

/* 1045 */
struct tagLOGFONTW
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  char lfItalic;
  char lfUnderline;
  char lfStrikeOut;
  char lfCharSet;
  char lfOutPrecision;
  char lfClipPrecision;
  char lfQuality;
  char lfPitchAndFamily;
  unsigned __int16 lfFaceName[32];
};

/* 1046 */
struct tagPANOSE
{
  char bFamilyType;
  char bSerifStyle;
  char bWeight;
  char bProportion;
  char bContrast;
  char bStrokeVariation;
  char bArmStyle;
  char bLetterform;
  char bMidline;
  char bXHeight;
};

/* 1047 */
#pragma pack(push, 4)
struct tagEXTLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};
#pragma pack(pop)

/* 1048 */
struct tagPOLYTEXTA
{
  int x;
  int y;
  unsigned int n;
  const char *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 1049 */
struct _IMAGE_IA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int UnwindInfoAddress;
};

/* 1050 */
struct tagEMRSETMAPPERFLAGS
{
  tagEMR emr;
  unsigned int dwFlags;
};

/* 1051 */
struct tagPOINTS
{
  __int16 x;
  __int16 y;
};

/* 1052 */
struct tagEMRPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
};

/* 1053 */
struct tagEMRPOLYTEXTOUTA
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int iGraphicsMode;
  float exScale;
  float eyScale;
  int cStrings;
  tagEMRTEXT aemrtext[1];
};

/* 1054 */
struct tagEMREXTCREATEFONTINDIRECTW
{
  tagEMR emr;
  unsigned int ihFont;
  tagEXTLOGFONTW elfw;
};

/* 1055 */
union $18D88968084CBEE834030F63CA1057E2
{
  unsigned int Name;
  unsigned __int16 Id;
};

/* 1056 */
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  $18D88968084CBEE834030F63CA1057E2 ___u0;
  unsigned int OffsetToData;
};

/* 1057 */
struct tagLVITEMW
{
  unsigned int mask;
  int iItem;
  int iSubItem;
  unsigned int state;
  unsigned int stateMask;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
  int iIndent;
};

/* 1058 */
struct tagENUMLOGFONTW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
};

/* 1059 */
struct _BY_HANDLE_FILE_INFORMATION
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int dwVolumeSerialNumber;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int nNumberOfLinks;
  unsigned int nFileIndexHigh;
  unsigned int nFileIndexLow;
};

/* 1060 */
union $66A2FC5ED47CB5912809650DAB14E256
{
  unsigned int VirtualAddress;
  unsigned int RelocCount;
};

/* 1061 */
struct _IMAGE_RELOCATION
{
  $66A2FC5ED47CB5912809650DAB14E256 ___u0;
  unsigned int SymbolTableIndex;
  unsigned __int16 Type;
};

/* 1062 */
struct tagNMDATETIMESTRINGA
{
  tagNMHDR nmhdr;
  const char *pszUserString;
  _SYSTEMTIME st;
  unsigned int dwFlags;
};

/* 1063 */
#pragma pack(push, 4)
struct tagEXTLOGFONTA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  unsigned int elfVersion;
  unsigned int elfStyleSize;
  unsigned int elfMatch;
  unsigned int elfReserved;
  char elfVendorId[4];
  unsigned int elfCulture;
  tagPANOSE elfPanose;
};
#pragma pack(pop)

/* 1064 */
struct HICON__
{
  int unused;
};

/* 1065 */
struct HBRUSH__
{
  int unused;
};

/* 1066 */
struct tagWNDCLASSEXW
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
  HICON__ *hIconSm;
};

/* 1067 */
struct tagEMRSETVIEWPORTEXTEX
{
  tagEMR emr;
  tagSIZE szlExtent;
};

/* 1068 */
struct tagLVITEMA
{
  unsigned int mask;
  int iItem;
  int iSubItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
  int iIndent;
};

/* 1069 */
struct tagEMRSCALEVIEWPORTEXTEX
{
  tagEMR emr;
  int xNum;
  int xDenom;
  int yNum;
  int yDenom;
};

/* 1070 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  unsigned __int64 Alignment;
};

/* 1071 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/* 1072 */
#pragma pack(push, 4)
struct _WIN_CERTIFICATE
{
  unsigned int dwLength;
  unsigned __int16 wRevision;
  unsigned __int16 wCertificateType;
  char bCertificate[1];
};
#pragma pack(pop)

/* 1073 */
struct tagEMRCREATEMONOBRUSH
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 1074 */
struct tagXFORM
{
  float eM11;
  float eM12;
  float eM21;
  float eM22;
  float eDx;
  float eDy;
};

/* 1075 */
struct tagEMRSETWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
};

/* 1076 */
struct tagPAINTSTRUCT
{
  HDC__ *hdc;
  int fErase;
  tagRECT rcPaint;
  int fRestore;
  int fIncUpdate;
  char rgbReserved[32];
};

/* 1077 */
struct tagEMRSETVIEWPORTORGEX
{
  tagEMR emr;
  _POINTL ptlOrigin;
};

/* 1078 */
struct tagWNDCLASSEXA
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
  HICON__ *hIconSm;
};

/* 1079 */
struct tagNMDATETIMESTRINGW
{
  tagNMHDR nmhdr;
  const unsigned __int16 *pszUserString;
  _SYSTEMTIME st;
  unsigned int dwFlags;
};

/* 1080 */
struct _ACL
{
  char AclRevision;
  char Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/* 1081 */
struct _SECURITY_DESCRIPTOR
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 1082 */
struct tagEMRARC
{
  tagEMR emr;
  _RECTL rclBox;
  _POINTL ptlStart;
  _POINTL ptlEnd;
};

/* 1083 */
#pragma pack(push, 4)
struct tagEMRGLSRECORD
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};
#pragma pack(pop)

/* 1084 */
struct tagLVHITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
  int iItem;
  int iSubItem;
};

/* 1085 */
struct _DISCDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  char *lpLocalName;
  char *lpRemoteName;
  unsigned int dwFlags;
};

/* 1086 */
struct tagNMTVCUSTOMDRAW
{
  tagNMCUSTOMDRAWINFO nmcd;
  unsigned int clrText;
  unsigned int clrTextBk;
  int iLevel;
};

/* 1087 */
struct NMCBEENDEDITA
{
  tagNMHDR hdr;
  int fChanged;
  int iNewSelection;
  char szText[260];
  int iWhy;
};

/* 1088 */
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  void *CompletionKey;
  void *CompletionPort;
};

/* 1089 */
struct tagTVITEMEXA
{
  unsigned int mask;
  struct _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
  int iIntegral;
};

/* 1090 */
struct tagTVITEMA
{
  unsigned int mask;
  struct _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
};

/* 1091 */
union $A6B83BA8777DC439B3BB9B06186AFCAE
{
  tagTVITEMEXA itemex;
  tagTVITEMA item;
};

/* 1092 */
struct tagTVINSERTSTRUCTA
{
  struct _TREEITEM *hParent;
  struct _TREEITEM *hInsertAfter;
  $A6B83BA8777DC439B3BB9B06186AFCAE ___u2;
};

/* 1093 */
struct _BLENDFUNCTION
{
  char BlendOp;
  char BlendFlags;
  char SourceConstantAlpha;
  char AlphaFormat;
};

/* 1094 */
struct tagLOGBRUSH
{
  unsigned int lbStyle;
  unsigned int lbColor;
  int lbHatch;
};

/* 1095 */
struct tagSTICKYKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 1096 */
struct tagEMRPOLYPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cptl;
  unsigned int aPolyCounts[1];
  _POINTL aptl[1];
};

/* 1097 */
struct pvalueW
{
  unsigned __int16 *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 1098 */
struct tagPIXELFORMATDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerType;
  char bReserved;
  unsigned int dwLayerMask;
  unsigned int dwVisibleMask;
  unsigned int dwDamageMask;
};

/* 1099 */
struct tagEMRPIXELFORMAT
{
  tagEMR emr;
  tagPIXELFORMATDESCRIPTOR pfd;
};

/* 1100 */
struct tagTVKEYDOWN
{
  tagNMHDR hdr;
  unsigned __int16 wVKey;
  unsigned int flags;
};

/* 1101 */
struct NMCBEENDEDITW
{
  tagNMHDR hdr;
  int fChanged;
  int iNewSelection;
  unsigned __int16 szText[260];
  int iWhy;
};

/* 1102 */
struct tagTVITEMEXW
{
  unsigned int mask;
  struct _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
  int iIntegral;
};

/* 1103 */
struct tagTVITEMW
{
  unsigned int mask;
  struct _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
};

/* 1104 */
union $578FA60D92C663D2456F5277C7287E82
{
  tagTVITEMEXW itemex;
  tagTVITEMW item;
};

/* 1105 */
struct tagTVINSERTSTRUCTW
{
  struct _TREEITEM *hParent;
  struct _TREEITEM *hInsertAfter;
  $578FA60D92C663D2456F5277C7287E82 ___u2;
};

/* 1106 */
struct _OSVERSIONINFOEXW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wReserved[2];
};

/* 1107 */
struct _DISCDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned int dwFlags;
};

/* 1108 */
#pragma pack(push, 4)
struct tagNEWTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};
#pragma pack(pop)

/* 1109 */
struct tagFONTSIGNATURE
{
  unsigned int fsUsb[4];
  unsigned int fsCsb[2];
};

/* 1110 */
struct tagNEWTEXTMETRICEXA
{
  tagNEWTEXTMETRICA ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 1111 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/* 1112 */
struct tagEMROFFSETCLIPRGN
{
  tagEMR emr;
  _POINTL ptlOffset;
};

/* 1113 */
struct tagLOGPEN
{
  unsigned int lopnStyle;
  tagPOINT lopnWidth;
  unsigned int lopnColor;
};

/* 1114 */
struct tagEMRCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  tagLOGPEN lopn;
};

/* 1115 */
struct _EVENTLOGRECORD
{
  unsigned int Length;
  unsigned int Reserved;
  unsigned int RecordNumber;
  unsigned int TimeGenerated;
  unsigned int TimeWritten;
  unsigned int EventID;
  unsigned __int16 EventType;
  unsigned __int16 NumStrings;
  unsigned __int16 EventCategory;
  unsigned __int16 ReservedFlags;
  unsigned int ClosingRecordNumber;
  unsigned int StringOffset;
  unsigned int UserSidLength;
  unsigned int UserSidOffset;
  unsigned int DataLength;
  unsigned int DataOffset;
};

/* 1116 */
struct _EVENTSFORLOGFILE
{
  unsigned int ulSize;
  unsigned __int16 szLogicalLogFile[256];
  unsigned int ulNumRecords;
  _EVENTLOGRECORD pEventLogRecords[];
};

/* 1117 */
struct _POINTFLOAT
{
  float x;
  float y;
};

/* 1118 */
struct _ACL_REVISION_INFORMATION
{
  unsigned int AclRevision;
};

/* 1119 */
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 NumberOfModuleForwarderRefs;
};

/* 1120 */
struct pvalueA
{
  char *pv_valuename;
  int pv_valuelen;
  void *pv_value_context;
  unsigned int pv_type;
};

/* 1121 */
#pragma pack(push, 4)
struct tagEMRPOLYDRAW16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cpts;
  tagPOINTS apts[1];
  char abTypes[1];
};
#pragma pack(pop)

/* 1122 */
struct tagEMRSTRETCHBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int cxSrc;
  int cySrc;
};

/* 1123 */
struct tagMOUSEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iMaxSpeed;
  unsigned int iTimeToMaxSpeed;
  unsigned int iCtrlSpeed;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 1124 */
struct tagNMMOUSE
{
  tagNMHDR hdr;
  unsigned int dwItemSpec;
  unsigned int dwItemData;
  tagPOINT pt;
  unsigned int dwHitInfo;
};

/* 1125 */
#pragma pack(push, 4)
struct tagEMREXTSELECTCLIPRGN
{
  tagEMR emr;
  unsigned int cbRgnData;
  unsigned int iMode;
  char RgnData[1];
};
#pragma pack(pop)

/* 1126 */
struct tagWINDOWPLACEMENT
{
  unsigned int length;
  unsigned int flags;
  unsigned int showCmd;
  tagPOINT ptMinPosition;
  tagPOINT ptMaxPosition;
  tagRECT rcNormalPosition;
};

/* 1127 */
struct _PSINJECTDATA
{
  unsigned int DataBytes;
  unsigned int InjectionPoint;
  unsigned int Flags;
  unsigned int Reserved;
};

/* 1128 */
struct tagLVFINDINFOA
{
  unsigned int flags;
  const char *psz;
  int lParam;
  tagPOINT pt;
  unsigned int vkDirection;
};

/* 1129 */
struct tagNMLVFINDITEM
{
  tagNMHDR hdr;
  int iStart;
  tagLVFINDINFOA lvfi;
};

/* 1130 */
struct tagNMREBARCHILDSIZE
{
  tagNMHDR hdr;
  unsigned int uBand;
  unsigned int wID;
  tagRECT rcChild;
  tagRECT rcBand;
};

/* 1131 */
struct _IMAGE_BOUND_FORWARDER_REF
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 Reserved;
};

/* 1132 */
struct _WIN_TRUST_SUBJECT_FILE
{
  void *hFile;
  const unsigned __int16 *lpPath;
};

/* 1133 */
struct _HD_ITEMA
{
  unsigned int mask;
  int cxy;
  char *pszText;
  HBITMAP__ *hbm;
  int cchTextMax;
  int fmt;
  int lParam;
  int iImage;
  int iOrder;
};

/* 1134 */
struct tagNMHEADERA
{
  tagNMHDR hdr;
  int iItem;
  int iButton;
  _HD_ITEMA *pitem;
};

/* 1135 */
struct _NM_UPDOWN
{
  tagNMHDR hdr;
  int iPos;
  int iDelta;
};

/* 1136 */
struct tagHELPINFO
{
  unsigned int cbSize;
  int iContextType;
  int iCtrlId;
  void *hItemHandle;
  unsigned int dwContextId;
  tagPOINT MousePos;
};

/* 1137 */
struct tagMSGBOXPARAMSA
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const char *lpszText;
  const char *lpszCaption;
  unsigned int dwStyle;
  const char *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 1138 */
struct DLGITEMTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
  unsigned __int16 id;
};

/* 1139 */
struct tagENUMLOGFONTEXW
{
  tagLOGFONTW elfLogFont;
  unsigned __int16 elfFullName[64];
  unsigned __int16 elfStyle[32];
  unsigned __int16 elfScript[32];
};

/* 1140 */
struct tagRGBTRIPLE
{
  char rgbtBlue;
  char rgbtGreen;
  char rgbtRed;
};

/* 1141 */
struct tagNMLVGETINFOTIPA
{
  tagNMHDR hdr;
  unsigned int dwFlags;
  char *pszText;
  int cchTextMax;
  int iItem;
  int iSubItem;
  int lParam;
};

/* 1142 */
#pragma pack(push, 4)
struct _TAPE_WRITE_MARKS
{
  unsigned int Type;
  unsigned int Count;
  char Immediate;
};
#pragma pack(pop)

/* 1143 */
struct tagABORTPATH
{
  tagEMR emr;
};

/* 1144 */
#pragma pack(push, 4)
struct _IMAGE_DEBUG_MISC
{
  unsigned int DataType;
  unsigned int Length;
  char Unicode;
  char Reserved[3];
  char Data[1];
};
#pragma pack(pop)

/* 1145 */
struct HMENU__
{
  int unused;
};

/* 1146 */
struct tagCREATESTRUCTW
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const unsigned __int16 *lpszName;
  const unsigned __int16 *lpszClass;
  unsigned int dwExStyle;
};

/* 1147 */
struct tagNMLVGETINFOTIPW
{
  tagNMHDR hdr;
  unsigned int dwFlags;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iItem;
  int iSubItem;
  int lParam;
};

/* 1148 */
struct tagNMLVODSTATECHANGE
{
  tagNMHDR hdr;
  int iFrom;
  int iTo;
  unsigned int uNewState;
  unsigned int uOldState;
};

/* 1149 */
struct tagEMRSELECTCLIPPATH
{
  tagEMR emr;
  unsigned int iMode;
};

/* 1150 */
struct _ACE_HEADER
{
  char AceType;
  char AceFlags;
  unsigned __int16 AceSize;
};

/* 1151 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1152 */
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int FuncStart;
  int _bf4;
};

/* 1153 */
struct tagNMSELCHANGE
{
  tagNMHDR nmhdr;
  _SYSTEMTIME stSelStart;
  _SYSTEMTIME stSelEnd;
};

/* 1154 */
struct MENUITEMTEMPLATEHEADER
{
  unsigned __int16 versionNumber;
  unsigned __int16 offset;
};

/* 1155 */
struct _HD_ITEMW
{
  unsigned int mask;
  int cxy;
  unsigned __int16 *pszText;
  HBITMAP__ *hbm;
  int cchTextMax;
  int fmt;
  int lParam;
  int iImage;
  int iOrder;
};

/* 1156 */
struct tagNMHEADERW
{
  tagNMHDR hdr;
  int iItem;
  int iButton;
  _HD_ITEMW *pitem;
};

/* 1157 */
struct _REPARSE_DATA_BUFFER::__unnamed::__unnamed
{
  unsigned __int16 SubstituteNameOffset;
  unsigned __int16 SubstituteNameLength;
  unsigned __int16 PrintNameOffset;
  unsigned __int16 PrintNameLength;
  unsigned __int16 PathBuffer[1];
};

/* 1158 */
union $47709CB64FDF7B86F00828F5508DA2CC
{
  _REPARSE_DATA_BUFFER::__unnamed::__unnamed SymbolicLinkReparseBuffer;
  _REPARSE_DATA_BUFFER::__unnamed::__unnamed MountPointReparseBuffer;
  _REPARSE_DATA_BUFFER::__unnamed::__unnamed GenericReparseBuffer;
};

/* 1159 */
#pragma pack(push, 4)
struct _REPARSE_DATA_BUFFER
{
  unsigned int ReparseTag;
  unsigned __int16 ReparseDataLength;
  unsigned __int16 Reserved;
  $47709CB64FDF7B86F00828F5508DA2CC ___u3;
};
#pragma pack(pop)

/* 1160 */
struct tagEMRPOLYLINE
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
};

/* 1161 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wReserved[2];
};

/* 1162 */
struct _cpinfoexA
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  char CodePageName[260];
};

/* 1163 */
struct tagEMRSELECTCOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
};

/* 1164 */
struct tagLVKEYDOWN
{
  tagNMHDR hdr;
  unsigned __int16 wVKey;
  unsigned int flags;
};

/* 1165 */
struct _IMAGE_RESOURCE_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 NumberOfNamedEntries;
  unsigned __int16 NumberOfIdEntries;
};

/* 1166 */
struct tagWINDOWPOS
{
  HWND__ *hwnd;
  HWND__ *hwndInsertAfter;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int flags;
};

/* 1167 */
struct TBREPLACEBITMAP
{
  HINSTANCE__ *hInstOld;
  unsigned int nIDOld;
  HINSTANCE__ *hInstNew;
  unsigned int nIDNew;
  int nButtons;
};

/* 1168 */
struct tagCREATESTRUCTA
{
  void *lpCreateParams;
  HINSTANCE__ *hInstance;
  HMENU__ *hMenu;
  HWND__ *hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  int style;
  const char *lpszName;
  const char *lpszClass;
  unsigned int dwExStyle;
};

/* 1169 */
const struct DLGTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  unsigned __int16 cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};

/* 1170 */
const struct _PROPSHEETPAGEA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $AC4A98A654C73E0D92BD111D018F7C7D ___u3;
  $38D27E2916670D557DDA4F5BAE59D3E1 ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
  const char *pszHeaderTitle;
  const char *pszHeaderSubTitle;
};

/* 1171 */
union $AC4A98A654C73E0D92BD111D018F7C7D
{
  const char *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 1172 */
union $38D27E2916670D557DDA4F5BAE59D3E1
{
  HICON__ *hIcon;
  const char *pszIcon;
};

/* 1173 */
union $E3CAD8411F77256CCB020CE77D197F57
{
  unsigned int nStartPage;
  const char *pStartPage;
};

/* 1174 */
union $52F8353F80B3B4D68FE72AEF1DCAE394
{
  _PROPSHEETPAGEA *ppsp;
  struct _PSP **phpage;
};

/* 1175 */
struct _AFX_OLDPROPSHEETHEADER
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $38D27E2916670D557DDA4F5BAE59D3E1 ___u4;
  const char *pszCaption;
  unsigned int nPages;
  $E3CAD8411F77256CCB020CE77D197F57 ___u7;
  $52F8353F80B3B4D68FE72AEF1DCAE394 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
};

/* 1176 */
struct _IMAGE_FUNCTION_ENTRY64
{
  unsigned __int64 StartingAddress;
  unsigned __int64 EndingAddress;
  unsigned __int64 EndOfPrologue;
};

/* 1177 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 1178 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 1179 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 1180 */
struct _UNIVERSAL_NAME_INFOA
{
  char *lpUniversalName;
};

/* 1181 */
#pragma pack(push, 4)
struct tagEMRINVERTRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  char RgnData[1];
};
#pragma pack(pop)

/* 1182 */
struct tagEMRFILLPATH
{
  tagEMR emr;
  _RECTL rclBounds;
};

/* 1183 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 1184 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 1185 */
struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY
{
  _GUID *SubjectType;
  void *Subject;
};

/* 1186 */
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int NumberOfSections;
  unsigned int ExportedNamesSize;
  unsigned int DebugDirectorySize;
  unsigned int SectionAlignment;
  unsigned int Reserved[2];
};

/* 1187 */
struct _PROPSHEETPAGEW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $C7D532A46EB8B63D50BB2AE4E11F99BC ___u3;
  $9ED052B4A6ADA20E21D6C6175A26FC2B ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
};

/* 1188 */
union $C7D532A46EB8B63D50BB2AE4E11F99BC
{
  const unsigned __int16 *pszTemplate;
  DLGTEMPLATE *pResource;
};

/* 1189 */
union $9ED052B4A6ADA20E21D6C6175A26FC2B
{
  HICON__ *hIcon;
  const unsigned __int16 *pszIcon;
};

/* 1190 */
struct _REPARSE_POINT_INFORMATION
{
  unsigned __int16 ReparseDataLength;
  unsigned __int16 UnparsedNameLength;
};

/* 1191 */
struct _STARTUPINFOA
{
  unsigned int cb;
  char *lpReserved;
  char *lpDesktop;
  char *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 1192 */
struct _UNIVERSAL_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
};

/* 1193 */
struct tagMULTIKEYHELPW
{
  unsigned int mkSize;
  unsigned __int16 mkKeylist;
  unsigned __int16 szKeyphrase[1];
};

/* 1194 */
struct tagACCESSTIMEOUT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iTimeOutMSec;
};

/* 1195 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 1196 */
struct _IMAGE_TLS_DIRECTORY32
{
  unsigned int StartAddressOfRawData;
  unsigned int EndAddressOfRawData;
  unsigned int *AddressOfIndex;
  void (__stdcall **AddressOfCallBacks)(void *, unsigned int, void *);
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 1197 */
struct tagEMREOF
{
  tagEMR emr;
  unsigned int nPalEntries;
  unsigned int offPalEntries;
  unsigned int nSizeLast;
};

/* 1198 */
struct tagDEBUGHOOKINFO
{
  unsigned int idThread;
  unsigned int idThreadInstaller;
  int lParam;
  unsigned int wParam;
  int code;
};

/* 1199 */
struct tagCOLORADJUSTMENT
{
  unsigned __int16 caSize;
  unsigned __int16 caFlags;
  unsigned __int16 caIlluminantIndex;
  unsigned __int16 caRedGamma;
  unsigned __int16 caGreenGamma;
  unsigned __int16 caBlueGamma;
  unsigned __int16 caReferenceBlack;
  unsigned __int16 caReferenceWhite;
  __int16 caContrast;
  __int16 caBrightness;
  __int16 caColorfulness;
  __int16 caRedGreenTint;
};

/* 1200 */
struct tagEMRSETCOLORADJUSTMENT
{
  tagEMR emr;
  tagCOLORADJUSTMENT ColorAdjustment;
};

/* 1201 */
struct tagEMRRESIZEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int cEntries;
};

/* 1202 */
struct _IMAGE_TLS_DIRECTORY64
{
  unsigned __int64 StartAddressOfRawData;
  unsigned __int64 EndAddressOfRawData;
  unsigned int *AddressOfIndex;
  void (__stdcall **AddressOfCallBacks)(void *, unsigned int, void *);
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 1203 */
struct tagNMIPADDRESS
{
  tagNMHDR hdr;
  int iField;
  int iValue;
};

/* 1204 */
struct tagHARDWAREHOOKSTRUCT
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
};

/* 1205 */
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int ExceptionHandler;
  unsigned int HandlerData;
  unsigned int PrologEndAddress;
};

/* 1206 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/* 1207 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 1208 */
struct _IMAGE_ROM_HEADERS
{
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

/* 1209 */
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned __int64 BeginAddress;
  unsigned __int64 EndAddress;
  unsigned __int64 ExceptionHandler;
  unsigned __int64 HandlerData;
  unsigned __int64 PrologEndAddress;
};

/* 1210 */
struct tagENUMLOGFONTEXA
{
  tagLOGFONTA elfLogFont;
  char elfFullName[64];
  char elfStyle[32];
  char elfScript[32];
};

/* 1211 */
#pragma pack(push, 4)
struct tagMULTIKEYHELPA
{
  unsigned int mkSize;
  char mkKeylist;
  char szKeyphrase[1];
};
#pragma pack(pop)

/* 1212 */
union _CHAR_INFO::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 1213 */
struct _CHAR_INFO
{
  _CHAR_INFO::__unnamed Char;
  unsigned __int16 Attributes;
};

/* 1214 */
struct _DOCINFOA
{
  int cbSize;
  const char *lpszDocName;
  const char *lpszOutput;
  const char *lpszDatatype;
  unsigned int fwType;
};

/* 1215 */
struct tagEMRSETARCDIRECTION
{
  tagEMR emr;
  unsigned int iArcDirection;
};

/* 1216 */
struct tagGCP_RESULTSW
{
  unsigned int lStructSize;
  unsigned __int16 *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 1217 */
struct tagUSEROBJECTFLAGS
{
  int fInherit;
  int fReserved;
  unsigned int dwFlags;
};

/* 1218 */
struct _OBJECT_TYPE_LIST
{
  unsigned __int16 Level;
  unsigned __int16 Sbz;
  _GUID *ObjectType;
};

/* 1219 */
struct _DRAWPATRECT
{
  tagPOINT ptPosition;
  tagPOINT ptSize;
  unsigned __int16 wStyle;
  unsigned __int16 wPattern;
};

/* 1220 */
struct tagLVBKIMAGEA
{
  unsigned int ulFlags;
  HBITMAP__ *hbm;
  char *pszImage;
  unsigned int cchImageMax;
  int xOffsetPercent;
  int yOffsetPercent;
};

/* 1221 */
struct _COLORMAP
{
  unsigned int from;
  unsigned int to;
};

/* 1222 */
struct tagNMTREEVIEWW
{
  tagNMHDR hdr;
  unsigned int action;
  tagTVITEMW itemOld;
  tagTVITEMW itemNew;
  tagPOINT ptDrag;
};

/* 1223 */
struct _GRADIENT_RECT
{
  unsigned int UpperLeft;
  unsigned int LowerRight;
};

/* 1224 */
struct tagNMTREEVIEWA
{
  tagNMHDR hdr;
  unsigned int action;
  tagTVITEMA itemOld;
  tagTVITEMA itemNew;
  tagPOINT ptDrag;
};

/* 1225 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1226 */
struct tagLVBKIMAGEW
{
  unsigned int ulFlags;
  HBITMAP__ *hbm;
  unsigned __int16 *pszImage;
  unsigned int cchImageMax;
  int xOffsetPercent;
  int yOffsetPercent;
};

/* 1227 */
#pragma pack(push, 2)
struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  unsigned __int16 Length;
  char NameString[1];
};
#pragma pack(pop)

/* 1228 */
struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY
{
  void *hFile;
  const unsigned __int16 *lpPath;
  const unsigned __int16 *lpDisplayName;
};

/* 1229 */
struct _FIXED
{
  unsigned __int16 fract;
  __int16 value;
};

/* 1230 */
struct tagPOINTFX
{
  _FIXED x;
  _FIXED y;
};

/* 1231 */
struct NMPGCALCSIZE
{
  tagNMHDR hdr;
  unsigned int dwFlag;
  int iWidth;
  int iHeight;
};

/* 1232 */
struct tagGCP_RESULTSA
{
  unsigned int lStructSize;
  char *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 1233 */
struct tagREBARINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  struct _IMAGELIST *himl;
};

/* 1234 */
struct _MESSAGE_RESOURCE_BLOCK
{
  unsigned int LowId;
  unsigned int HighId;
  unsigned int OffsetToEntries;
};

/* 1235 */
struct _MESSAGE_RESOURCE_DATA
{
  unsigned int NumberOfBlocks;
  _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 1236 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/* 1237 */
union $DB6CAC1128589EC56A5630928729CDDF
{
  $5ACE225D4D14CE0550A9F5A217E306C5 _s0;
  _POINTL dmPosition;
};

/* 1238 */
struct _devicemodeW
{
  unsigned __int16 dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $DB6CAC1128589EC56A5630928729CDDF ___u6;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  unsigned __int16 dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  unsigned int dmDisplayFlags;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
};

/* 1239 */
struct tagLVFINDINFOW
{
  unsigned int flags;
  const unsigned __int16 *psz;
  int lParam;
  tagPOINT pt;
  unsigned int vkDirection;
};

/* 1240 */
struct _NMTBCUSTOMDRAW
{
  tagNMCUSTOMDRAWINFO nmcd;
  HBRUSH__ *hbrMonoDither;
  HBRUSH__ *hbrLines;
  HPEN__ *hpenLines;
  unsigned int clrText;
  unsigned int clrMark;
  unsigned int clrTextHighlight;
  unsigned int clrBtnFace;
  unsigned int clrBtnHighlight;
  unsigned int clrHighlightHotTrack;
  tagRECT rcText;
  int nStringBkMode;
  int nHLStringBkMode;
};

/* 1241 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  char Revision;
  char Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 1242 */
struct _NETRESOURCEA
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  char *lpLocalName;
  char *lpRemoteName;
  char *lpComment;
  char *lpProvider;
};

/* 1243 */
struct _CONNECTDLGSTRUCTA
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEA *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 1244 */
struct _OFSTRUCT
{
  char cBytes;
  char fFixedDisk;
  unsigned __int16 nErrCode;
  unsigned __int16 Reserved1;
  unsigned __int16 Reserved2;
  char szPathName[128];
};

/* 1245 */
struct tagEMRSELECTPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
};

/* 1246 */
struct _HD_LAYOUT
{
  tagRECT *prc;
  tagWINDOWPOS *pwpos;
};

/* 1247 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 1248 */
struct tagLVDISPINFO
{
  tagNMHDR hdr;
  tagLVITEMA item;
};

/* 1249 */
struct _NETRESOURCEW
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned __int16 *lpComment;
  unsigned __int16 *lpProvider;
};

/* 1250 */
struct _CONNECTDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEW *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 1251 */
struct tagEMRSELECTOBJECT
{
  tagEMR emr;
  unsigned int ihObject;
};

/* 1252 */
struct tagMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 *dwTypeData;
  unsigned int cch;
};

/* 1253 */
struct tagTBADDBITMAP
{
  HINSTANCE__ *hInst;
  unsigned int nID;
};

/* 1254 */
struct tagLVDISPINFOW
{
  tagNMHDR hdr;
  tagLVITEMW item;
};

/* 1255 */
struct _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed
{
  unsigned __int16 Linenumber;
  unsigned __int16 Size;
};

/* 1256 */
union _IMAGE_AUX_SYMBOL::__unnamed::__unnamed
{
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed LnSz;
  unsigned int TotalSize;
};

/* 1257 */
struct _IMAGE_AUX_SYMBOL::__unnamed
{
  unsigned int TagIndex;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed Misc;
  _IMAGE_AUX_SYMBOL::__unnamed::__unnamed FcnAry;
  __declspec(align(8)) unsigned __int16 TvIndex;
};

/* 1258 */
union _IMAGE_AUX_SYMBOL
{
  _IMAGE_AUX_SYMBOL::__unnamed Sym;
  _IMAGE_AUX_SYMBOL::__unnamed File;
  _IMAGE_AUX_SYMBOL::__unnamed Section;
};

/* 1259 */
struct TBINSERTMARK
{
  int iButton;
  unsigned int dwFlags;
};

/* 1260 */
struct _SID_IDENTIFIER_AUTHORITY
{
  char Value[6];
};

/* 1261 */
struct _SID
{
  char Revision;
  char SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 1262 */
struct NMPGSCROLL
{
  tagNMHDR hdr;
  unsigned __int16 fwKeys;
  tagRECT rcParent;
  int iDir;
  int iXpos;
  int iYpos;
  int iScroll;
};

/* 1263 */
struct _TBBUTTON
{
  int iBitmap;
  int idCommand;
  char fsState;
  char fsStyle;
  char bReserved[2];
  unsigned int dwData;
  int iString;
};

/* 1264 */
struct tagNMTOOLBARW
{
  tagNMHDR hdr;
  int iItem;
  _TBBUTTON tbButton;
  int cchText;
  unsigned __int16 *pszText;
};

/* 1265 */
struct _IMAGE_VXD_HEADER
{
  unsigned __int16 e32_magic;
  char e32_border;
  char e32_worder;
  unsigned int e32_level;
  unsigned __int16 e32_cpu;
  unsigned __int16 e32_os;
  unsigned int e32_ver;
  unsigned int e32_mflags;
  unsigned int e32_mpages;
  unsigned int e32_startobj;
  unsigned int e32_eip;
  unsigned int e32_stackobj;
  unsigned int e32_esp;
  unsigned int e32_pagesize;
  unsigned int e32_lastpagesize;
  unsigned int e32_fixupsize;
  unsigned int e32_fixupsum;
  unsigned int e32_ldrsize;
  unsigned int e32_ldrsum;
  unsigned int e32_objtab;
  unsigned int e32_objcnt;
  unsigned int e32_objmap;
  unsigned int e32_itermap;
  unsigned int e32_rsrctab;
  unsigned int e32_rsrccnt;
  unsigned int e32_restab;
  unsigned int e32_enttab;
  unsigned int e32_dirtab;
  unsigned int e32_dircnt;
  unsigned int e32_fpagetab;
  unsigned int e32_frectab;
  unsigned int e32_impmod;
  unsigned int e32_impmodcnt;
  unsigned int e32_impproc;
  unsigned int e32_pagesum;
  unsigned int e32_datapage;
  unsigned int e32_preload;
  unsigned int e32_nrestab;
  unsigned int e32_cbnrestab;
  unsigned int e32_nressum;
  unsigned int e32_autodata;
  unsigned int e32_debuginfo;
  unsigned int e32_debuglen;
  unsigned int e32_instpreload;
  unsigned int e32_instdemand;
  unsigned int e32_heapsize;
  char e32_res3[12];
  unsigned int e32_winresoff;
  unsigned int e32_winreslen;
  unsigned __int16 e32_devid;
  unsigned __int16 e32_ddkver;
};

/* 1266 */
struct _DCB
{
  unsigned int DCBlength;
  unsigned int BaudRate;
  int _bf8;
  unsigned __int16 wReserved;
  unsigned __int16 XonLim;
  unsigned __int16 XoffLim;
  char ByteSize;
  char Parity;
  char StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  unsigned __int16 wReserved1;
};

/* 1267 */
#pragma pack(push, 4)
struct _COMMCONFIG
{
  unsigned int dwSize;
  unsigned __int16 wVersion;
  unsigned __int16 wReserved;
  _DCB dcb;
  unsigned int dwProviderSubType;
  unsigned int dwProviderOffset;
  unsigned int dwProviderSize;
  unsigned __int16 wcProviderData[1];
};
#pragma pack(pop)

/* 1268 */
struct tagEMRPOLYPOLYLINE16
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int nPolys;
  unsigned int cpts;
  unsigned int aPolyCounts[1];
  tagPOINTS apts[1];
};

/* 1269 */
struct tagICONMETRICSA
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTA lfFont;
};

/* 1270 */
struct tagTBSAVEPARAMSA
{
  HKEY__ *hkr;
  const char *pszSubKey;
  const char *pszValueName;
};

/* 1271 */
struct _devicemodeA
{
  char dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $DB6CAC1128589EC56A5630928729CDDF ___u6;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  char dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  unsigned int dmDisplayFlags;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
};

/* 1272 */
struct tagTBSAVEPARAMSW
{
  HKEY__ *hkr;
  const unsigned __int16 *pszSubKey;
  const unsigned __int16 *pszValueName;
};

/* 1273 */
struct tagMENUITEMINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  char *dwTypeData;
  unsigned int cch;
};

/* 1274 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/* 1275 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  _COORD dwSize;
};

/* 1276 */
struct tagICONMETRICSW
{
  unsigned int cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  tagLOGFONTW lfFont;
};

/* 1277 */
struct tagCIEXYZ
{
  int ciexyzX;
  int ciexyzY;
  int ciexyzZ;
};

/* 1278 */
struct tagICEXYZTRIPLE
{
  tagCIEXYZ ciexyzRed;
  tagCIEXYZ ciexyzGreen;
  tagCIEXYZ ciexyzBlue;
};

/* 1279 */
struct tagLOGCOLORSPACEA
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  char lcsFilename[260];
};

/* 1280 */
struct _TRIVERTEX
{
  int x;
  int y;
  unsigned __int16 Red;
  unsigned __int16 Green;
  unsigned __int16 Blue;
  unsigned __int16 Alpha;
};

/* 1281 */
struct _ACL_SIZE_INFORMATION
{
  unsigned int AceCount;
  unsigned int AclBytesInUse;
  unsigned int AclBytesFree;
};

/* 1282 */
struct _GLYPHMETRICSFLOAT
{
  float gmfBlackBoxX;
  float gmfBlackBoxY;
  _POINTFLOAT gmfptGlyphOrigin;
  float gmfCellIncX;
  float gmfCellIncY;
};

/* 1283 */
struct tagNMTOOLBARA
{
  tagNMHDR hdr;
  int iItem;
  _TBBUTTON tbButton;
  int cchText;
  char *pszText;
};

/* 1284 */
struct tagSOUNDSENTRYA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  char *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 1285 */
struct tagNMOBJECTNOTIFY
{
  tagNMHDR hdr;
  int iItem;
  const void *piid;
  void *pObject;
  int hResult;
  unsigned int dwFlags;
};

/* 1286 */
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  unsigned __int16 Length;
  unsigned __int16 NameString[1];
};

/* 1287 */
struct tagBITMAPINFO
{
  tagBITMAPINFOHEADER bmiHeader;
  tagRGBQUAD bmiColors[1];
};

/* 1288 */
struct tagEMREXTFLOODFILL
{
  tagEMR emr;
  _POINTL ptlStart;
  unsigned int crColor;
  unsigned int iMode;
};

/* 1289 */
struct tagMSG
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
  unsigned int time;
  tagPOINT pt;
};

/* 1290 */
struct _COMMTIMEOUTS
{
  unsigned int ReadIntervalTimeout;
  unsigned int ReadTotalTimeoutMultiplier;
  unsigned int ReadTotalTimeoutConstant;
  unsigned int WriteTotalTimeoutMultiplier;
  unsigned int WriteTotalTimeoutConstant;
};

/* 1291 */
struct tagTOGGLEKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
};

/* 1292 */
struct tagSOUNDSENTRYW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iFSTextEffect;
  unsigned int iFSTextEffectMSec;
  unsigned int iFSTextEffectColorBits;
  unsigned int iFSGrafEffect;
  unsigned int iFSGrafEffectMSec;
  unsigned int iFSGrafEffectColor;
  unsigned int iWindowsEffect;
  unsigned int iWindowsEffectMSec;
  unsigned __int16 *lpszWindowsEffectDLL;
  unsigned int iWindowsEffectOrdinal;
};

/* 1293 */
struct _GRADIENT_TRIANGLE
{
  unsigned int Vertex1;
  unsigned int Vertex2;
  unsigned int Vertex3;
};

/* 1294 */
struct tagNMRBAUTOSIZE
{
  tagNMHDR hdr;
  int fChanged;
  tagRECT rcTarget;
  tagRECT rcActual;
};

/* 1295 */
union _IMAGE_LINENUMBER::__unnamed
{
  unsigned int SymbolTableIndex;
  unsigned int VirtualAddress;
};

/* 1296 */
struct _IMAGE_LINENUMBER
{
  _IMAGE_LINENUMBER::__unnamed Type;
  unsigned __int16 Linenumber;
};

/* 1297 */
struct tagEMRMODIFYWORLDTRANSFORM
{
  tagEMR emr;
  tagXFORM xform;
  unsigned int iMode;
};

/* 1298 */
struct tagEMRLINETO
{
  tagEMR emr;
  _POINTL ptl;
};

/* 1299 */
struct tagEMREXCLUDECLIPRECT
{
  tagEMR emr;
  _RECTL rclClip;
};

/* 1300 */
struct _TAPE_CREATE_PARTITION
{
  unsigned int Method;
  unsigned int Count;
  unsigned int Size;
};

/* 1301 */
struct tagLOGPALETTE
{
  unsigned __int16 palVersion;
  unsigned __int16 palNumEntries;
  tagPALETTEENTRY palPalEntry[1];
};

/* 1302 */
struct tagEMRCREATEPALETTE
{
  tagEMR emr;
  unsigned int ihPal;
  tagLOGPALETTE lgpl;
};

/* 1303 */
struct tagEMRCREATEBRUSHINDIRECT
{
  tagEMR emr;
  unsigned int ihBrush;
  tagLOGBRUSH lb;
};

/* 1304 */
#pragma pack(push, 4)
struct tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};
#pragma pack(pop)

/* 1305 */
#pragma pack(push, 2)
struct _OUTLINETEXTMETRICW
{
  unsigned int otmSize;
  tagTEXTMETRICW otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};
#pragma pack(pop)

/* 1306 */
struct tagBITMAPCOREHEADER
{
  unsigned int bcSize;
  unsigned __int16 bcWidth;
  unsigned __int16 bcHeight;
  unsigned __int16 bcPlanes;
  unsigned __int16 bcBitCount;
};

/* 1307 */
struct tagSERIALKEYSA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszActivePort;
  char *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 1308 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/* 1309 */
struct _OBJECTID
{
  _GUID Lineage;
  unsigned int Uniquifier;
};

/* 1310 */
struct tagHIGHCONTRASTW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszDefaultScheme;
};

/* 1311 */
struct tagCOMBOBOXEXITEMW
{
  unsigned int mask;
  int iItem;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int iOverlay;
  int iIndent;
  int lParam;
};

/* 1312 */
struct NMCOMBOBOXEXW
{
  tagNMHDR hdr;
  tagCOMBOBOXEXITEMW ceItem;
};

/* 1313 */
struct tagEMRANGLEARC
{
  tagEMR emr;
  _POINTL ptlCenter;
  unsigned int nRadius;
  float eStartAngle;
  float eSweepAngle;
};

/* 1314 */
struct _COMSTAT
{
  int _bf0;
  unsigned int cbInQue;
  unsigned int cbOutQue;
};

/* 1315 */
struct tagWNDCLASSA
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const char *lpszMenuName;
  const char *lpszClassName;
};

/* 1316 */
struct _TOKEN_DEFAULT_DACL
{
  _ACL *DefaultDacl;
};

/* 1317 */
struct _currencyfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  char *lpCurrencySymbol;
};

/* 1318 */
struct tagHIGHCONTRASTA
{
  unsigned int cbSize;
  unsigned int dwFlags;
  char *lpszDefaultScheme;
};

/* 1319 */
struct tagLVCOLUMNA
{
  unsigned int mask;
  int fmt;
  int cx;
  char *pszText;
  int cchTextMax;
  int iSubItem;
  int iImage;
  int iOrder;
};

/* 1320 */
#pragma pack(push, 4)
struct tagTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};
#pragma pack(pop)

/* 1321 */
#pragma pack(push, 2)
struct _OUTLINETEXTMETRICA
{
  unsigned int otmSize;
  tagTEXTMETRICA otmTextMetrics;
  char otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};
#pragma pack(pop)

/* 1322 */
struct tagMDICREATESTRUCTA
{
  const char *szClass;
  const char *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 1323 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/* 1324 */
struct _TOKEN_GROUPS
{
  unsigned int GroupCount;
  _SID_AND_ATTRIBUTES Groups[1];
};

/* 1325 */
struct tagNMHDDISPINFOA
{
  tagNMHDR hdr;
  int iItem;
  unsigned int mask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
};

/* 1326 */
struct MENUITEMTEMPLATE
{
  unsigned __int16 mtOption;
  unsigned __int16 mtID;
  unsigned __int16 mtString[1];
};

/* 1327 */
#pragma pack(push, 4)
struct tagNEWTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
  unsigned int ntmFlags;
  unsigned int ntmSizeEM;
  unsigned int ntmCellHeight;
  unsigned int ntmAvgWidth;
};
#pragma pack(pop)

/* 1328 */
struct tagNEWTEXTMETRICEXW
{
  tagNEWTEXTMETRICW ntmTm;
  tagFONTSIGNATURE ntmFontSig;
};

/* 1329 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/* 1330 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/* 1331 */
struct _currencyfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  unsigned __int16 *lpCurrencySymbol;
};

/* 1332 */
struct tagNMDAYSTATE
{
  tagNMHDR nmhdr;
  _SYSTEMTIME stStart;
  int cDayState;
  unsigned int *prgDayState;
};

/* 1333 */
struct tagEMRSETTEXTCOLOR
{
  tagEMR emr;
  unsigned int crColor;
};

/* 1334 */
struct tagNMHDDISPINFOW
{
  tagNMHDR hdr;
  int iItem;
  unsigned int mask;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
};

/* 1335 */
struct tagMDICREATESTRUCTW
{
  const unsigned __int16 *szClass;
  const unsigned __int16 *szTitle;
  void *hOwner;
  int x;
  int y;
  int cx;
  int cy;
  unsigned int style;
  int lParam;
};

/* 1336 */
struct HMETAFILE__
{
  int unused;
};

/* 1337 */
struct tagMETAFILEPICT
{
  int mm;
  int xExt;
  int yExt;
  HMETAFILE__ *hMF;
};

/* 1338 */
struct tagEMRELLIPSE
{
  tagEMR emr;
  _RECTL rclBox;
};

/* 1339 */
struct _cpinfoexW
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  unsigned __int16 CodePageName[260];
};

/* 1340 */
struct tagNMTTDISPINFOW
{
  tagNMHDR hdr;
  unsigned __int16 *lpszText;
  unsigned __int16 szText[80];
  HINSTANCE__ *hinst;
  unsigned int uFlags;
  int lParam;
};

/* 1341 */
struct _DOCINFOW
{
  int cbSize;
  const unsigned __int16 *lpszDocName;
  const unsigned __int16 *lpszOutput;
  const unsigned __int16 *lpszDatatype;
  unsigned int fwType;
};

/* 1342 */
struct _ImageArchitectureEntry
{
  unsigned int FixupInstRVA;
  unsigned int NewInst;
};

/* 1343 */
struct tagCOLORSCHEME
{
  unsigned int dwSize;
  unsigned int clrBtnHighlight;
  unsigned int clrBtnShadow;
};

/* 1344 */
struct tagLVCOLUMNW
{
  unsigned int mask;
  int fmt;
  int cx;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iSubItem;
  int iImage;
  int iOrder;
};

/* 1345 */
#pragma pack(push, 4)
struct tagEMRSETICMPROFILE
{
  tagEMR emr;
  unsigned int dwFlags;
  unsigned int cbName;
  unsigned int cbData;
  char Data[1];
};
#pragma pack(pop)

/* 1346 */
struct _IMAGE_FUNCTION_ENTRY
{
  unsigned int StartingAddress;
  unsigned int EndingAddress;
  unsigned int EndOfPrologue;
};

/* 1347 */
struct tagDIBSECTION
{
  tagBITMAP dsBm;
  tagBITMAPINFOHEADER dsBmih;
  unsigned int dsBitfields[3];
  void *dshSection;
  unsigned int dsOffset;
};

/* 1348 */
struct tagEMRSETMITERLIMIT
{
  tagEMR emr;
  float eMiterLimit;
};

/* 1349 */
struct _FPO_DATA
{
  unsigned int ulOffStart;
  unsigned int cbProcSize;
  unsigned int cdwLocals;
  unsigned __int16 cdwParams;
  __int16 _bf14;
};

/* 1350 */
struct tagCWPRETSTRUCT
{
  int lResult;
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 1351 */
struct _IMAGEINFO
{
  HBITMAP__ *hbmImage;
  HBITMAP__ *hbmMask;
  int Unused1;
  int Unused2;
  tagRECT rcImage;
};

/* 1352 */
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  _LARGE_INTEGER PerProcessUserTimeLimit;
  _LARGE_INTEGER PerJobUserTimeLimit;
  unsigned int LimitFlags;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int ActiveProcessLimit;
  unsigned int Affinity;
  unsigned int PriorityClass;
};

/* 1353 */
struct value_entA
{
  char *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 1354 */
struct _DISPLAY_DEVICEW
{
  unsigned int cb;
  unsigned __int16 DeviceName[32];
  unsigned __int16 DeviceString[128];
  unsigned int StateFlags;
};

/* 1355 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 1356 */
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  unsigned int SecurityLimitFlags;
  void *JobToken;
  _TOKEN_GROUPS *SidsToDisable;
  _TOKEN_PRIVILEGES *PrivilegesToDelete;
  _TOKEN_GROUPS *RestrictedSids;
};

/* 1357 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 1358 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 1359 */
struct tagMSGBOXPARAMSW
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszText;
  const unsigned __int16 *lpszCaption;
  unsigned int dwStyle;
  const unsigned __int16 *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 1360 */
struct tagNMTTDISPIFNOA
{
  tagNMHDR hdr;
  char *lpszText;
  char szText[80];
  HINSTANCE__ *hinst;
  unsigned int uFlags;
  int lParam;
};

/* 1361 */
struct tagNCCALCSIZE_PARAMS
{
  tagRECT rgrc[3];
  tagWINDOWPOS *lppos;
};

/* 1362 */
struct _TOKEN_STATISTICS
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LARGE_INTEGER ExpirationTime;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int GroupCount;
  unsigned int PrivilegeCount;
  _LUID ModifiedId;
};

/* 1363 */
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  _LARGE_INTEGER TotalUserTime;
  _LARGE_INTEGER TotalKernelTime;
  _LARGE_INTEGER ThisPeriodTotalUserTime;
  _LARGE_INTEGER ThisPeriodTotalKernelTime;
  unsigned int TotalPageFaultCount;
  unsigned int TotalProcesses;
  unsigned int ActiveProcesses;
  unsigned int TotalTerminatedProcesses;
};

/* 1364 */
#pragma pack(push, 4)
struct tagEMRPOLYDRAW
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cptl;
  _POINTL aptl[1];
  char abTypes[1];
};
#pragma pack(pop)

/* 1365 */
struct tagDELETEITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  HWND__ *hwndItem;
  unsigned int itemData;
};

/* 1366 */
struct tagCOMBOBOXEXITEMA
{
  unsigned int mask;
  int iItem;
  char *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int iOverlay;
  int iIndent;
  int lParam;
};

/* 1367 */
struct NMCOMBOBOXEXA
{
  tagNMHDR hdr;
  tagCOMBOBOXEXITEMA ceItem;
};

/* 1368 */
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  unsigned int UIRestrictionsClass;
};

/* 1369 */
struct tagEXTLOGPEN
{
  unsigned int elpPenStyle;
  unsigned int elpWidth;
  unsigned int elpBrushStyle;
  unsigned int elpColor;
  int elpHatch;
  unsigned int elpNumEntries;
  unsigned int elpStyleEntry[1];
};

/* 1370 */
struct tagEMREXTCREATEPEN
{
  tagEMR emr;
  unsigned int ihPen;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
  tagEXTLOGPEN elp;
};

/* 1371 */
struct _ACCESS_DENIED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1372 */
struct tagMEASUREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemWidth;
  unsigned int itemHeight;
  unsigned int itemData;
};

/* 1373 */
struct _DISPLAY_DEVICEA
{
  unsigned int cb;
  char DeviceName[32];
  char DeviceString[128];
  unsigned int StateFlags;
};

/* 1374 */
struct tagSERIALKEYSW
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned __int16 *lpszActivePort;
  unsigned __int16 *lpszPort;
  unsigned int iBaudRate;
  unsigned int iPortState;
  unsigned int iActive;
};

/* 1375 */
struct tagWNDCLASSW
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
};

/* 1376 */
struct tagDRAGLISTINFO
{
  unsigned int uNotification;
  HWND__ *hWnd;
  tagPOINT ptCursor;
};

/* 1377 */
struct tagNONCLIENTMETRICSA
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTA lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTA lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTA lfMenuFont;
  tagLOGFONTA lfStatusFont;
  tagLOGFONTA lfMessageFont;
};

/* 1378 */
#pragma pack(push, 4)
struct _RECOVERY_AGENT_INFORMATIONA
{
  unsigned int NextEntryOffset;
  unsigned int AgentNameLength;
  char AgentInformation[1];
};
#pragma pack(pop)

/* 1379 */
struct value_entW
{
  unsigned __int16 *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 1380 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1381 */
struct HPALETTE__
{
  int unused;
};

/* 1382 */
union $211957C2489B6529C73280CAC8F49A1D
{
  HBITMAP__ *hbmWatermark;
  const char *pszbmWatermark;
};

/* 1383 */
union $4EFB401038AC06A71D536A78675A2FF6
{
  HBITMAP__ *hbmHeader;
  const char *pszbmHeader;
};

/* 1384 */
struct _PROPSHEETHEADERA
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $38D27E2916670D557DDA4F5BAE59D3E1 ___u4;
  const char *pszCaption;
  unsigned int nPages;
  $E3CAD8411F77256CCB020CE77D197F57 ___u7;
  $52F8353F80B3B4D68FE72AEF1DCAE394 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $211957C2489B6529C73280CAC8F49A1D ___u10;
  HPALETTE__ *hplWatermark;
  $4EFB401038AC06A71D536A78675A2FF6 ___u12;
};

/* 1385 */
struct tagLOGCOLORSPACEW
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  unsigned __int16 lcsFilename[260];
};

/* 1386 */
struct tagEMRCREATECOLORSPACE
{
  tagEMR emr;
  unsigned int ihCS;
  tagLOGCOLORSPACEW lcs;
};

/* 1387 */
struct _AFX_OLDPROPSHEETPAGE
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $AC4A98A654C73E0D92BD111D018F7C7D ___u3;
  $38D27E2916670D557DDA4F5BAE59D3E1 ___u4;
  const char *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEA *);
  unsigned int *pcRefParent;
};

/* 1388 */
#pragma pack(push, 4)
struct _RECOVERY_AGENT_INFORMATIONW
{
  unsigned int NextEntryOffset;
  unsigned int AgentNameLength;
  unsigned __int16 AgentInformation[1];
};
#pragma pack(pop)

/* 1389 */
union $4B8A0BB10F5C4B9D8BBE7645A6566273
{
  unsigned int nStartPage;
  const unsigned __int16 *pStartPage;
};

/* 1390 */
union $9D78F02AFDF2B37A610323688E506920
{
  _PROPSHEETPAGEW *ppsp;
  struct _PSP **phpage;
};

/* 1391 */
union $7C8B5BB6CA84D3CEFC34D955643E5B37
{
  HBITMAP__ *hbmWatermark;
  const unsigned __int16 *pszbmWatermark;
};

/* 1392 */
union $402E9706293D6F04E3F7D55700D1DC06
{
  HBITMAP__ *hbmHeader;
  const unsigned __int16 *pszbmHeader;
};

/* 1393 */
struct _PROPSHEETHEADERW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $9ED052B4A6ADA20E21D6C6175A26FC2B ___u4;
  const unsigned __int16 *pszCaption;
  unsigned int nPages;
  $4B8A0BB10F5C4B9D8BBE7645A6566273 ___u7;
  $9D78F02AFDF2B37A610323688E506920 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $7C8B5BB6CA84D3CEFC34D955643E5B37 ___u10;
  HPALETTE__ *hplWatermark;
  $402E9706293D6F04E3F7D55700D1DC06 ___u12;
};

/* 1394 */
union $78510336B210488371377664116C0F56
{
  void *BaseAddress;
  unsigned __int64 BaseAddressAsUlongLong;
};

/* 1395 */
union $5EB8E8923934464557AF4B35325A81DD
{
  void *AllocationBase;
  unsigned __int64 AllocationBaseAsUlongLong;
};

/* 1396 */
struct _MEMORY_BASIC_INFORMATION_VLM
{
  $78510336B210488371377664116C0F56 ___u0;
  $5EB8E8923934464557AF4B35325A81DD ___u1;
  unsigned __int64 RegionSize;
  unsigned int AllocationProtect;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 1397 */
struct tagNMTVGETINFOTIPA
{
  tagNMHDR hdr;
  char *pszText;
  int cchTextMax;
  struct _TREEITEM *hItem;
  int lParam;
};

/* 1398 */
struct NMCBEDRAGBEGINW
{
  tagNMHDR hdr;
  int iItemid;
  unsigned __int16 szText[260];
};

/* 1399 */
struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT
{
  void *hClientToken;
  _GUID *SubjectType;
  void *Subject;
};

/* 1400 */
struct _FOCUS_EVENT_RECORD
{
  int bSetFocus;
};

/* 1401 */
struct _MAT2
{
  _FIXED eM11;
  _FIXED eM12;
  _FIXED eM21;
  _FIXED eM22;
};

/* 1402 */
struct tagTPMPARAMS
{
  unsigned int cbSize;
  tagRECT rcExclude;
};

/* 1403 */
struct tagNMTVGETINFOTIPW
{
  tagNMHDR hdr;
  unsigned __int16 *pszText;
  int cchTextMax;
  struct _TREEITEM *hItem;
  int lParam;
};

/* 1404 */
struct tagNMTBHOTITEM
{
  tagNMHDR hdr;
  int idOld;
  int idNew;
  unsigned int dwFlags;
};

/* 1405 */
struct _IMAGELISTDRAWPARAMS
{
  unsigned int cbSize;
  struct _IMAGELIST *himl;
  int i;
  HDC__ *hdcDst;
  int x;
  int y;
  int cx;
  int cy;
  int xBitmap;
  int yBitmap;
  unsigned int rgbBk;
  unsigned int rgbFg;
  unsigned int fStyle;
  unsigned int dwRop;
};

/* 1406 */
struct _IMAGE_OS2_HEADER
{
  unsigned __int16 ne_magic;
  char ne_ver;
  char ne_rev;
  unsigned __int16 ne_enttab;
  unsigned __int16 ne_cbenttab;
  int ne_crc;
  unsigned __int16 ne_flags;
  unsigned __int16 ne_autodata;
  unsigned __int16 ne_heap;
  unsigned __int16 ne_stack;
  int ne_csip;
  int ne_sssp;
  unsigned __int16 ne_cseg;
  unsigned __int16 ne_cmod;
  unsigned __int16 ne_cbnrestab;
  unsigned __int16 ne_segtab;
  unsigned __int16 ne_rsrctab;
  unsigned __int16 ne_restab;
  unsigned __int16 ne_modtab;
  unsigned __int16 ne_imptab;
  int ne_nrestab;
  unsigned __int16 ne_cmovent;
  unsigned __int16 ne_align;
  unsigned __int16 ne_cres;
  char ne_exetyp;
  char ne_flagsothers;
  unsigned __int16 ne_pretthunks;
  unsigned __int16 ne_psegrefbytes;
  unsigned __int16 ne_swaparea;
  unsigned __int16 ne_expver;
};

/* 1407 */
struct tagEMRRESTOREDC
{
  tagEMR emr;
  int iRelative;
};

/* 1408 */
struct _TOKEN_OWNER
{
  void *Owner;
};

/* 1409 */
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  unsigned int NumberOfAssignedProcesses;
  unsigned int NumberOfProcessIdsInList;
  unsigned int ProcessIdList[1];
};

/* 1410 */
struct tagFILTERKEYS
{
  unsigned int cbSize;
  unsigned int dwFlags;
  unsigned int iWaitMSec;
  unsigned int iDelayMSec;
  unsigned int iRepeatMSec;
  unsigned int iBounceMSec;
};

/* 1411 */
#pragma pack(push, 4)
struct tagEMRFRAMERGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  tagSIZE szlStroke;
  char RgnData[1];
};
#pragma pack(pop)

/* 1412 */
struct NMCBEDRAGBEGINA
{
  tagNMHDR hdr;
  int iItemid;
  char szText[260];
};

/* 1413 */
struct _SYSTEM_ALARM_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1414 */
struct tagNMDATETIMEFORMATW
{
  tagNMHDR nmhdr;
  const unsigned __int16 *pszFormat;
  _SYSTEMTIME st;
  const unsigned __int16 *pszDisplay;
  unsigned __int16 szDisplay[64];
};

/* 1415 */
struct _HD_HITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
  int iItem;
};

/* 1416 */
struct val_context
{
  int valuelen;
  void *value_context;
  void *val_buff_ptr;
};

/* 1417 */
struct provider_info
{
  unsigned int (__cdecl *pi_R0_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R0_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_1val)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int (__cdecl *pi_R3_allvals)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);
  unsigned int pi_flags;
  void *pi_key_context;
};

/* 1418 */
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  unsigned int NumberOfSymbols;
  unsigned int LvaToFirstSymbol;
  unsigned int NumberOfLinenumbers;
  unsigned int LvaToFirstLinenumber;
  unsigned int RvaToFirstByteOfCode;
  unsigned int RvaToLastByteOfCode;
  unsigned int RvaToFirstByteOfData;
  unsigned int RvaToLastByteOfData;
};

/* 1419 */
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  unsigned int EndOfJobTimeAction;
};

/* 1420 */
struct std::locale::facet
{
  std::locale::facetVtbl *vfptr;
  unsigned int _Refs;
};

/* 1421 */
struct std::locale::facetVtbl
{
  void *(__thiscall *__vecDelDtor)(std::locale::facet *this, unsigned int);
};

/* 1422 */
struct std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
{
  std::locale::facet baseclass_0;
};

/* 1423 */
struct _Collvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 1424 */
struct std::collate<unsigned short>
{
  std::locale::facet baseclass_0;
  _Collvec _Coll;
};

/* 1425 */
struct std::ios_base
{
  std::ios_baseVtbl *vfptr;
  int _State;
  int _Except;
  int _Fmtfl;
  int _Prec;
  int _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale _Loc;
  unsigned int _Stdstr;
};

/* 1426 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/* 1427 */
struct std::ios_base::_Iosarray
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/* 1428 */
struct std::ios_base::_Fnarray
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/* 1429 */
struct std::allocator<char>
{
  char dummy[1];
};

/* 1430 */
#pragma pack(push, 4)
struct std::basic_string<char,std::char_traits<char>,std::allocator<char> >
{
  std::allocator<char> allocator;
  char *_Ptr;
  unsigned int _Len;
  unsigned int _Res;
};
#pragma pack(pop)

/* 1431 */
#pragma pack(push, 4)
struct std::locale::_Locimp
{
  std::locale::facet baseclass_0;
  std::locale::facet **_Fv;
  unsigned int _Nfv;
  int _Cat;
  char _Xpar;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Name;
};
#pragma pack(pop)

/* 1432 */
struct std::locale
{
  std::locale::_Locimp *_Ptr;
};

/* 1433 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  char *_Gbeg;
  char *_Pbeg;
  char **_IGbeg;
  char **_IPbeg;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcnt;
  int _Pcnt;
  int *_IGcnt;
  int *_IPcnt;
  std::locale _Loc;
};

/* 1434 */
#pragma pack(push, 8)
struct std::fpos<int>
{
  int _Off;
  __int64 _Fpos;
  int _State;
};
#pragma pack(pop)

/* 1435 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  int (__thiscall *overflow)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, int, std::ios_base::seekdir, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, int);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/* 1436 */
struct std::basic_ostream<char,std::char_traits<char> >
{
  char dummy[56];
};

/* 1437 */
#pragma pack(push, 4)
struct std::basic_ios<char,std::char_traits<char> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<char,std::char_traits<char> > *_Sb;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};
#pragma pack(pop)

/* 1438 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  char dummy[56];
};

/* 1439 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl *vfptr;
  unsigned __int16 *_Gbeg;
  unsigned __int16 *_Pbeg;
  unsigned __int16 **_IGbeg;
  unsigned __int16 **_IPbeg;
  unsigned __int16 *_Gnext;
  unsigned __int16 *_Pnext;
  unsigned __int16 **_IGnext;
  unsigned __int16 **_IPnext;
  int _Gcnt;
  int _Pcnt;
  int *_IGcnt;
  int *_IPcnt;
  std::locale _Loc;
};

/* 1440 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned int);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  int (__thiscall *showmanyc)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  int (__thiscall *xsgetn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *xsputn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, const unsigned __int16 *, int);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, int, std::ios_base::seekdir, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *(__thiscall *setbuf)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, int);
  int (__thiscall *sync)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::locale *);
};

/* 1441 */
struct std::allocator<unsigned short>
{
  char dummy[1];
};

/* 1442 */
#pragma pack(push, 4)
struct std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  unsigned __int16 *_Pendsave;
  unsigned __int16 *_Seekhigh;
  int _Alsize;
  int _Strmode;
  std::allocator<unsigned short> _Al;
};
#pragma pack(pop)

/* 1443 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 1444 */
struct std::codecvt_base
{
  std::locale::facet baseclass_0;
};

/* 1445 */
struct _Cvtvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 1446 */
struct std::codecvt<unsigned short,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/* 1447 */
struct std::basic_filebuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  std::codecvt<unsigned short,char,int> *_Pcvt;
  int _State0;
  int _State;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Str;
  char _Closef;
  __declspec(align(4)) std::locale _Loc;
  _iobuf *_File;
};

/* 1448 */
struct $0FB0A1BDEB365F9F274639636E3B40F1
{
  _BYTE gap0[8];
  std::basic_filebuf<unsigned short,std::char_traits<unsigned short> > _Fb;
};

/* 1449 */
union $8E15B738B34585D0F2411757D6D42C70
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $0FB0A1BDEB365F9F274639636E3B40F1 _s1;
};

/* 1450 */
struct std::basic_ifstream<unsigned short,std::char_traits<unsigned short> >
{
  $8E15B738B34585D0F2411757D6D42C70 ___u0;
  _BYTE gap5c[52];
};

/* 1451 */
struct std::collate<char>
{
  std::locale::facet baseclass_0;
  _Collvec _Coll;
};

/* 1452 */
struct $D9DD56561D7D1B744C2387E6AD927335
{
  _BYTE gap0[8];
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > baseclass_8;
};

/* 1453 */
union $28EC70921283847A8FFE33B56717C3B4
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $D9DD56561D7D1B744C2387E6AD927335 _s1;
};

/* 1454 */
struct std::basic_iostream<unsigned short,std::char_traits<unsigned short> >
{
  $28EC70921283847A8FFE33B56717C3B4 ___u0;
};

/* 1455 */
struct $4B04E1ABE8777C7CB544D0C4EDD74387
{
  _BYTE gap0[12];
  std::basic_filebuf<unsigned short,std::char_traits<unsigned short> > _Fb;
};

/* 1456 */
union $CA62F0B99F1025A8E9525831C412FF9B
{
  std::basic_iostream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $4B04E1ABE8777C7CB544D0C4EDD74387 _s1;
};

/* 1457 */
struct std::basic_fstream<unsigned short,std::char_traits<unsigned short> >
{
  $CA62F0B99F1025A8E9525831C412FF9B ___u0;
  _BYTE gap60[52];
};

/* 1458 */
#pragma pack(push, 4)
struct std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
{
  std::basic_streambuf<char,std::char_traits<char> > baseclass_0;
  char *_Pendsave;
  char *_Seekhigh;
  int _Alsize;
  int _Strmode;
  std::allocator<char> _Al;
};
#pragma pack(pop)

/* 1459 */
struct $8CA24E39C6B2866F949D476534420D4E
{
  _BYTE gap0[8];
  std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > _Sb;
};

/* 1460 */
union $DC1BF4BC8D8117D52507394F6432B09B
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $8CA24E39C6B2866F949D476534420D4E _s1;
};

/* 1461 */
struct std::basic_istringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  $DC1BF4BC8D8117D52507394F6432B09B ___u0;
  _BYTE gap54[52];
};

/* 1462 */
struct $78D2D243167D1241ECA22D8F16011C45
{
  _BYTE gap0[4];
  std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > _Sb;
};

/* 1463 */
union $2A5BD03988671819AB73D27E33734F42
{
  std::basic_ostream<char,std::char_traits<char> > baseclass_0;
  $78D2D243167D1241ECA22D8F16011C45 _s1;
};

/* 1464 */
struct std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
{
  $2A5BD03988671819AB73D27E33734F42 ___u0;
  _BYTE gap50[52];
};

/* 1465 */
struct std::num_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > >
{
  std::locale::facet baseclass_0;
};

/* 1466 */
struct std::codecvt<char,char,int>
{
  std::codecvt_base baseclass_0;
  _Cvtvec _Cvt;
};

/* 1467 */
struct std::basic_filebuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> > baseclass_0;
  std::codecvt<char,char,int> *_Pcvt;
  int _State0;
  int _State;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *_Str;
  char _Closef;
  __declspec(align(4)) std::locale _Loc;
  _iobuf *_File;
};

/* 1468 */
struct std::basic_istream<char,std::char_traits<char> >
{
  _BYTE gap0[4];
  int _Chcount;
  _BYTE gap8[52];
};

/* 1469 */
struct $D09E800DF68C8F4E279B33B096EE1DDD
{
  _BYTE gap0[8];
  std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > _Sb;
};

/* 1470 */
union $974F981C057973F79A29EBA6DB593A57
{
  std::basic_istream<char,std::char_traits<char> > baseclass_0;
  $D09E800DF68C8F4E279B33B096EE1DDD _s1;
};

/* 1471 */
struct std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
{
  $974F981C057973F79A29EBA6DB593A57 ___u0;
  _BYTE gap54[52];
};

/* 1472 */
struct std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > >
{
  std::locale::facet baseclass_0;
};

/* 1473 */
struct $F7B6046688DDBC86922D1D57B206E2A3
{
  _BYTE gap0[4];
  std::basic_filebuf<unsigned short,std::char_traits<unsigned short> > _Fb;
};

/* 1474 */
union $73E084E1177200020CA54B368EBA59FF
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $F7B6046688DDBC86922D1D57B206E2A3 _s1;
};

/* 1475 */
struct std::basic_ofstream<unsigned short,std::char_traits<unsigned short> >
{
  $73E084E1177200020CA54B368EBA59FF ___u0;
  _BYTE gap58[52];
};

/* 1476 */
struct $1B4C36B676149E219DEBC377094EB3B5
{
  _BYTE gap0[8];
  std::basic_ostream<char,std::char_traits<char> > baseclass_8;
};

/* 1477 */
union $B006A3D97A90D1B0DD8D2A9EBE702BA5
{
  std::basic_istream<char,std::char_traits<char> > baseclass_0;
  $1B4C36B676149E219DEBC377094EB3B5 _s1;
};

/* 1478 */
struct std::basic_iostream<char,std::char_traits<char> >
{
  $B006A3D97A90D1B0DD8D2A9EBE702BA5 ___u0;
};

/* 1479 */
struct $598ED867F70861A3067DA90C9A56CA0D
{
  _BYTE gap0[8];
  std::basic_filebuf<char,std::char_traits<char> > _Fb;
};

/* 1480 */
union $969FCBCD86824C6E5ED15B85D10A89AD
{
  std::basic_istream<char,std::char_traits<char> > baseclass_0;
  $598ED867F70861A3067DA90C9A56CA0D _s1;
};

/* 1481 */
struct std::basic_ifstream<char,std::char_traits<char> >
{
  $969FCBCD86824C6E5ED15B85D10A89AD ___u0;
  _BYTE gap5c[52];
};

/* 1482 */
struct $890295999CEF2DA89DB4821F4B09F2D0
{
  _BYTE gap0[12];
  std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > _Sb;
};

/* 1483 */
union $55E1E487DD7BED66FBFABC449590EE8E
{
  std::basic_iostream<char,std::char_traits<char> > baseclass_0;
  $890295999CEF2DA89DB4821F4B09F2D0 _s1;
};

/* 1484 */
struct std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
{
  $55E1E487DD7BED66FBFABC449590EE8E ___u0;
  _BYTE gap58[52];
};

/* 1485 */
struct std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >
{
  std::locale::facet baseclass_0;
};

/* 1486 */
struct $1190B72747DA18BD0E25AE8387683B75
{
  _BYTE gap0[12];
  std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > _Sb;
};

/* 1487 */
union $542674BC3C940C8F2805149D2D46950B
{
  std::basic_iostream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $1190B72747DA18BD0E25AE8387683B75 _s1;
};

/* 1488 */
struct std::basic_stringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  $542674BC3C940C8F2805149D2D46950B ___u0;
  _BYTE gap58[52];
};

/* 1489 */
struct $14B90EA26386E7FEE787E8C537A06BD7
{
  _BYTE gap0[12];
  std::basic_filebuf<char,std::char_traits<char> > _Fb;
};

/* 1490 */
union $8E31B174DE67655A5A55FF0E222ABDE2
{
  std::basic_iostream<char,std::char_traits<char> > baseclass_0;
  $14B90EA26386E7FEE787E8C537A06BD7 _s1;
};

/* 1491 */
struct std::basic_fstream<char,std::char_traits<char> >
{
  $8E31B174DE67655A5A55FF0E222ABDE2 ___u0;
  _BYTE gap60[52];
};

/* 1492 */
#pragma pack(push, 4)
struct std::basic_ios<unsigned short,std::char_traits<unsigned short> >
{
  std::ios_base baseclass_0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Sb;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Tiestr;
  unsigned __int16 _Fillch;
};
#pragma pack(pop)

/* 1493 */
struct $95BA4E9688C20FC29366F2D629526F30
{
  _BYTE gap0[4];
  std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > _Sb;
};

/* 1494 */
union $6A111B28158D952A7DE9E66D74C824F3
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > baseclass_0;
  $95BA4E9688C20FC29366F2D629526F30 _s1;
};

/* 1495 */
struct std::basic_ostringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  $6A111B28158D952A7DE9E66D74C824F3 ___u0;
  _BYTE gap50[52];
};

/* 1496 */
struct $445B65394B3F686C67FE8B7AA6763DD9
{
  _BYTE gap0[4];
  std::basic_filebuf<char,std::char_traits<char> > _Fb;
};

/* 1497 */
union $9A4F18725AB6EADD679B369CDE725AFD
{
  std::basic_ostream<char,std::char_traits<char> > baseclass_0;
  $445B65394B3F686C67FE8B7AA6763DD9 _s1;
};

/* 1498 */
struct std::basic_ofstream<char,std::char_traits<char> >
{
  $9A4F18725AB6EADD679B369CDE725AFD ___u0;
  _BYTE gap58[52];
};

/* 1499 */
struct tagEMRSETPALETTEENTRIES
{
  tagEMR emr;
  unsigned int ihPal;
  unsigned int iStart;
  unsigned int cEntries;
  tagPALETTEENTRY aPalEntries[1];
};

/* 1500 */
struct _REMOTE_NAME_INFOW
{
  unsigned __int16 *lpUniversalName;
  unsigned __int16 *lpConnectionName;
  unsigned __int16 *lpRemainingPath;
};

/* 1501 */
#pragma pack(push, 4)
struct _SE_IMPERSONATION_STATE
{
  void *Token;
  char CopyOnOpen;
  char EffectiveOnly;
  _SECURITY_IMPERSONATION_LEVEL Level;
};
#pragma pack(pop)

/* 1502 */
struct tagNMLISTVIEW
{
  tagNMHDR hdr;
  int iItem;
  int iSubItem;
  unsigned int uNewState;
  unsigned int uOldState;
  unsigned int uChanged;
  tagPOINT ptAction;
  int lParam;
};

/* 1503 */
#pragma pack(push, 4)
struct _NETINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwProviderVersion;
  unsigned int dwStatus;
  unsigned int dwCharacteristics;
  unsigned int dwHandle;
  unsigned __int16 wNetType;
  unsigned int dwPrinters;
  unsigned int dwDrives;
};
#pragma pack(pop)

/* 1504 */
struct tagCWPSTRUCT
{
  int lParam;
  unsigned int wParam;
  unsigned int message;
  HWND__ *hwnd;
};

/* 1505 */
struct tagSTYLESTRUCT
{
  unsigned int styleOld;
  unsigned int styleNew;
};

/* 1506 */
struct BITMAPV4HEADER
{
  unsigned int bV4Size;
  int bV4Width;
  int bV4Height;
  unsigned __int16 bV4Planes;
  unsigned __int16 bV4BitCount;
  unsigned int bV4V4Compression;
  unsigned int bV4SizeImage;
  int bV4XPelsPerMeter;
  int bV4YPelsPerMeter;
  unsigned int bV4ClrUsed;
  unsigned int bV4ClrImportant;
  unsigned int bV4RedMask;
  unsigned int bV4GreenMask;
  unsigned int bV4BlueMask;
  unsigned int bV4AlphaMask;
  unsigned int bV4CSType;
  tagICEXYZTRIPLE bV4Endpoints;
  unsigned int bV4GammaRed;
  unsigned int bV4GammaGreen;
  unsigned int bV4GammaBlue;
};

/* 1507 */
#pragma pack(push, 4)
struct _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  char ContextTrackingMode;
  char EffectiveOnly;
};
#pragma pack(pop)

/* 1508 */
struct _SYSTEM_AUDIT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1509 */
struct tagCOPYDATASTRUCT
{
  unsigned int dwData;
  unsigned int cbData;
  void *lpData;
};

/* 1510 */
struct _REPARSE_GUID_DATA_BUFFER::__unnamed
{
  char DataBuffer[1];
};

/* 1511 */
#pragma pack(push, 4)
struct _REPARSE_GUID_DATA_BUFFER
{
  unsigned int ReparseTag;
  unsigned __int16 ReparseDataLength;
  unsigned __int16 Reserved;
  _GUID ReparseGuid;
  _REPARSE_GUID_DATA_BUFFER::__unnamed GenericReparseBuffer;
};
#pragma pack(pop)

/* 1512 */
struct _POWER_DEVICE_TIMEOUTS
{
  unsigned int ConservationIdleTime;
  unsigned int PerformanceIdleTime;
};

/* 1513 */
struct tagNMDATETIMEFORMATA
{
  tagNMHDR nmhdr;
  const char *pszFormat;
  _SYSTEMTIME st;
  const char *pszDisplay;
  char szDisplay[64];
};

/* 1514 */
struct _REMOTE_NAME_INFOA
{
  char *lpUniversalName;
  char *lpConnectionName;
  char *lpRemainingPath;
};

/* 1515 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 1516 */
struct tagEMRSETPIXELV
{
  tagEMR emr;
  _POINTL ptlPixel;
  unsigned int crColor;
};

/* 1517 */
struct _TAPE_SET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int EOTWarningZoneSize;
};

/* 1518 */
struct _ABC
{
  int abcA;
  unsigned int abcB;
  int abcC;
};

/* 1519 */
struct tagSCROLLINFO
{
  unsigned int cbSize;
  unsigned int fMask;
  int nMin;
  int nMax;
  unsigned int nPage;
  int nPos;
  int nTrackPos;
};

/* 1520 */
struct NMTBDISPINFOW
{
  tagNMHDR hdr;
  unsigned int dwMask;
  int idCommand;
  unsigned int lParam;
  int iImage;
  unsigned __int16 *pszText;
  int cchText;
};

/* 1521 */
struct tagMDINEXTMENU
{
  HMENU__ *hmenuIn;
  HMENU__ *hmenuNext;
  HWND__ *hwndNext;
};

/* 1522 */
struct _PSHNOTIFY
{
  tagNMHDR hdr;
  int lParam;
};

/* 1523 */
#pragma pack(push, 2)
struct _MESSAGE_RESOURCE_ENTRY
{
  unsigned __int16 Length;
  unsigned __int16 Flags;
  char Text[1];
};
#pragma pack(pop)

/* 1524 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  _COORD dwSize;
  _COORD dwCursorPosition;
  unsigned __int16 wAttributes;
  _SMALL_RECT srWindow;
  _COORD dwMaximumWindowSize;
};

/* 1525 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  unsigned __int16 cFileName[260];
  unsigned __int16 cAlternateFileName[14];
};

/* 1526 */
struct tagTVSORTCB
{
  struct _TREEITEM *hParent;
  int (__stdcall *lpfnCompare)(int, int, int);
  int lParam;
};

/* 1527 */
struct tagNMCHAR
{
  tagNMHDR hdr;
  unsigned int ch;
  unsigned int dwItemPrev;
  unsigned int dwItemNext;
};

/* 1528 */
struct __declspec(align(2)) tagBITMAPCOREINFO
{
  tagBITMAPCOREHEADER bmciHeader;
  tagRGBTRIPLE bmciColors[1];
};

/* 1529 */
union _KEY_EVENT_RECORD::__unnamed
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 1530 */
struct _KEY_EVENT_RECORD
{
  int bKeyDown;
  unsigned __int16 wRepeatCount;
  unsigned __int16 wVirtualKeyCode;
  unsigned __int16 wVirtualScanCode;
  _KEY_EVENT_RECORD::__unnamed uChar;
  unsigned int dwControlKeyState;
};

/* 1531 */
struct tagENHMETAHEADER
{
  unsigned int iType;
  unsigned int nSize;
  _RECTL rclBounds;
  _RECTL rclFrame;
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int nBytes;
  unsigned int nRecords;
  unsigned __int16 nHandles;
  unsigned __int16 sReserved;
  unsigned int nDescription;
  unsigned int offDescription;
  unsigned int nPalEntries;
  tagSIZE szlDevice;
  tagSIZE szlMillimeters;
  unsigned int cbPixelFormat;
  unsigned int offPixelFormat;
  unsigned int bOpenGL;
};

/* 1532 */
struct tagDRAWITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  unsigned int itemID;
  unsigned int itemAction;
  unsigned int itemState;
  HWND__ *hwndItem;
  HDC__ *hDC;
  tagRECT rcItem;
  unsigned int itemData;
};

/* 1533 */
struct MCHITTESTINFO
{
  unsigned int cbSize;
  tagPOINT pt;
  unsigned int uHit;
  _SYSTEMTIME st;
};

/* 1534 */
struct _ABCFLOAT
{
  float abcfA;
  float abcfB;
  float abcfC;
};

/* 1535 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 1536 */
struct TBBUTTONINFOA
{
  unsigned int cbSize;
  unsigned int dwMask;
  int idCommand;
  int iImage;
  char fsState;
  char fsStyle;
  unsigned __int16 cx;
  unsigned int lParam;
  char *pszText;
  int cchText;
};

/* 1537 */
struct _ImageArchitectureHeader
{
  int _bf0;
  unsigned int FirstEntryRVA;
};

/* 1538 */
#pragma pack(push, 4)
struct _TAPE_ERASE
{
  unsigned int Type;
  char Immediate;
};
#pragma pack(pop)

/* 1539 */
struct __declspec(align(8)) _TAPE_GET_MEDIA_PARAMETERS
{
  _LARGE_INTEGER Capacity;
  _LARGE_INTEGER Remaining;
  unsigned int BlockSize;
  unsigned int PartitionCount;
  char WriteProtected;
};

/* 1540 */
struct tagEMRSETDIBITSTODEVICE
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int iStartScan;
  unsigned int cScans;
};

/* 1541 */
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  unsigned int OffsetToData;
  unsigned int Size;
  unsigned int CodePage;
  unsigned int Reserved;
};

/* 1542 */
struct _TOKEN_PRIMARY_GROUP
{
  void *PrimaryGroup;
};

/* 1543 */
struct _NT_TIB
{
  struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 1544 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 1545 */
struct tagLAYERPLANEDESCRIPTOR
{
  unsigned __int16 nSize;
  unsigned __int16 nVersion;
  unsigned int dwFlags;
  char iPixelType;
  char cColorBits;
  char cRedBits;
  char cRedShift;
  char cGreenBits;
  char cGreenShift;
  char cBlueBits;
  char cBlueShift;
  char cAlphaBits;
  char cAlphaShift;
  char cAccumBits;
  char cAccumRedBits;
  char cAccumGreenBits;
  char cAccumBlueBits;
  char cAccumAlphaBits;
  char cDepthBits;
  char cStencilBits;
  char cAuxBuffers;
  char iLayerPlane;
  char bReserved;
  unsigned int crTransparent;
};

/* 1546 */
struct TBBUTTONINFOW
{
  unsigned int cbSize;
  unsigned int dwMask;
  int idCommand;
  int iImage;
  char fsState;
  char fsStyle;
  unsigned __int16 cx;
  unsigned int lParam;
  unsigned __int16 *pszText;
  int cchText;
};

/* 1547 */
struct _ICONINFO
{
  int fIcon;
  unsigned int xHotspot;
  unsigned int yHotspot;
  HBITMAP__ *hbmMask;
  HBITMAP__ *hbmColor;
};

/* 1548 */
struct tagTOOLINFOW
{
  unsigned int cbSize;
  unsigned int uFlags;
  HWND__ *hwnd;
  unsigned int uId;
  tagRECT rect;
  HINSTANCE__ *hinst;
  unsigned __int16 *lpszText;
  int lParam;
};

/* 1549 */
struct _TT_HITTESTINFOW
{
  HWND__ *hwnd;
  tagPOINT pt;
  tagTOOLINFOW ti;
};

/* 1550 */
struct tagNMKEY
{
  tagNMHDR hdr;
  unsigned int nVKey;
  unsigned int uFlags;
};

/* 1551 */
#pragma pack(push, 4)
struct _WIN32_STREAM_ID
{
  unsigned int dwStreamId;
  unsigned int dwStreamAttributes;
  _LARGE_INTEGER Size;
  unsigned int dwStreamNameSize;
  unsigned __int16 cStreamName[1];
};
#pragma pack(pop)

/* 1552 */
struct _PACKEDEVENTINFO
{
  unsigned int ulSize;
  unsigned int ulNumEventsForLogFile;
  unsigned int ulOffsets[];
};

/* 1553 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  unsigned int Offset;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 1554 */
struct _numberfmtA
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  char *lpDecimalSep;
  char *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 1555 */
struct tagDROPSTRUCT
{
  HWND__ *hwndSource;
  HWND__ *hwndSink;
  unsigned int wFmt;
  unsigned int dwData;
  tagPOINT ptDrop;
  unsigned int dwControlData;
};

/* 1556 */
struct _IMAGE_BASE_RELOCATION
{
  unsigned int VirtualAddress;
  unsigned int SizeOfBlock;
};

/* 1557 */
struct _MOUSE_EVENT_RECORD
{
  _COORD dwMousePosition;
  unsigned int dwButtonState;
  unsigned int dwControlKeyState;
  unsigned int dwEventFlags;
};

/* 1558 */
struct tagTOOLINFOA
{
  unsigned int cbSize;
  unsigned int uFlags;
  HWND__ *hwnd;
  unsigned int uId;
  tagRECT rect;
  HINSTANCE__ *hinst;
  char *lpszText;
  int lParam;
};

/* 1559 */
struct _TT_HITTESTINFOA
{
  HWND__ *hwnd;
  tagPOINT pt;
  tagTOOLINFOA ti;
};

/* 1560 */
struct NMTBDISPINFOA
{
  tagNMHDR hdr;
  unsigned int dwMask;
  int idCommand;
  unsigned int lParam;
  int iImage;
  char *pszText;
  int cchText;
};

/* 1561 */
struct tagHANDLETABLE
{
  void *objectHandle[1];
};

/* 1562 */
struct tagTRACKMOUSEEVENT
{
  unsigned int cbSize;
  unsigned int dwFlags;
  HWND__ *hwndTrack;
  unsigned int dwHoverTime;
};

/* 1563 */
struct tagNMLVCUSTOMDRAW
{
  tagNMCUSTOMDRAWINFO nmcd;
  unsigned int clrText;
  unsigned int clrTextBk;
  int iSubItem;
};

/* 1564 */
struct _TAPE_GET_POSITION
{
  unsigned int Type;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
};

/* 1565 */
struct _GLYPHMETRICS
{
  unsigned int gmBlackBoxX;
  unsigned int gmBlackBoxY;
  tagPOINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 1566 */
struct tagNMDATETIMECHANGE
{
  tagNMHDR nmhdr;
  unsigned int dwFlags;
  _SYSTEMTIME st;
};

/* 1567 */
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  char Name[16];
  char Date[12];
  char UserID[6];
  char GroupID[6];
  char Mode[8];
  char Size[10];
  char EndHeader[2];
};

/* 1568 */
struct _MENU_EVENT_RECORD
{
  unsigned int dwCommandId;
};

/* 1569 */
union _INPUT_RECORD::__unnamed
{
  _KEY_EVENT_RECORD KeyEvent;
  _MOUSE_EVENT_RECORD MouseEvent;
  _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  _MENU_EVENT_RECORD MenuEvent;
  _FOCUS_EVENT_RECORD FocusEvent;
};

/* 1570 */
struct _INPUT_RECORD
{
  unsigned __int16 EventType;
  __declspec(align(4)) _INPUT_RECORD::__unnamed Event;
};

/* 1571 */
struct tagDRAWTEXTPARAMS
{
  unsigned int cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  unsigned int uiLengthDrawn;
};

/* 1572 */
struct _RASTERIZER_STATUS
{
  __int16 nSize;
  __int16 wFlags;
  __int16 nLanguageID;
};

/* 1573 */
struct tagREBARBANDINFOA
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fStyle;
  unsigned int clrFore;
  unsigned int clrBack;
  char *lpText;
  unsigned int cch;
  int iImage;
  HWND__ *hwndChild;
  unsigned int cxMinChild;
  unsigned int cyMinChild;
  unsigned int cx;
  HBITMAP__ *hbmBack;
  unsigned int wID;
  unsigned int cyChild;
  unsigned int cyMaxChild;
  unsigned int cyIntegral;
  unsigned int cxIdeal;
  int lParam;
  unsigned int cxHeader;
};

/* 1574 */
struct _SYSTEM_POWER_STATUS
{
  char ACLineStatus;
  char BatteryFlag;
  char BatteryLifePercent;
  char Reserved1;
  unsigned int BatteryLifeTime;
  unsigned int BatteryFullLifeTime;
};

/* 1575 */
struct tagREBARBANDINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fStyle;
  unsigned int clrFore;
  unsigned int clrBack;
  unsigned __int16 *lpText;
  unsigned int cch;
  int iImage;
  HWND__ *hwndChild;
  unsigned int cxMinChild;
  unsigned int cyMinChild;
  unsigned int cx;
  HBITMAP__ *hbmBack;
  unsigned int wID;
  unsigned int cyChild;
  unsigned int cyMaxChild;
  unsigned int cyIntegral;
  unsigned int cxIdeal;
  int lParam;
  unsigned int cxHeader;
};

/* 1576 */
struct _numberfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 1577 */
#pragma pack(push, 4)
struct _COMMPROP
{
  unsigned __int16 wPacketLength;
  unsigned __int16 wPacketVersion;
  unsigned int dwServiceMask;
  unsigned int dwReserved1;
  unsigned int dwMaxTxQueue;
  unsigned int dwMaxRxQueue;
  unsigned int dwMaxBaud;
  unsigned int dwProvSubType;
  unsigned int dwProvCapabilities;
  unsigned int dwSettableParams;
  unsigned int dwSettableBaud;
  unsigned __int16 wSettableData;
  unsigned __int16 wSettableStopParity;
  unsigned int dwCurrentTxQueue;
  unsigned int dwCurrentRxQueue;
  unsigned int dwProvSpec1;
  unsigned int dwProvSpec2;
  unsigned __int16 wcProvChar[1];
};
#pragma pack(pop)

/* 1578 */
struct _ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1579 */
struct _CONSOLE_CURSOR_INFO
{
  unsigned int dwSize;
  int bVisible;
};

/* 1580 */
struct tagNMDATETIMEFORMATQUERYW
{
  tagNMHDR nmhdr;
  const unsigned __int16 *pszFormat;
  tagSIZE szMax;
};

/* 1581 */
struct _STARTUPINFOW
{
  unsigned int cb;
  unsigned __int16 *lpReserved;
  unsigned __int16 *lpDesktop;
  unsigned __int16 *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 1582 */
struct tagMINMAXINFO
{
  tagPOINT ptReserved;
  tagPOINT ptMaxSize;
  tagPOINT ptMaxPosition;
  tagPOINT ptMinTrackSize;
  tagPOINT ptMaxTrackSize;
};

/* 1583 */
struct tagNMREBAR
{
  tagNMHDR hdr;
  unsigned int dwMask;
  unsigned int uBand;
  unsigned int fStyle;
  unsigned int wID;
  int lParam;
};

/* 1584 */
struct tagCLIENTCREATESTRUCT
{
  void *hWindowMenu;
  unsigned int idFirstChild;
};

/* 1585 */
struct tagCBT_CREATEWNDA
{
  tagCREATESTRUCTA *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 1586 */
struct tagEMRMASKBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 1587 */
struct tagEMRROUNDRECT
{
  tagEMR emr;
  _RECTL rclBox;
  tagSIZE szlCorner;
};

/* 1588 */
#pragma pack(push, 4)
struct tagHELPWININFOA
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  char rgchMember[2];
};
#pragma pack(pop)

/* 1589 */
struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  tagEMR emr;
  unsigned int ihBrush;
  unsigned int iUsage;
  unsigned int offBmi;
  unsigned int cbBmi;
  unsigned int offBits;
  unsigned int cbBits;
};

/* 1590 */
#pragma pack(push, 4)
struct tagPELARRAY
{
  int paXCount;
  int paYCount;
  int paXExt;
  int paYExt;
  char paRGBs;
};
#pragma pack(pop)

/* 1591 */
struct tagTCITEMW
{
  unsigned int mask;
  unsigned int dwState;
  unsigned int dwStateMask;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
};

/* 1592 */
struct tagCBTACTIVATESTRUCT
{
  int fMouse;
  HWND__ *hWndActive;
};

/* 1593 */
struct tagTVHITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
  struct _TREEITEM *hItem;
};

/* 1594 */
struct _RB_HITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
  int iBand;
};

/* 1595 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 1596 */
struct _NETCONNECTINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwFlags;
  unsigned int dwSpeed;
  unsigned int dwDelay;
  unsigned int dwOptDataSize;
};

/* 1597 */
struct _PROCESS_HEAP_ENTRY::__unnamed::__unnamed
{
  void *hMem;
  unsigned int dwReserved[3];
};

/* 1598 */
union $C997D76DF7FB3F24F309B2C7B4C7FC8B
{
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Block;
  _PROCESS_HEAP_ENTRY::__unnamed::__unnamed Region;
};

/* 1599 */
struct _PROCESS_HEAP_ENTRY
{
  void *lpData;
  unsigned int cbData;
  char cbOverhead;
  char iRegionIndex;
  unsigned __int16 wFlags;
  $C997D76DF7FB3F24F309B2C7B4C7FC8B ___u5;
};

/* 1600 */
struct __declspec(align(8)) _TAPE_SET_POSITION
{
  unsigned int Method;
  unsigned int Partition;
  _LARGE_INTEGER Offset;
  char Immediate;
};

/* 1601 */
struct tagKERNINGPAIR
{
  unsigned __int16 wFirst;
  unsigned __int16 wSecond;
  int iKernAmount;
};

/* 1602 */
#pragma pack(push, 4)
struct tagEMRFILLRGN
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbRgnData;
  unsigned int ihBrush;
  char RgnData[1];
};
#pragma pack(pop)

/* 1603 */
struct tagNMDATETIMEWMKEYDOWNA
{
  tagNMHDR nmhdr;
  int nVirtKey;
  const char *pszFormat;
  _SYSTEMTIME st;
};

/* 1604 */
#pragma pack(push, 4)
struct tagEMRGLSBOUNDEDRECORD
{
  tagEMR emr;
  _RECTL rclBounds;
  unsigned int cbData;
  char Data[1];
};
#pragma pack(pop)

/* 1605 */
struct tagTCITEMA
{
  unsigned int mask;
  unsigned int dwState;
  unsigned int dwStateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
};

/* 1606 */
struct _TOKEN_USER
{
  _SID_AND_ATTRIBUTES User;
};

/* 1607 */
struct tagNMDATETIMEWMKEYDOWNW
{
  tagNMHDR nmhdr;
  int nVirtKey;
  const unsigned __int16 *pszFormat;
  _SYSTEMTIME st;
};

/* 1608 */
struct tagEMRBITBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int cxDest;
  int cyDest;
  unsigned int dwRop;
  int xSrc;
  int ySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
};

/* 1609 */
struct tagINITCOMMONCONTROLSEX
{
  unsigned int dwSize;
  unsigned int dwICC;
};

/* 1610 */
struct tagNMITEMACTIVATE
{
  tagNMHDR hdr;
  int iItem;
  int iSubItem;
  unsigned int uNewState;
  unsigned int uOldState;
  unsigned int uChanged;
  tagPOINT ptAction;
  int lParam;
  unsigned int uKeyFlags;
};

/* 1611 */
struct tagTVDISPINFOW
{
  tagNMHDR hdr;
  tagTVITEMW item;
};

/* 1612 */
#pragma pack(push, 4)
struct tagEMRGDICOMMENT
{
  tagEMR emr;
  unsigned int cbData;
  char Data[1];
};
#pragma pack(pop)

/* 1613 */
#pragma pack(push, 4)
struct _FILE_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Action;
  unsigned int FileNameLength;
  unsigned __int16 FileName[1];
};
#pragma pack(pop)

/* 1614 */
struct _IMAGE_LOAD_CONFIG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  void *LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  void *EditList;
  unsigned int Reserved[1];
};

/* 1615 */
struct _UDACCEL
{
  unsigned int nSec;
  unsigned int nInc;
};

/* 1616 */
struct tagCOMPAREITEMSTRUCT
{
  unsigned int CtlType;
  unsigned int CtlID;
  HWND__ *hwndItem;
  unsigned int itemID1;
  unsigned int itemData1;
  unsigned int itemID2;
  unsigned int itemData2;
  unsigned int dwLocaleId;
};

/* 1617 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1618 */
struct tagCHARSETINFO
{
  unsigned int ciCharset;
  unsigned int ciACP;
  tagFONTSIGNATURE fs;
};

/* 1619 */
struct tagTCITEMHEADERA
{
  unsigned int mask;
  unsigned int lpReserved1;
  unsigned int lpReserved2;
  char *pszText;
  int cchTextMax;
  int iImage;
};

/* 1620 */
struct tagEVENTMSG
{
  unsigned int message;
  unsigned int paramL;
  unsigned int paramH;
  unsigned int time;
  HWND__ *hwnd;
};

/* 1621 */
struct tagCBT_CREATEWNDW
{
  tagCREATESTRUCTW *lpcs;
  HWND__ *hwndInsertAfter;
};

/* 1622 */
struct tagMINIMIZEDMETRICS
{
  unsigned int cbSize;
  int iWidth;
  int iHorzGap;
  int iVertGap;
  int iArrange;
};

/* 1623 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
};

/* 1624 */
struct tagNONCLIENTMETRICSW
{
  unsigned int cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  tagLOGFONTW lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  tagLOGFONTW lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  tagLOGFONTW lfMenuFont;
  tagLOGFONTW lfStatusFont;
  tagLOGFONTW lfMessageFont;
};

/* 1625 */
struct _RGNDATAHEADER
{
  unsigned int dwSize;
  unsigned int iType;
  unsigned int nCount;
  unsigned int nRgnSize;
  tagRECT rcBound;
};

/* 1626 */
struct __declspec(align(4)) _RGNDATA
{
  _RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 1627 */
struct tagTCKEYDOWN
{
  tagNMHDR hdr;
  unsigned __int16 wVKey;
  unsigned int flags;
};

/* 1628 */
struct tagTCITEMHEADERW
{
  unsigned int mask;
  unsigned int lpReserved1;
  unsigned int lpReserved2;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iImage;
};

/* 1629 */
#pragma pack(push, 2)
struct _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  char Name[1];
};
#pragma pack(pop)

/* 1630 */
#pragma pack(push, 2)
struct tagACCEL
{
  char fVirt;
  unsigned __int16 key;
  unsigned __int16 cmd;
};
#pragma pack(pop)

/* 1631 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 1632 */
struct tagTVDISPINFOA
{
  tagNMHDR hdr;
  tagTVITEMA item;
};

/* 1633 */
struct tagMOUSEHOOKSTRUCT
{
  tagPOINT pt;
  HWND__ *hwnd;
  unsigned int wHitTestCode;
  unsigned int dwExtraInfo;
};

/* 1634 */
struct _QUOTA_LIMITS
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  __declspec(align(8)) _LARGE_INTEGER TimeLimit;
};

/* 1635 */
struct _TAPE_GET_DRIVE_PARAMETERS
{
  char ECC;
  char Compression;
  char DataPadding;
  char ReportSetmarks;
  unsigned int DefaultBlockSize;
  unsigned int MaximumBlockSize;
  unsigned int MinimumBlockSize;
  unsigned int MaximumPartitionCount;
  unsigned int FeaturesLow;
  unsigned int FeaturesHigh;
  unsigned int EOTWarningZoneSize;
};

/* 1636 */
struct tagNMTBGETINFOTIPA
{
  tagNMHDR hdr;
  char *pszText;
  int cchTextMax;
  int iItem;
  int lParam;
};

/* 1637 */
struct _LDT_ENTRY::__unnamed::__unnamed
{
  char BaseMid;
  char Flags1;
  char Flags2;
  char BaseHi;
};

/* 1638 */
union _LDT_ENTRY::__unnamed
{
  _LDT_ENTRY::__unnamed::__unnamed Bytes;
  _LDT_ENTRY::__unnamed::__unnamed Bits;
};

/* 1639 */
struct _LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  _LDT_ENTRY::__unnamed HighWord;
};

/* 1640 */
struct tagTTPOLYGONHEADER
{
  unsigned int cb;
  unsigned int dwType;
  tagPOINTFX pfxStart;
};

/* 1641 */
struct tagNMTBGETINFOTIPW
{
  tagNMHDR hdr;
  unsigned __int16 *pszText;
  int cchTextMax;
  int iItem;
  int lParam;
};

/* 1642 */
struct tagNMDATETIMEFORMATQUERYA
{
  tagNMHDR nmhdr;
  const char *pszFormat;
  tagSIZE szMax;
};

/* 1643 */
union _IMAGE_THUNK_DATA64::__unnamed
{
  char *ForwarderString;
  unsigned int *Function;
  unsigned __int64 Ordinal;
  _IMAGE_IMPORT_BY_NAME *AddressOfData;
};

/* 1644 */
struct _IMAGE_THUNK_DATA64
{
  _IMAGE_THUNK_DATA64::__unnamed u1;
};

/* 1645 */
struct _ULARGE_INTEGER::__unnamed
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 1646 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 1647 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F _s0;
  _ULARGE_INTEGER::__unnamed u;
  unsigned __int64 QuadPart;
};

/* 1648 */
struct tagENHMETARECORD
{
  unsigned int iType;
  unsigned int nSize;
  unsigned int dParm[1];
};

/* 1649 */
struct tagANIMATIONINFO
{
  unsigned int cbSize;
  int iMinAnimate;
};

/* 1650 */
struct PBRANGE
{
  int iLow;
  int iHigh;
};

/* 1651 */
struct tagEMRSTRETCHDIBITS
{
  tagEMR emr;
  _RECTL rclBounds;
  int xDest;
  int yDest;
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  unsigned int iUsageSrc;
  unsigned int dwRop;
  int cxDest;
  int cyDest;
};

/* 1652 */
struct tagMETAHEADER
{
  unsigned __int16 mtType;
  unsigned __int16 mtHeaderSize;
  unsigned __int16 mtVersion;
  unsigned int mtSize;
  unsigned __int16 mtNoObjects;
  unsigned int mtMaxRecord;
  unsigned __int16 mtNoParameters;
};

/* 1653 */
struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA
{
  void *hClientToken;
  _WIN_CERTIFICATE *lpCertificate;
};

/* 1654 */
union _IMAGE_THUNK_DATA32::__unnamed
{
  char *ForwarderString;
  unsigned int *Function;
  unsigned int Ordinal;
  _IMAGE_IMPORT_BY_NAME *AddressOfData;
};

/* 1655 */
struct _IMAGE_THUNK_DATA32
{
  _IMAGE_THUNK_DATA32::__unnamed u1;
};

/* 1656 */
struct tagEMRFORMAT
{
  unsigned int dSignature;
  unsigned int nVersion;
  unsigned int cbData;
  unsigned int offData;
};

/* 1657 */
struct tagTTPOLYCURVE
{
  unsigned __int16 wType;
  unsigned __int16 cpfx;
  tagPOINTFX apfx[1];
};

/* 1658 */
struct _TAPE_SET_MEDIA_PARAMETERS
{
  unsigned int BlockSize;
};

/* 1659 */
struct tagHELPWININFOW
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  unsigned __int16 rgchMember[2];
};

/* 1660 */
struct tagMETARECORD
{
  unsigned int rdSize;
  unsigned __int16 rdFunction;
  unsigned __int16 rdParm[1];
};

/* 1661 */
struct tagEMRPLGBLT
{
  tagEMR emr;
  _RECTL rclBounds;
  _POINTL aptlDest[3];
  int xSrc;
  int ySrc;
  int cxSrc;
  int cySrc;
  tagXFORM xformSrc;
  unsigned int crBkColorSrc;
  unsigned int iUsageSrc;
  unsigned int offBmiSrc;
  unsigned int cbBmiSrc;
  unsigned int offBitsSrc;
  unsigned int cbBitsSrc;
  int xMask;
  int yMask;
  unsigned int iUsageMask;
  unsigned int offBmiMask;
  unsigned int cbBmiMask;
  unsigned int offBitsMask;
  unsigned int cbBitsMask;
};

/* 1662 */
struct _IMAGE_SYMBOL::__unnamed::__unnamed
{
  unsigned int Short;
  unsigned int Long;
};

/* 1663 */
union _IMAGE_SYMBOL::__unnamed
{
  char ShortName[8];
  _IMAGE_SYMBOL::__unnamed::__unnamed Name;
  char *LongName[2];
};

/* 1664 */
struct _IMAGE_SYMBOL
{
  _IMAGE_SYMBOL::__unnamed N;
  unsigned int Value;
  __int16 SectionNumber;
  unsigned __int16 Type;
  char StorageClass;
  char NumberOfAuxSymbols;
};

/* 1665 */
#pragma pack(push, 4)
struct _cpinfo
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
};
#pragma pack(pop)

/* 1666 */
struct tagNMLVCACHEHINT
{
  tagNMHDR hdr;
  int iFrom;
  int iTo;
};

/* 1667 */
struct tagTCHITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
};

/* 1668 */
struct _echo_send_msg
{
  unsigned int dwSerial;
  unsigned int dwEchoCount;
  unsigned int dwSize;
  char sData[6400];
};

/* 1669 */
struct _log_in_webagent_server_request_wbzo
{
  char byLogInCode;
};

/* 1670 */
struct _log_in_webagent_server_result_zowb
{
  char byRet;
};

/* 1671 */
struct _unit_frame_buy_request_clzo
{
  char byFrameCode;
};

/* 1672 */
struct _unit_sell_request_clzo
{
  char bySlotIndex;
};

/* 1673 */
struct _tuning_data
{
  char byPartCode;
  char byPartIndex;
};

/* 1674 */
struct _unit_part_tuning_request_clzo
{
  char bySlotIndex;
  char byTuningNum;
  _tuning_data TuningList[6];
};

/* 1675 */
struct _unit_frame_repair_request_clzo
{
  char bySlotIndex;
};

/* 1676 */
struct _unit_bullet_fill_request_clzo
{
  char bySlotIndex;
  char byBulletIndex[2];
};

/* 1677 */
struct _unit_pack_fill_request_clzo::__list
{
  char bySpareIndex;
  char byBulletIndex;
};

/* 1678 */
struct _unit_pack_fill_request_clzo
{
  char bySlotIndex;
  char byFillNum;
  _unit_pack_fill_request_clzo::__list List[8];
};

/* 1679 */
struct _unit_delivery_request_clzo
{
  char bySlotIndex;
  char byStoreIndex;
  __int16 zUnitNewPos[3];
};

/* 1680 */
struct _unit_return_request_clzo
{
  char dummy[1];
};

/* 1681 */
struct _unit_take_request_clzo
{
  char dummy[1];
};

/* 1682 */
struct _unit_leave_request_clzo
{
  __int16 zPlayerNewPos[3];
};

/* 1683 */
struct _unit_bullet_replace_request_clzo
{
  char bySlotIndex;
  char byPackIndex;
  char byBulletPart;
};

/* 1684 */
struct _STORAGE_POS
{
  char byStorageCode;
};

/* 1685 */
struct _STORAGE_POS_INDIV
{
  _STORAGE_POS baseclass_0;
  unsigned __int16 wItemSerial;
  char byNum;
};

/* 1686 */
struct _force_inven_change_request_clzo
{
  _STORAGE_POS_INDIV Item;
  unsigned __int16 wReplaceSerial;
};

/* 1687 */
struct _animus_inven_change_request_clzo
{
  _STORAGE_POS_INDIV Item;
  unsigned __int16 wReplaceSerial;
};

/* 1688 */
struct _res_separation_request_clzo
{
  unsigned __int16 wStartSerial;
  char byMoveAmount;
};

/* 1689 */
struct _res_division_request_clzo
{
  unsigned __int16 wStartSerial;
  unsigned __int16 wTarSerial;
  char byMoveAmount;
};

/* 1690 */
struct _potionsocket_separation_request_clzo
{
  unsigned __int16 wStartSerial;
  char byMoveAmount;
};

/* 1691 */
struct _potionsocket_division_request_clzo
{
  unsigned __int16 wStartSerial;
  unsigned __int16 wTarSerial;
  char byMoveAmount;
};

/* 1692 */
struct _alter_item_slot_request_clzo::__list
{
  char byStorageIndex;
  unsigned int dwItemSerial;
  char byClientSlotIndex;
};

/* 1693 */
struct _alter_item_slot_request_clzo
{
  char byNum;
  _alter_item_slot_request_clzo::__list list[100];
};

/* 1694 */
struct _alter_link_slot_request_clzo::__list
{
  char bySlotIndex;
  char byLinkCode;
  unsigned __int16 wIndex;
};

/* 1695 */
struct _alter_link_slot_request_clzo
{
  char byLinkLock;
  char byNum;
  _alter_link_slot_request_clzo::__list list[50];
};

/* 1696 */
struct _pvp_rank_list_request_clzo
{
  char byRace;
  char byVersion;
  char byPage;
};

/* 1697 */
struct _mode_change_request_clzo
{
  char byModeCode;
  char byStandCode;
};

/* 1698 */
struct _gesture_request_clzo
{
  char byGestureType;
};

/* 1699 */
struct _alter_window_info_request_clzo
{
  unsigned int dwSkill[2];
  unsigned int dwForce[2];
  unsigned int dwCharacter[2];
  unsigned int dwAnimus[2];
  unsigned int dwInven;
  unsigned int dwInvenBag[5];
};

/* 1700 */
struct _set_target_object_request_clzo
{
  unsigned int dwCount;
  char byID;
  char byKind;
  unsigned int dwSerial;
  unsigned __int16 wIndex;
};

/* 1701 */
struct _release_target_object_request_clzo
{
  char sDum;
};

/* 1702 */
struct _party_req_block_report_clzo
{
  char bBlock;
};

/* 1703 */
struct _whisper_block_report_clzo
{
  char bBlock;
};

/* 1704 */
struct _trade_block_report_clzo
{
  char bBlock;
};

/* 1705 */
struct _trunk_download_request_clzo
{
  unsigned __int16 wszPassword[13];
};

/* 1706 */
struct _trunk_est_request_clzo
{
  unsigned __int16 wszPassword[13];
  char byHintIndex;
  unsigned __int16 wszHintAnswer[17];
};

/* 1707 */
struct _trunk_change_passwd_request_clzo
{
  unsigned __int16 wszPrevPasswd[13];
  unsigned __int16 wszChngPasswd[13];
  char byHintIndex;
  unsigned __int16 wszHintAnswer[17];
};

/* 1708 */
struct _trunk_extend_request_clzo
{
  char byDummy;
};

/* 1709 */
struct _trunk_io_move_request_clzo
{
  char byStartStorageIndex;
  char byTarStorageIndex;
  unsigned __int16 wItemSerial;
  char byClientSlotIndex;
};

/* 1710 */
struct _trunk_io_swap_request_clzo
{
  char byStartStorageIndex;
  char byTarStorageIndex;
  unsigned __int16 wStartItemSerial;
  unsigned __int16 wTarItemSerial;
};

/* 1711 */
struct _trunk_io_merge_request_clzo
{
  char byStartStorageIndex;
  char byTarStorageIndex;
  unsigned __int16 wStartItemSerial;
  unsigned __int16 wTarItemSerial;
  unsigned __int16 wMoveAmount;
};

/* 1712 */
struct _trunk_alter_item_slot_request_clzo
{
  unsigned int dwItemSerial;
  char byClientSlotIndex;
};

/* 1713 */
struct _trunk_res_division_request_clzo
{
  unsigned __int16 wStartSerial;
  unsigned __int16 wTarSerial;
  unsigned __int16 wMoveAmount;
};

/* 1714 */
struct _trunk_potionsocket_division_request_clzo
{
  unsigned __int16 wStartSerial;
  unsigned __int16 wTarSerial;
  unsigned __int16 wMoveAmount;
};

/* 1715 */
struct _trunk_io_money_request_clzo
{
  char byCase;
  unsigned int dwDalant;
  unsigned int dwGold;
};

/* 1716 */
struct _trunk_pw_hint_index_request_clzo
{
  char byDummy;
};

/* 1717 */
struct _trunk_hint_answer_request_clzo
{
  unsigned __int16 wszAnswer[17];
};

/* 1718 */
struct _trunk_create_cost_is_free_result_zocl
{
  char byRet;
};

/* 1719 */
struct _buy_store_request_clzo::_list
{
  char byStorageCode;
  unsigned int dwGoodSerial;
  char byAmount;
};

/* 1720 */
struct _buy_store_request_clzo
{
  char byStoreIndex;
  char byBuyNum;
  _buy_store_request_clzo::_list OfferList[100];
};

/* 1721 */
struct _sell_store_request_clzo::_list
{
  char byStorageCode;
  unsigned __int16 wSerial;
  char byAmount;
};

/* 1722 */
struct _sell_store_request_clzo
{
  unsigned __int16 wStoreIndex;
  char bySellNum;
  _sell_store_request_clzo::_list Item[100];
};

/* 1723 */
struct _exchange_dalant_for_gold_request_clzo
{
  unsigned int dwDalant;
};

/* 1724 */
struct _exchange_gold_for_dalant_request_clzo
{
  unsigned int dwGold;
};

/* 1725 */
struct _exchange_gold_for_pvp_request_clzo
{
  unsigned int dwGold;
};

/* 1726 */
struct _d_trade_ask_request_clzo
{
  unsigned __int16 wDstIndex;
};

/* 1727 */
struct _d_trade_answer_request_clzo
{
  _CLID idAsker;
};

/* 1728 */
struct _d_trade_cancle_request_clzo
{
  char dummy[1];
};

/* 1729 */
struct _d_trade_lock_request_clzo
{
  char dummy[1];
};

/* 1730 */
struct _d_trade_ok_request_clzo
{
  unsigned int dwKey[4];
};

/* 1731 */
struct _d_trade_add_request_clzo
{
  char byStorageCode;
  unsigned int dwSerial;
  char bySlotIndex;
  char byAmount;
};

/* 1732 */
struct _d_trade_del_request_clzo
{
  char bySlotIndex;
};

/* 1733 */
struct _d_trade_bet_request_clzo
{
  char byMoneyUnit;
  unsigned int dwBetAmount;
};

/* 1734 */
struct _a_trade_reged_list_request_clzo
{
  char byStoreIndex;
  char byTableCode;
  char byKind;
  char byLvClass;
  unsigned int dwVer;
  char bySortType;
  char byPage;
};

/* 1735 */
struct _a_trade_reg_item_request_clzo
{
  char byStoreIndex;
  unsigned __int16 wItemSerial;
  char byAmount;
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwPrice;
};

/* 1736 */
struct _a_trade_adjust_price_request_zocl
{
  char byStoreIndex;
  unsigned __int16 wItemSerial;
  unsigned int dwNewPrice;
};

/* 1737 */
struct _a_trade_clear_item_request_zocl
{
  char byStoreIndex;
  unsigned __int16 wItemSerial;
};

/* 1738 */
struct _a_trade_buy_item_request_zocl::__list
{
  unsigned __int16 wListIndex;
  unsigned int dwNodeSerial;
  unsigned int dwPrice;
};

/* 1739 */
struct _a_trade_buy_item_request_zocl
{
  char byStoreIndex;
  char byGoodNum;
  _a_trade_buy_item_request_zocl::__list GoodList[10];
};

/* 1740 */
struct _a_trade_continue_reged_request_clzo::__list
{
  char bOk;
  unsigned __int16 wItemSerial;
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwPrice;
};

/* 1741 */
struct _a_trade_continue_reged_request_clzo
{
  char byRegedNum;
  _a_trade_continue_reged_request_clzo::__list List[10];
};

/* 1742 */
struct _enter_world_request_zone
{
  unsigned int dwAccountSerial;
  unsigned int dwMasterKey[4];
  char bFullMode;
  unsigned int dwProtocolVer;
};

/* 1743 */
struct _reged_char_request_zone
{
  char dummy[1];
};

/* 1744 */
struct _add_char_request_zone
{
  char bySlotIndex;
  unsigned __int16 wszCharName[17];
  char byRaceSexCode;
  char szClassCode[5];
  unsigned int dwBaseShape;
};

/* 1745 */
struct _del_char_request_zone
{
  char bySlotIndex;
};

/* 1746 */
struct _sel_char_request_zone
{
  char bySlotIndex;
};

/* 1747 */
struct _moveout_user_request_zone
{
  char byNextZoneType;
};

/* 1748 */
struct _tutorial_process_report_clzo
{
  char sDum;
};

/* 1749 */
struct _alive_char_request_clzo
{
  char byCase;
  unsigned int dwSerial;
  unsigned __int16 wszNewName[17];
  char bySlotIndex;
};

/* 1750 */
struct _transform_siege_mode_request_clzo
{
  unsigned __int16 wItemSerial;
};

/* 1751 */
struct _release_siege_mode_request_clzo
{
  char sDum;
};

/* 1752 */
struct _mine_start_request_clzo
{
  char byMineIndex;
  char byOreIndex;
  unsigned __int16 wBatterySerial;
};

/* 1753 */
struct _mine_cancle_request_clzo
{
  char sDum;
};

/* 1754 */
struct _ore_cutting_request_clzo
{
  char byCuttingHouse;
  unsigned __int16 wOreSerial;
  char byProcessNum;
};

/* 1755 */
struct _ore_into_bag_request_clzo
{
  unsigned __int16 wResIndex;
  unsigned __int16 wSerial;
  char byAddAmount;
};

/* 1756 */
struct _cutting_complete_request_clzo
{
  char byNpcRace;
};

/* 1757 */
struct _animus_recall_request_clzo
{
  unsigned int dwAnimusItemSerial;
  unsigned __int16 wAnimusClientHP;
  unsigned __int16 wAnimusClientFP;
};

/* 1758 */
struct _animus_return_request_clzo
{
  char dummy[1];
};

/* 1759 */
struct _animus_command_request_clzo
{
  char byCommandCode;
};

/* 1760 */
struct _animus_target_request_clzo
{
  char byObjectID;
  unsigned __int16 wObjectIndex;
  unsigned int dwObjectSerial;
};

/* 1761 */
struct _select_class_request_clzo
{
  unsigned __int16 wSelClassIndex;
  char bySelectRewardItem;
};

/* 1762 */
struct _init_class_result_zocl
{
  char byRet;
};

/* 1763 */
struct _init_class_cost_result_zocl
{
  unsigned int m_dwCostGold;
};

/* 1764 */
struct _can_select_class_result_zocl
{
  char byRet;
  char byIsRealClassUp;
};

/* 1765 */
struct _select_waited_quest_report_clzo
{
  char bySelectQuestIndex;
};

/* 1766 */
struct _quest_select_reward_repart_clzo
{
  char byQuestDBSlot;
  char bySelectItemSlotIndex;
  char byLinkQuestIndex;
};

/* 1767 */
struct _npc_dialog_request_clzo
{
  char byStoreIndex;
  char bGive;
};

/* 1768 */
struct _brief_pass_report_clzo
{
  char bySlotIndex;
};

/* 1769 */
struct _propose_vote_request_clzo
{
  char byLimGrade;
  unsigned __int16 wContentSize;
  unsigned __int16 wszContent[1280];
};

/* 1770 */
struct _cast_vote_request_clzo
{
  int nVoteSerial;
  char byCode;
};

/* 1771 */
struct _move_request_clzo
{
  unsigned int dwCount;
  char byMoveType;
  float fCur[3];
  char byDirect;
  __int16 zTar[2];
};

/* 1772 */
struct _real_movpos_request_clzo
{
  unsigned int dwCount;
  float fCur[3];
};

/* 1773 */
struct _player_stop_clzo
{
  unsigned int dwCount;
  float fCur[3];
};

/* 1774 */
struct _goto_baseportal_request_clzo
{
  unsigned __int16 wItemSerial;
};

/* 1775 */
struct _goto_avator_request_clzo
{
  unsigned __int16 wszAvatorName[17];
};

/* 1776 */
struct _move_type_change_request_clzo
{
  char byMoveType;
};

/* 1777 */
struct _object_server_pos_result_zocl
{
  char byErrCode;
  char byObjKind;
  char byObjID;
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
  float fServerPos[3];
};

/* 1778 */
struct _object_server_pos_request_clzo
{
  char byObjKind;
  char byObjID;
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
};

/* 1779 */
struct _party_join_invitation_clzo
{
  unsigned __int16 wDstIndex;
};

/* 1780 */
struct _party_join_invitation_answer_clzo
{
  _CLID idBoss;
};

/* 1781 */
struct _party_join_application_clzo
{
  unsigned __int16 wBossIndex;
};

/* 1782 */
struct _party_join_application_answer_clzo
{
  _CLID idApplicant;
};

/* 1783 */
struct _party_leave_self_request_clzo
{
  char dummy[1];
};

/* 1784 */
struct _party_leave_compulsion_request_clzo
{
  unsigned int dwExiterSerial;
};

/* 1785 */
struct _party_disjoint_request_clzo
{
  char dummy[1];
};

/* 1786 */
struct _party_succession_request_clzo
{
  unsigned int dwSuccessorSerial;
};

/* 1787 */
struct _party_lock_request_clzo
{
  char bLock;
};

/* 1788 */
struct _alter_party_loot_share_request_clzo
{
  char byLootShareMode;
};

/* 1789 */
struct _move_potal_request_clzo
{
  char byPotalIndex;
};

/* 1790 */
struct _regist_bind_request_clzo
{
  unsigned __int16 wNPCIndex;
};

/* 1791 */
struct _trans_ship_renew_ticket_request_clzo
{
  unsigned __int16 wTicketItemSerial;
};

/* 1792 */
struct _enter_return_gate_request_clzo
{
  unsigned __int16 wGateInx;
};

/* 1793 */
#pragma pack(push, 4)
struct CItemBox
{
  CGameObject baseclass_0;
  unsigned int m_dwOwnerSerial;
  unsigned __int16 m_wOwnerIndex;
  unsigned int m_dwThrowerSerial;
  char m_byThrowerID;
  unsigned __int16 m_wThrowerIndex;
  unsigned __int16 m_wMonRecIndex;
  char m_bBossMob;
  unsigned __int16 m_wszThrowerName[17];
  char m_aszThrowerName[17];
  unsigned int m_dwThrowerCharSerial;
  char m_szThrowerID[13];
  char m_byThrowerRaceCode;
  char m_byThrowerDegree;
  char *m_szThrowerItemHistoryFileName;
  unsigned int m_dwLootStartTime;
  int m_nStateCode;
  unsigned int m_dwLastDestroyTime;
  char m_byCreateCode;
  unsigned int m_dwPartyBossSerial;
  char m_bPartyShare;
  char m_bCompDgr;
  _STORAGE_LIST::_db_con m_Item;
  char m_bHide;
};
#pragma pack(pop)

/* 1794 */
struct _itembox_take_request_clzo
{
  unsigned __int16 wItemBoxIndex;
  unsigned __int16 wAddSerial;
};

/* 1795 */
struct _throw_storage_request_clzo
{
  _STORAGE_POS_INDIV Item;
};

/* 1796 */
struct _use_potion_request_clzo
{
  _STORAGE_POS_INDIV Item;
};

/* 1797 */
struct _equip_part_request_clzo
{
  _STORAGE_POS_INDIV Item;
};

/* 1798 */
struct _embellish_request_clzo
{
  _STORAGE_POS_INDIV Item;
  unsigned __int16 wChangeSerial;
};

/* 1799 */
struct _off_part_request_clzo
{
  _STORAGE_POS_INDIV Item;
};

/* 1800 */
struct _make_item_request_clzo
{
  _STORAGE_POS_INDIV ipMakeTool;
  unsigned __int16 wManualIndex;
  char byMaterialNum;
  _STORAGE_POS_INDIV ipMaterials[100];
};

/* 1801 */
struct _upgrade_item_request_clzo
{
  _STORAGE_POS_INDIV m_posUpgItem;
  _STORAGE_POS_INDIV m_posTalik;
  _STORAGE_POS_INDIV m_posToolItem;
  char byJewelNum;
  _STORAGE_POS_INDIV m_posUpgJewel[4];
};

/* 1802 */
struct _downgrade_item_request_clzo
{
  _STORAGE_POS_INDIV m_posUpgItem;
  _STORAGE_POS_INDIV m_posTalik;
  _STORAGE_POS_INDIV m_posToolItem;
};

/* 1803 */
struct _add_bag_request_clzo
{
  unsigned __int16 wBagItemSerial;
};

/* 1804 */
struct _combine_item_request_clzo
{
  unsigned __int16 wManualIndex;
  unsigned __int16 wOverlapItemSerial;
  char byMaterialNum;
  _STORAGE_POS_INDIV ipMaterials[100];
};

/* 1805 */
struct _exchange_item_request_clzo
{
  unsigned __int16 wManualIndex;
  unsigned __int16 wItemSerial;
};

/* 1806 */
struct _use_recover_lossexp_item_result_zocl
{
  char cRet;
};

/* 1807 */
struct _use_recover_lossexp_item_request_clzo
{
  unsigned __int16 wItemSerial;
};

/* 1808 */
struct _new_pos_start_request_clzo
{
  char byMapInMode;
};

/* 1809 */
struct _base_download_request_clzo
{
  char dummy[1];
};

/* 1810 */
struct _inven_download_request_clzo
{
  char dummy[1];
};

/* 1811 */
struct _quest_download_request_clzo
{
  char dummy[1];
};

/* 1812 */
struct _special_download_request_clzo
{
  char dummy[1];
};

/* 1813 */
struct _other_shape_request_clzo
{
  unsigned __int16 wIndex;
  char byReqType;
};

/* 1814 */
struct _player_revival_request_clzo
{
  char dummy[1];
};

/* 1815 */
struct _exit_world_request_clzo
{
  char dummy[1];
};

/* 1816 */
struct _guild_establish_request_clzo
{
  unsigned __int16 wszGuildName[17];
};

/* 1817 */
struct _guild_download_request_clzo
{
  char sDum;
};

/* 1818 */
struct _guild_join_apply_request_clzo
{
  unsigned __int16 wszGuildName[17];
};

/* 1819 */
struct _guild_join_apply_cancel_request_clzo
{
  char sDum;
};

/* 1820 */
struct _guild_join_accept_request_clzo
{
  char bAccept;
  unsigned int dwApplierSerial;
};

/* 1821 */
struct _guild_self_leave_request_clzo
{
  char sDum;
};

/* 1822 */
struct _guild_offer_suggest_request_clzo
{
  char byMatterType;
  unsigned int dwMatterDst;
  unsigned int dwMatterObj1;
  unsigned int dwMatterObj2;
  char byCommentLen;
  unsigned __int16 wszComment[65];
};

/* 1823 */
struct _guild_cancel_suggest_request_clzo
{
  unsigned int dwMatterVoteSynKey;
};

/* 1824 */
struct _guild_vote_request_clzo
{
  unsigned int dwMatterVoteSynKey;
  char byVoteCode;
};

/* 1825 */
struct _guild_query_info_request_clzo
{
  unsigned int dwGuildSerial;
};

/* 1826 */
struct _guild_push_money_request_clzo
{
  int nPushGold;
  int nPushDalant;
};

/* 1827 */
struct _battledungeon_open_request_clzo
{
  unsigned int dwItemSerial;
};

/* 1828 */
struct _goto_dungeon_request_clzo
{
  unsigned __int16 wGateIndex;
  unsigned int dwGateSerial;
};

/* 1829 */
struct _outof_dungeon_request_clzo
{
  char dummy[1];
};

/* 1830 */
struct _darkhole_open_request_clzo
{
  unsigned int dwItemSerial;
};

/* 1831 */
struct _darkhole_enter_request_clzo
{
  unsigned __int16 wHoleIndex;
  unsigned int dwHoleSerial;
};

/* 1832 */
struct _darkhole_giveup_out_request_clzo
{
  char sDum;
};

/* 1833 */
struct _darkhole_clear_out_request_clzo
{
  char sDum;
};

/* 1834 */
struct _darkhole_answer_reenter_request_clzo
{
  char bEnter;
  unsigned __int16 wChannelIndex;
  unsigned int dwChannelSerial;
};

/* 1835 */
struct _login_zone_request_ctzo
{
  char byLoginKey;
};

/* 1836 */
struct _login_zone_result_zoct
{
  char byRet;
};

/* 1837 */
struct _chat_operator_request_clzo
{
  char byRaceCode;
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1838 */
struct _chat_circle_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1839 */
struct _chat_far_request_clzo
{
  unsigned __int16 wszName[17];
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1840 */
struct _chat_party_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1841 */
struct _chat_race_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1842 */
struct _chat_cheat_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1843 */
struct _chat_mgr_whisper_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1844 */
struct _chat_guild_request_clzo
{
  unsigned int dwDstSerial;
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1845 */
struct _chat_map_recv_yesorno_clzo
{
  char byRecv;
};

/* 1846 */
struct _chat_map_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1847 */
struct _chat_raceboss_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1848 */
struct _chat_guild_est_sen_request_clzo
{
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 1849 */
struct _chat_multi_far_request_clzo
{
  unsigned __int16 wSize;
  char sData[500];
};

/* 1850 */
struct _w_name
{
  unsigned __int16 name[17];
};

/* 1851 */
struct _buddy_add_request_clzo
{
  unsigned __int16 wDstIndex;
  unsigned int dwDstSerial;
  unsigned __int16 wszDstName[17];
};

/* 1852 */
struct _buddy_add_answer_clzo
{
  char bAccept;
  unsigned __int16 wAskerIndex;
  unsigned int dwAskerSerial;
};

/* 1853 */
struct _buddy_del_request_clzo
{
  unsigned int dwSerial;
};

/* 1854 */
struct _buddy_download_request_clzo
{
  char sDum;
};

/* 1855 */
struct _billing_close_request_bizo
{
  char szID[13];
};

/* 1856 */
struct _remaintime_personal_request_bizo
{
  char szAccount[13];
  __int16 iType;
  int lRemainTime;
  _SYSTEMTIME stEndDate;
};

/* 1857 */
struct _remaintime_pcbang_request_bizo
{
  char szCMSCode[7];
  __int16 iType;
  int lRemainTime;
  _SYSTEMTIME stEndDate;
};

/* 1858 */
struct _change_type_request_bizo
{
  char szAccount[13];
  char szCMSCode[7];
  __int16 iType;
  int lRemainTime;
  _SYSTEMTIME stEndDate;
  char byReason;
};

/* 1859 */
struct _expire_personal_request_bizo
{
  char szAccount[13];
};

/* 1860 */
struct _expire_pcbang_request_bizo
{
  char szCMSCode[7];
};

/* 1861 */
struct _expire_ipoverflow_request_bizo
{
  char szAccount[13];
};

/* 1862 */
struct _taiwan_billing_user_certify_bizo
{
  char szAccount[13];
  char byCertify;
};

/* 1863 */
struct _billing_info_request_clzo
{
  char dummy[1];
};

/* 1864 */
struct _attack_gen_request_clzo
{
  unsigned int dwCount;
  unsigned __int16 wBulletSerial;
  char byID;
  char byAttPart;
  unsigned __int16 wIndex;
};

/* 1865 */
struct _attack_skill_request_clzo
{
  unsigned int dwCount;
  unsigned __int16 wBulletSerial;
  char byID;
  unsigned __int16 wSkillIndex;
  __int16 zAreaPos[2];
  char byEffectCode;
  unsigned __int16 wIndex;
};

/* 1866 */
struct _attack_force_request_clzo
{
  unsigned int dwCount;
  char byID;
  __int16 zAreaPos[2];
  unsigned __int16 wForceSerial;
  unsigned __int16 wIndex;
};

/* 1867 */
struct _attack_unit_request_clzo
{
  unsigned int dwCount;
  char byID;
  char byWeaponPart;
  unsigned __int16 wIndex;
};

/* 1868 */
struct _attack_test_request_clzo
{
  char byEffectCode;
  char byEffectIndex;
  unsigned __int16 wBulletSerial;
  char byWeaponPart;
  __int16 zTar[2];
};

/* 1869 */
struct _attack_siege_request_clzo
{
  unsigned int dwCount;
  char byID;
  __int16 zAttackPos[2];
  char byAttPart;
  unsigned __int16 wBulletSerial;
  unsigned __int16 wIndex;
};

/* 1870 */
struct _CHRID
{
  char byID;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/* 1871 */
struct _force_request_clzo
{
  unsigned __int16 wForceSerial;
  _CHRID idDst;
  char byAttackSerial;
};

/* 1872 */
struct _skill_request_clzo
{
  char bySkillIndex;
  _CHRID idDst;
  char byAttackSerial;
};

/* 1873 */
struct _class_skill_request_clzo
{
  unsigned __int16 wSkillIndex;
  _CHRID idDst;
  char byAttackSerial;
};

/* 1874 */
struct _thorw_skill_request_clzo
{
  unsigned __int16 wBulletSerial;
  _CHRID idDst;
  char byAttackSerial;
};

/* 1875 */
struct _thorw_unit_request_clzo
{
  _CHRID idDst;
  char byAttackSerial;
};

/* 1876 */
struct _make_tower_request_clzo::__material
{
  unsigned __int16 wItemSerial;
  char byMaterSlotIndex;
  char byAmount;
};

/* 1877 */
struct _make_tower_request_clzo
{
  unsigned __int16 wSkillIndex;
  __int16 zPos[3];
  unsigned __int16 wTowerItemSerial;
  char byMaterialNum;
  _make_tower_request_clzo::__material Material[30];
};

/* 1878 */
struct _back_tower_request_clzo
{
  unsigned int dwTowerObjSerial;
};

/* 1879 */
struct _make_trap_request_clzo
{
  unsigned __int16 wSkillIndex;
  __int16 zPos[3];
  unsigned __int16 wTrapItemSerial;
};

/* 1880 */
struct _decide_recall_request_clzo
{
  unsigned __int16 wRequestID;
  char byAgree;
};

/* 1881 */
struct _open_world_success_acwr
{
  char byWorldCode;
  char szDBName[32];
  char szDBIP[17];
};

/* 1882 */
struct _open_world_failure_acwr
{
  char szErrCode[64];
};

/* 1883 */
struct _trans_account_inform_acwr
{
  _GLBID gidGlobal;
  unsigned int dwKey[4];
  unsigned int dwClientIP;
  unsigned int dwAccountSerial;
  char szAccountID[13];
  char byUserDgr;
  char bySubDgr;
  char bChatLock;
  __int16 iType;
  char szCMS[7];
  int lRemainTime;
  _SYSTEMTIME stEndDate;
};

/* 1884 */
struct _enter_world_result_acwr
{
  _CLID idLocal;
  char byRetCode;
};

/* 1885 */
struct _force_close_command_acwr
{
  _CLID idLocal;
  char bDirectly;
  char byKickType;
  unsigned int dwPushIP;
};

/* 1886 */
struct _world_service_inform_acwr
{
  char bService;
};

/* 1887 */
struct _world_exit_inform_acwr
{
  char dummy[1];
};

/* 1888 */
struct _world_msg_inform_acwr
{
  unsigned __int16 wMsgSize;
  unsigned __int16 wszMsg[1281];
};

/* 1889 */
struct _chat_lock_command_acwr
{
  _CLID idLocal;
  unsigned __int16 wBlockTimeH;
};

/* 1890 */
struct CCmdTarget::XDispatch
{
  unsigned int m_vtbl;
};

/* 1891 */
struct CCmdTarget::XConnPtContainer
{
  unsigned int m_vtbl;
};

/* 1892 */
struct CNoTrackObject
{
  CNoTrackObjectVtbl *vfptr;
};

/* 1893 */
struct CNoTrackObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(CNoTrackObject *this, unsigned int);
};

/* 1894 */
struct CCmdTarget
{
  CObject baseclass_0;
  int m_dwRef;
  IUnknown *m_pOuterUnknown;
  unsigned int m_xInnerUnknown;
  CCmdTarget::XDispatch m_xDispatch;
  int m_bResultExpected;
  CCmdTarget::XConnPtContainer m_xConnPtContainer;
  AFX_MODULE_STATE *m_pModuleState;
};

/* 1895 */
struct IDataObject
{
  IUnknown baseclass_0;
};

/* 1896 */
struct IDropTarget
{
  IUnknown baseclass_0;
};

/* 1897 */
struct COleDropTarget::XDropTarget
{
  IDropTarget baseclass_0;
};

/* 1898 */
struct COleDropTarget
{
  CCmdTarget baseclass_0;
  HWND__ *m_hWnd;
  IDataObject *m_lpDataObject;
  unsigned int m_nTimerID;
  unsigned int m_dwLastTick;
  unsigned int m_nScrollDelay;
  COleDropTarget::XDropTarget m_xDropTarget;
};

/* 1899 */
struct CWnd
{
  CCmdTarget baseclass_0;
  HWND__ *m_hWnd;
  HWND__ *m_hWndOwner;
  unsigned int m_nFlags;
  int (__stdcall *m_pfnSuper)(HWND__ *, unsigned int, unsigned int, int);
  int m_nModalResult;
  COleDropTarget *m_pDropTarget;
  struct COleControlContainer *m_pCtrlCont;
  struct COleControlSite *m_pCtrlSite;
};

/* 1900 */
struct IMessageFilter
{
  IUnknown baseclass_0;
};

/* 1901 */
struct COleMessageFilter::XMessageFilter
{
  IMessageFilter baseclass_0;
};

/* 1902 */
struct COleMessageFilter
{
  CCmdTarget baseclass_0;
  int m_bRegistered;
  int m_nBusyCount;
  int m_bEnableBusy;
  int m_bEnableNotResponding;
  int m_bUnblocking;
  unsigned int m_nRetryReply;
  unsigned int m_nBusyReply;
  unsigned int m_nTimeout;
  COleMessageFilter::XMessageFilter m_xMessageFilter;
};

/* 1903 */
struct CWinThread
{
  CCmdTarget baseclass_0;
  CWnd *m_pMainWnd;
  CWnd *m_pActiveWnd;
  int m_bAutoDelete;
  void *m_hThread;
  unsigned int m_nThreadID;
  int m_nDisablePumpCount;
  tagMSG m_msgCur;
  void *m_pThreadParams;
  unsigned int (__cdecl *m_pfnThreadProc)(void *);
  void (__stdcall *m_lpfnOleTermOrFreeLib)(int, int);
  COleMessageFilter *m_pMessageFilter;
  CPoint m_ptCursorLast;
  unsigned int m_nMsgLast;
};

/* 1904 */
struct CPtrList::CNode
{
  CPtrList::CNode *pNext;
  CPtrList::CNode *pPrev;
  void *data;
};

/* 1905 */
struct CPlex
{
  CPlex *pNext;
};

/* 1906 */
struct CPtrList
{
  CObject baseclass_0;
  CPtrList::CNode *m_pNodeHead;
  CPtrList::CNode *m_pNodeTail;
  int m_nCount;
  CPtrList::CNode *m_pNodeFree;
  CPlex *m_pBlocks;
  int m_nBlockSize;
};

/* 1907 */
struct CDocManager
{
  CObject baseclass_0;
  CPtrList m_templateList;
};

/* 1908 */
struct CRecentFileList
{
  CRecentFileListVtbl *vfptr;
  int m_nSize;
  CString *m_arrNames;
  CString m_strSectionName;
  CString m_strEntryFormat;
  unsigned int m_nStart;
  int m_nMaxDisplayLength;
  CString m_strOriginal;
};

/* 1909 */
struct CCmdUI
{
  CCmdUIVtbl *vfptr;
  unsigned int m_nID;
  unsigned int m_nIndex;
  CMenu *m_pMenu;
  CMenu *m_pSubMenu;
  CWnd *m_pOther;
  int m_bEnableChanged;
  int m_bContinueRouting;
  unsigned int m_nIndexMax;
  CMenu *m_pParentMenu;
};

/* 1910 */
struct CCmdUIVtbl
{
  void (__thiscall *Enable)(CCmdUI *this, int);
  void (__thiscall *SetCheck)(CCmdUI *this, int);
  void (__thiscall *SetRadio)(CCmdUI *this, int);
  void (__thiscall *SetText)(CCmdUI *this, const char *);
};

/* 1911 */
struct CMenu
{
  CObject baseclass_0;
  HMENU__ *m_hMenu;
};

/* 1912 */
struct CRecentFileListVtbl
{
  void (__thiscall *Remove)(CRecentFileList *this, int);
  void (__thiscall *Add)(CRecentFileList *this, const char *);
  void (__thiscall *UpdateMenu)(CRecentFileList *this, CCmdUI *);
  void (__thiscall *ReadList)(CRecentFileList *this);
  void (__thiscall *WriteList)(CRecentFileList *this);
  void *(__thiscall *__vecDelDtor)(CRecentFileList *this, unsigned int);
};

/* 1913 */
struct CCommandLineInfo
{
  CObject baseclass_0;
  int m_bShowSplash;
  int m_bRunEmbedded;
  int m_bRunAutomated;
  CCommandLineInfo::__unnamed m_nShellCommand;
  CString m_strFileName;
  CString m_strPrinterName;
  CString m_strDriverName;
  CString m_strPortName;
};

/* 1914 */
struct CWinApp
{
  CWinThread baseclass_0;
  HINSTANCE__ *m_hInstance;
  HINSTANCE__ *m_hPrevInstance;
  char *m_lpCmdLine;
  int m_nCmdShow;
  const char *m_pszAppName;
  const char *m_pszRegistryKey;
  CDocManager *m_pDocManager;
  int m_bHelpMode;
  const char *m_pszExeName;
  const char *m_pszHelpFilePath;
  const char *m_pszProfileName;
  void *m_hDevMode;
  void *m_hDevNames;
  unsigned int m_dwPromptContext;
  int m_nWaitCursorCount;
  HICON__ *m_hcurWaitCursorRestore;
  CRecentFileList *m_pRecentFileList;
  CCommandLineInfo *m_pCmdInfo;
  unsigned __int16 m_atomApp;
  unsigned __int16 m_atomSystemTopic;
  unsigned int m_nNumPreviewPages;
  unsigned int m_nSafetyPoolSize;
  void (__stdcall *m_lpfnDaoTerm)();
};

/* 1915 */
struct CSimpleList
{
  void *m_pHead;
  unsigned int m_nNextOffset;
};

/* 1916 */
struct CTypedSimpleList<CRuntimeClass *>
{
  CSimpleList baseclass_0;
};

/* 1917 */
struct COleObjectFactory
{
  CCmdTarget baseclass_0;
  COleObjectFactory *m_pNextFactory;
  unsigned int m_dwRegister;
  _GUID m_clsid;
  CRuntimeClass *m_pRuntimeClass;
  int m_bMultiInstance;
  const char *m_lpszProgID;
  char m_bLicenseChecked;
  char m_bLicenseValid;
  char m_bRegistered;
  char m_bOAT;
  COleObjectFactory::XClassFactory m_xClassFactory;
};

/* 1918 */
struct IClassFactory
{
  IUnknown baseclass_0;
};

/* 1919 */
struct IClassFactory2
{
  IClassFactory baseclass_0;
};

/* 1920 */
struct COleObjectFactory::XClassFactory
{
  IClassFactory2 baseclass_0;
};

/* 1921 */
struct CTypedSimpleList<COleObjectFactory *>
{
  CSimpleList baseclass_0;
};

/* 1922 */
struct CTypedSimpleList<CDynLinkLibrary *>
{
  CSimpleList baseclass_0;
};

/* 1923 */
struct CTypedSimpleList<COleControlLock *>
{
  CSimpleList baseclass_0;
};

/* 1924 */
struct IDispatch
{
  IUnknown baseclass_0;
};

/* 1925 */
struct _DAO
{
  IDispatch baseclass_0;
};

/* 1926 */
struct _DAODBEngine
{
  _DAO baseclass_0;
};

/* 1927 */
struct CMapPtrToPtr::CAssoc
{
  CMapPtrToPtr::CAssoc *pNext;
  void *key;
  void *value;
};

/* 1928 */
struct CMapPtrToPtr
{
  CObject baseclass_0;
  CMapPtrToPtr::CAssoc **m_pHashTable;
  unsigned int m_nHashTableSize;
  int m_nCount;
  CMapPtrToPtr::CAssoc *m_pFreeList;
  CPlex *m_pBlocks;
  int m_nBlockSize;
};

/* 1929 */
struct _AFX_DAO_STATE
{
  CNoTrackObject baseclass_0;
  int m_bOleInitialized;
  _DAODBEngine *m_pDAODBEngine;
  CMapPtrToPtr m_mapWorkspaces;
};

/* 1930 */
struct ITypeLib
{
  IUnknown baseclass_0;
};

/* 1931 */
struct ITypeInfo
{
  IUnknown baseclass_0;
};

/* 1932 */
struct CTypeLibCache
{
  _GUID *m_pTypeLibID;
  unsigned int m_lcid;
  ITypeLib *m_ptlib;
  _GUID m_guidInfo;
  ITypeInfo *m_ptinfo;
  int m_cRef;
};

/* 1933 */
struct CTypeLibCacheMap
{
  CMapPtrToPtr baseclass_0;
};

/* 1934 */
struct CThreadLocalObject
{
  int m_nSlot;
};

/* 1935 */
struct CThreadLocal<AFX_MODULE_THREAD_STATE>
{
  CThreadLocalObject baseclass_0;
};

/* 1936 */
struct AFX_MODULE_STATE
{
  CNoTrackObject baseclass_0;
  CWinApp *m_pCurrentWinApp;
  HINSTANCE__ *m_hCurrentInstanceHandle;
  HINSTANCE__ *m_hCurrentResourceHandle;
  const char *m_lpszCurrentAppName;
  char m_bDLL;
  char m_bSystem;
  char m_bReserved[2];
  unsigned int m_fRegisteredClasses;
  CRuntimeClass *m_pClassInit;
  CTypedSimpleList<CRuntimeClass *> m_classList;
  COleObjectFactory *m_pFactoryInit;
  CTypedSimpleList<COleObjectFactory *> m_factoryList;
  int m_nObjectCount;
  int m_bUserCtrl;
  char m_szUnregisterList[4096];
  int (__stdcall *m_pfnAfxWndProc)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int m_dwVersion;
  void (__stdcall *m_pfnFilterToolTipMessage)(tagMSG *, CWnd *);
  CTypedSimpleList<CDynLinkLibrary *> m_libraryList;
  HINSTANCE__ *m_appLangDLL;
  struct COccManager *m_pOccManager;
  CTypedSimpleList<COleControlLock *> m_lockList;
  _AFX_DAO_STATE *m_pDaoState;
  CTypeLibCache m_typeLibCache;
  CTypeLibCacheMap *m_pTypeLibCacheMap;
  CThreadLocal<AFX_MODULE_THREAD_STATE> m_thread;
};

/* 1937 */
struct HACCEL__
{
  int unused;
};

/* 1938 */
struct CDocTemplate
{
  CCmdTarget baseclass_0;
  int m_bAutoDelete;
  CObject *m_pAttachedFactory;
  HMENU__ *m_hMenuInPlace;
  HACCEL__ *m_hAccelInPlace;
  HMENU__ *m_hMenuEmbedding;
  HACCEL__ *m_hAccelEmbedding;
  HMENU__ *m_hMenuInPlaceServer;
  HACCEL__ *m_hAccelInPlaceServer;
  unsigned int m_nIDResource;
  unsigned int m_nIDServerResource;
  unsigned int m_nIDEmbeddingResource;
  unsigned int m_nIDContainerResource;
  CRuntimeClass *m_pDocClass;
  CRuntimeClass *m_pFrameClass;
  CRuntimeClass *m_pViewClass;
  CRuntimeClass *m_pOleFrameClass;
  CRuntimeClass *m_pOleViewClass;
  CString m_strDocStrings;
};

/* 1939 */
struct CDocument
{
  CCmdTarget baseclass_0;
  CString m_strTitle;
  CString m_strPathName;
  CDocTemplate *m_pDocTemplate;
  CPtrList m_viewList;
  int m_bModified;
  int m_bAutoDelete;
  int m_bEmbedded;
};

/* 1940 */
struct CDialog
{
  CWnd baseclass_0;
  unsigned int m_nIDHelp;
  const char *m_lpszTemplateName;
  void *m_hDialogTemplate;
  DLGTEMPLATE *m_lpDialogTemplate;
  void *m_lpDialogInit;
  CWnd *m_pParentWnd;
  HWND__ *m_hWndTop;
  struct _AFX_OCC_DIALOG_INFO *m_pOccDialogInfo;
};

/* 1941 */
struct CDisplayView
{
  CDialog baseclass_0;
  CPoint m_ptLBtn;
  int m_nVerRange;
  int m_nHorzRange;
  int m_nVertPos;
  int m_nHorzPos;
  int m_nVerPage;
  int m_nHorzPage;
};

/* 1942 */
struct CPtrArray
{
  CObject baseclass_0;
  void **m_pData;
  int m_nSize;
  int m_nMaxSize;
  int m_nGrowBy;
};

/* 1943 */
struct CPropertySheet
{
  CWnd baseclass_0;
  _AFX_OLDPROPSHEETHEADER m_psh;
  CPtrArray m_pages;
  CString m_strCaption;
  CWnd *m_pParentWnd;
  int m_bStacked;
  int m_bModeless;
};

/* 1944 */
struct CPropertyPage
{
  CDialog baseclass_0;
  _AFX_OLDPROPSHEETPAGE m_psp;
  CString m_strCaption;
  int m_bFirstSetActive;
};

/* 1945 */
struct CButton
{
  CWnd baseclass_0;
};

/* 1946 */
struct CTCPTab
{
  CPropertyPage baseclass_0;
  char m_bUpdate;
  __declspec(align(4)) CButton m_btReLoadFile;
  unsigned int m_edConnSocketNum;
  unsigned int m_edOddMsg;
  int m_edConnectUserNum;
  int m_edTotalUser;
  int m_edMainThreadControlSleepIgnore;
  int m_edMainThreadControlSleepTerm;
  int m_edMainThreadControlSleepValue;
  CString m_edChkLoopTime;
  CString m_edChkPercent;
  CString m_edNetLoopTime;
  CString m_edNetPercent;
  CString m_edObjLoopTime;
  CString m_edObjPercent;
  int m_edSaveFail;
};

/* 1947 */
#pragma pack(push, 4)
struct CIPXTab
{
  CPropertyPage baseclass_0;
  char m_bUpdate;
  int m_edAccretiaNum;
  int m_edBellatoNum;
  int m_edCoraNum;
};
#pragma pack(pop)

/* 1948 */
struct CTreeCtrl
{
  CWnd baseclass_0;
};

/* 1949 */
struct CServerTab
{
  CPropertyPage baseclass_0;
  CTreeCtrl m_trServer;
};

/* 1950 */
struct CObjectTab
{
  CPropertyPage baseclass_0;
  CButton m_btAuto;
  CTreeCtrl m_trObject;
};

/* 1951 */
struct CMapTab
{
  CPropertyPage baseclass_0;
  struct _TREEITEM *m_hMap[32];
  CTreeCtrl m_trMap;
};

/* 1952 */
struct CInfoSheet
{
  CPropertySheet baseclass_0;
  CTCPTab m_tabTCP;
  CIPXTab m_tabIPX;
  CServerTab m_tabServer;
  CObjectTab m_tabObject;
  CMapTab m_tabMap;
};

/* 1953 */
struct CFrameWnd
{
  CWnd baseclass_0;
  int m_bAutoMenuEnable;
  int m_nWindow;
  HMENU__ *m_hMenuDefault;
  HACCEL__ *m_hAccelTable;
  unsigned int m_dwPromptContext;
  int m_bHelpMode;
  CFrameWnd *m_pNextFrameWnd;
  CRect m_rectBorder;
  COleFrameHook *m_pNotifyHook;
  CPtrList m_listControlBars;
  int m_nShowDelay;
  unsigned int m_nIDHelp;
  unsigned int m_nIDTracking;
  unsigned int m_nIDLastMessage;
  CView *m_pViewActive;
  int (__stdcall *m_lpfnCloseProc)(CFrameWnd *);
  unsigned int m_cModalStack;
  HWND__ **m_phWndDisable;
  HMENU__ *m_hMenuAlt;
  CString m_strTitle;
  int m_bInRecalcLayout;
  CRuntimeClass *m_pFloatingFrameClass;
  unsigned int m_nIdleFlags;
};

/* 1954 */
struct IOleWindow
{
  IUnknown baseclass_0;
};

/* 1955 */
struct IOleInPlaceActiveObject
{
  IOleWindow baseclass_0;
};

/* 1956 */
struct CObList::CNode
{
  CObList::CNode *pNext;
  CObList::CNode *pPrev;
  CObject *data;
};

/* 1957 */
struct CObList
{
  CObject baseclass_0;
  CObList::CNode *m_pNodeHead;
  CObList::CNode *m_pNodeTail;
  int m_nCount;
  CObList::CNode *m_pNodeFree;
  CPlex *m_pBlocks;
  int m_nBlockSize;
};

/* 1958 */
struct IStorage
{
  IUnknown baseclass_0;
};

/* 1959 */
#pragma pack(push, 4)
struct tagDVTARGETDEVICE
{
  unsigned int tdSize;
  unsigned __int16 tdDriverNameOffset;
  unsigned __int16 tdDeviceNameOffset;
  unsigned __int16 tdPortNameOffset;
  unsigned __int16 tdExtDevmodeOffset;
  char tdData[1];
};
#pragma pack(pop)

/* 1960 */
struct COleDocument
{
  CDocument baseclass_0;
  CObList m_docItemList;
  unsigned int m_dwNextItemNumber;
  int m_bLastVisible;
  int m_bCompoundFile;
  IStorage *m_lpRootStg;
  int m_bSameAsLoad;
  int m_bRemember;
  tagDVTARGETDEVICE *m_ptd;
};

/* 1961 */
struct CDocItem
{
  CCmdTarget baseclass_0;
  COleDocument *m_pDocument;
};

/* 1962 */
struct IOleObject
{
  IUnknown baseclass_0;
};

/* 1963 */
struct IViewObject
{
  IUnknown baseclass_0;
};

/* 1964 */
struct IViewObject2
{
  IViewObject baseclass_0;
};

/* 1965 */
struct ILockBytes
{
  IUnknown baseclass_0;
};

/* 1966 */
struct CView
{
  CWnd baseclass_0;
  CDocument *m_pDocument;
};

/* 1967 */
struct COleFrameHook
{
  CCmdTarget baseclass_0;
  CFrameWnd *m_pFrameWnd;
  IOleInPlaceActiveObject *m_lpActiveObject;
  COleClientItem *m_pActiveItem;
  HWND__ *m_hWnd;
  int m_bInModalState;
  int m_bToolBarHidden;
  HACCEL__ *m_hAccelTable;
  unsigned int m_nModelessCount;
  CString m_strObjName;
  COleFrameHook::XOleInPlaceFrame m_xOleInPlaceFrame;
  COleFrameHook::XOleCommandTarget m_xOleCommandTarget;
};

/* 1968 */
struct IOleClientSite
{
  IUnknown baseclass_0;
};

/* 1969 */
struct COleClientItem::XOleClientSite
{
  IOleClientSite baseclass_0;
};

/* 1970 */
struct IAdviseSink
{
  IUnknown baseclass_0;
};

/* 1971 */
struct COleClientItem::XAdviseSink
{
  IAdviseSink baseclass_0;
};

/* 1972 */
struct IOleInPlaceSite
{
  IOleWindow baseclass_0;
};

/* 1973 */
struct COleClientItem::XOleIPSite
{
  IOleInPlaceSite baseclass_0;
};

/* 1974 */
struct COleClientItem
{
  CDocItem baseclass_0;
  IOleObject *m_lpObject;
  IViewObject2 *m_lpViewObject;
  unsigned int m_dwItemNumber;
  tagDVASPECT m_nDrawAspect;
  int m_scLast;
  IStorage *m_lpStorage;
  ILockBytes *m_lpLockBytes;
  unsigned int m_dwConnection;
  char m_bLinkUnavail;
  char m_bMoniker;
  char m_bLocked;
  char m_bNeedCommit;
  char m_bClosing;
  char m_bReserved[3];
  IStorage *m_lpNewStorage;
  COleClientItem::ItemState m_nItemState;
  OLE_OBJTYPE m_nItemType;
  CView *m_pView;
  unsigned int m_dwContainerStyle;
  COleFrameHook *m_pInPlaceFrame;
  COleFrameHook *m_pInPlaceDoc;
  HWND__ *m_hWndServer;
  COleClientItem::XOleClientSite m_xOleClientSite;
  COleClientItem::XAdviseSink m_xAdviseSink;
  COleClientItem::XOleIPSite m_xOleIPSite;
};

/* 1975 */
struct IOleInPlaceUIWindow
{
  IOleWindow baseclass_0;
};

/* 1976 */
struct IOleInPlaceFrame
{
  IOleInPlaceUIWindow baseclass_0;
};

/* 1977 */
struct COleFrameHook::XOleInPlaceFrame
{
  IOleInPlaceFrame baseclass_0;
};

/* 1978 */
struct IOleCommandTarget
{
  IUnknown baseclass_0;
};

/* 1979 */
struct COleFrameHook::XOleCommandTarget
{
  IOleCommandTarget baseclass_0;
};

/* 1980 */
struct CControlBar
{
  CWnd baseclass_0;
  int m_bAutoDelete;
  int m_cxLeftBorder;
  int m_cxRightBorder;
  int m_cyTopBorder;
  int m_cyBottomBorder;
  int m_cxDefaultGap;
  unsigned int m_nMRUWidth;
  int m_nCount;
  void *m_pData;
  unsigned int m_nStateFlags;
  unsigned int m_dwStyle;
  unsigned int m_dwDockStyle;
  CFrameWnd *m_pDockSite;
  CDockBar *m_pDockBar;
  CDockContext *m_pDockContext;
};

/* 1981 */
struct CDockBar
{
  CControlBar baseclass_0;
  int m_bFloating;
  CPtrArray m_arrBars;
  int m_bLayoutQuery;
  CRect m_rectLayout;
};

/* 1982 */
struct CDockContext
{
  CDockContextVtbl *vfptr;
  CPoint m_ptLast;
  CRect m_rectLast;
  CSize m_sizeLast;
  int m_bDitherLast;
  CRect m_rectDragHorz;
  CRect m_rectDragVert;
  CRect m_rectFrameDragHorz;
  CRect m_rectFrameDragVert;
  CControlBar *m_pBar;
  CFrameWnd *m_pDockSite;
  unsigned int m_dwDockStyle;
  unsigned int m_dwOverDockStyle;
  unsigned int m_dwStyle;
  int m_bFlip;
  int m_bForceFrame;
  CDC *m_pDC;
  int m_bDragging;
  int m_nHitTest;
  unsigned int m_uMRUDockID;
  CRect m_rectMRUDockPos;
  unsigned int m_dwMRUFloatStyle;
  CPoint m_ptMRUFloatPos;
};

/* 1983 */
struct CDockContextVtbl
{
  void (__thiscall *StartDrag)(CDockContext *this, CPoint);
  void (__thiscall *StartResize)(CDockContext *this, int, CPoint);
  void (__thiscall *ToggleDocking)(CDockContext *this);
};

/* 1984 */
struct CDC
{
  CObject baseclass_0;
  HDC__ *m_hDC;
  HDC__ *m_hAttribDC;
  int m_bPrinting;
};

/* 1985 */
struct CStatusBar
{
  CControlBar baseclass_0;
  int m_nMinHeight;
};

/* 1986 */
struct CGameServerDoc
{
  CDocument baseclass_0;
  CDisplayView m_DisplayView;
  CInfoSheet m_InfoSheet;
  CStatusBar *m_pStatusBar;
  CWnd *m_pwndMainFrame;
  CWnd *m_pwndMainView;
};

/* 1987 */
#pragma pack(push, 4)
struct CMerchant
{
  CCharacter baseclass_0;
  CItemStore *m_pItemStore;
  char m_byRaceCode;
  unsigned int m_dwLastDestroyTime;
  int m_nLeftTicketNum[2];
};
#pragma pack(pop)

/* 1988 */
struct _DELAY_PROCESS
{
  _DELAY_PROCESSVtbl *vfptr;
  unsigned int m_dwObjectNum;
  unsigned int *m_pdwPushTime;
  unsigned int *m_pdwPushSerial;
  CNetIndexList m_list;
  int m_dwTerm;
};

/* 1989 */
struct _DELAY_PROCESSVtbl
{
  void (__thiscall *Process)(_DELAY_PROCESS *this, unsigned int, unsigned int);
};

/* 1990 */
struct _MOVE_LOBBY_DELAY
{
  _DELAY_PROCESS baseclass_0;
};

/* 1991 */
struct CMainFrame
{
  CFrameWnd baseclass_0;
  char m_bExitConfirm;
  __declspec(align(4)) CStatusBar m_wndStatusBar;
};

/* 1992 */
struct _ItemLooting_fld
{
  _base_fld baseclass_0;
  int m_nLootRate;
  int m_nLootTime;
  int m_nOperationCount;
  int m_nLootListCount;
  char m_itmLootCodeKey[200][8];
};

/* 1993 */
struct _weapon_bullet_link_fld
{
  _base_fld baseclass_0;
  int m_nUsingWeaponNum;
  char m_strUsingWeaponCode[50][64];
};

/* 1994 */
struct _OreCutting_fld
{
  _base_fld baseclass_0;
  char m_strResource_Item[64];
  int m_nCutting_probability;
};

/* 1995 */
#pragma pack(push, 8)
struct CMainThread::_GameDataBaseInit::__guild_list
{
  unsigned int dwGuildSerial;
  char byGuildGrade;
  char byRace;
  unsigned __int16 wszGuildName[17];
  unsigned int dwEmblemBack;
  unsigned int dwEmblemMark;
  double dDalant;
  double dGold;
  char byGrade;
};
#pragma pack(pop)

/* 1996 */
struct _GuardTowerItem_fld::__material
{
  char strMaterialCode[64];
  int nMaterialNum;
};

/* 1997 */
struct _GuardTowerItem_fld
{
  _base_fld baseclass_0;
  char m_strModle[64];
  char m_strCharMeshID[64];
  char m_strName[64];
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nExpertLim;
  int m_nExpTime;
  int m_nEffectGroup;
  int m_nIconIDX;
  int m_nLevel;
  int m_nHeight;
  int m_nWidth;
  float m_fAttGap;
  int m_nAttack_DP;
  int m_nGADst;
  int m_nGASpd;
  int m_nAttSklUnit;
  int m_nGAMinAF;
  int m_nGAMaxAF;
  int m_nGAMinSelProb;
  int m_nGAMaxSelProb;
  int m_nDefSklUnit;
  int m_nDefFc;
  float m_fDefGap;
  float m_fDefFacing;
  int m_nProperty;
  int m_nFireTol;
  int m_nWaterTol;
  int m_nSoilTol;
  int m_nWindTol;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nDuration;
  int m_nMaxHP;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  _GuardTowerItem_fld::__material m_Material[3];
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_bUpgrade;
  char m_strTooltipIndex[64];
  int m_nAttEffType;
  int m_nDefEffType;
};

/* 1998 */
#pragma pack(push, 4)
struct _qry_sheet_reged
{
  unsigned int dwAccountSerial;
  _REGED RegedData[3];
  _NOT_ARRANGED_AVATOR_DB ArrangedData[15];
  char in_szIP[16];
  char out_bPcBang;
};
#pragma pack(pop)

/* 1999 */
#pragma pack(push, 2)
struct _qry_sheet_insert
{
  unsigned int dwAccountSerial;
  char szAccountID[13];
  _REGED_AVATOR_DB InsertData;
};
#pragma pack(pop)

/* 2000 */
#pragma pack(push, 4)
struct _qry_sheet_delete
{
  char bySlotIndex;
  char byRaceCode;
  unsigned int dwAvatorSerial;
};
#pragma pack(pop)

/* 2001 */
#pragma pack(push, 8)
struct _qry_sheet_load
{
  unsigned int dwAvatorSerial;
  _AVATOR_DATA LoadData;
  char bAddItem[100];
  unsigned int dwAddDalant;
  unsigned int dwCheckSum;
  char bTrunkAddItem[100];
  char byTrunkOldSlot;
  double dTrunkOldDalant;
  double dTrunkOldGold;
  char bCreateTrunkFree;
};
#pragma pack(pop)

/* 2002 */
#pragma pack(push, 2)
struct _qry_sheet_logout
{
  unsigned int dwAvatorSerial;
  _AVATOR_DATA NewData;
  _AVATOR_DATA OldData;
  char bCheckLowHigh;
};
#pragma pack(pop)

/* 2003 */
#pragma pack(push, 4)
struct _qry_sheet_lobby
{
  unsigned int dwAvatorSerial;
  _AVATOR_DATA NewData;
  _AVATOR_DATA OldData;
};
#pragma pack(pop)

/* 2004 */
#pragma pack(push, 4)
struct _log_sheet_lv
{
  unsigned int dwAvatorSerial;
  char byLv;
  unsigned int dwTotalPlayMin;
};
#pragma pack(pop)

/* 2005 */
struct _log_sheet_usernum
{
  int nAveragePerHour;
  int nMaxPerHour;
};

/* 2006 */
#pragma pack(push, 4)
struct log_case_charselect
{
  char szID[13];
  unsigned int dwIDSerial;
  unsigned __int16 wszName[17];
  unsigned int dwNameSerial;
  unsigned __int16 dwYear;
  char byMonth;
  char byDay;
  char byHour;
  char byMin;
  char bySec;
};
#pragma pack(pop)

/* 2007 */
#pragma pack(push, 8)
struct _qry_case_pvpinfosave
{
  unsigned int dwSerial;
  char byLevel;
  __int16 zClassHistory[3];
  double dPvpPoint;
};
#pragma pack(pop)

/* 2008 */
#pragma pack(push, 4)
struct _qry_case_contsave
{
  unsigned int dwAvatorSerial;
  _AVATOR_DATA NewData;
  _AVATOR_DATA OldData;
};
#pragma pack(pop)

/* 2009 */
struct _qry_case_addpvppoint
{
  unsigned int dwSerial;
  unsigned int dwPoint;
  unsigned int dwCashBag;
};

/* 2010 */
struct _qry_case_insertitem
{
  unsigned int dwSerial;
  unsigned int dwItemCodeK;
  unsigned int dwItemCodeD;
  unsigned int dwItemCodeU;
};

/* 2011 */
struct _qry_case_insertguild
{
  unsigned int in_guildindex;
  unsigned __int16 in_w_guildName[17];
  char in_guildRace;
  char in_membernum;
  unsigned int in_memberindex[8];
  unsigned int in_memberserial[8];
  unsigned __int16 tmp_w_membername[8][17];
  char tmp_lv[8];
  char tmp_grade[8];
  unsigned int tmp_pvp[8];
  unsigned int out_guildserial;
  unsigned int tmp_Esterindex;
  unsigned int tmp_Esterserial;
};

/* 2012 */
#pragma pack(push, 4)
struct _qry_case_joinacguild
{
  unsigned int in_guildindex;
  unsigned int in_guildserial;
  unsigned int in_applierindex;
  unsigned int in_applierserial;
  unsigned int in_accepterserial;
  char in_Grade;
  int in_MemberNum;
};
#pragma pack(pop)

/* 2013 */
struct _qry_case_selfleave
{
  unsigned int in_leaverserial;
  int in_MemberNum;
  unsigned int tmp_leaverindex;
  unsigned int tmp_guildindex;
  unsigned int tmp_guildserial;
};

/* 2014 */
#pragma pack(push, 8)
struct _qry_case_inputgmoney
{
  unsigned int in_pusherserial;
  unsigned __int16 in_w_pushername[17];
  unsigned int tmp_guildindex;
  unsigned int in_guildserial;
  int in_addgold;
  int in_adddalant;
  char in_date[4];
  double out_totalgold;
  double out_totaldalant;
};
#pragma pack(pop)

/* 2015 */
struct _qry_case_disjointguild
{
  unsigned int in_guildserial;
  unsigned int tmp_guildindex;
};

/* 2016 */
#pragma pack(push, 4)
struct _qry_case_alive_char
{
  char in_byCase;
  unsigned int in_dwSerial;
  unsigned __int16 in_w_szName[17];
  char in_bySlot;
  _REGED out_AliveAvator;
};
#pragma pack(pop)

/* 2017 */
#pragma pack(push, 4)
struct _log_change_class_after_init_class
{
  unsigned int dwCharacSerial;
  char byType;
  char szPrevClassCode[5];
  char szNextClassCode[5];
  int nClassInitCnt;
  char byLastClassGrade;
  unsigned __int16 dwYear;
  char byMonth;
  char byDay;
  char byHour;
  char byMin;
  char bySec;
};
#pragma pack(pop)

/* 2018 */
struct _trans_account_report_wrac
{
  _GLBID gidGlobal;
  char byRetCode;
};

/* 2019 */
struct _trans_gm_msg_inform_zocl
{
  unsigned __int16 wMsgSize;
  unsigned __int16 wszChatData[1281];
};

/* 2020 */
struct _user_num_report_wrac
{
  unsigned int dwAveragePerHour;
  unsigned int dwMaxPerHour;
  unsigned int dwPlayerPerRace[3];
  char szLogDate[17];
};

/* 2021 */
struct _open_world_request_wrac
{
  char szWorldName[33];
  char byRunMode;
  unsigned int dwWorldServerIP;
};

/* 2022 */
struct _start_world_request_wrac
{
  unsigned int dwGateIP;
  unsigned __int16 wGatePort;
};

/* 2023 */
struct _stop_world_request_wrac
{
  char dummy[1];
};

/* 2024 */
struct _world_account_ping_wrac
{
  char dummy[1];
};

/* 2025 */
struct _skill_fld
{
  _base_fld baseclass_0;
  int m_nClass;
  int m_nIconIDX;
  int m_nMastIndex;
  char m_strMastKorName[64];
  char m_strMastEngName[64];
  char m_strKorName[64];
  char m_strEngName[64];
  int m_nLv;
  int m_bActivate;
  char m_strUsableRace[64];
  char m_strActableDst[64];
  int m_nNeedMastIndex;
  char m_strFixWeapon[64];
  int m_bFixshield;
  int m_nSpecialType;
  int m_nNeedSpecialType;
  int m_nNeedHP;
  int m_nNeedFP;
  int m_nNeedSP;
  float m_fActDelay;
  int m_nAttackable;
  int m_nAttType[7];
  int m_nAttConstant[7];
  float m_fAttFormulaConstant;
  int m_nAttNeedBt;
  int m_nBonusDistance;
  int m_nTempEffectType;
  int m_nTempParamCode;
  float m_fTempValue[7];
  int m_nContEffectType;
  int m_nContAreaType;
  _cont_param_list m_ContParamList[5];
  int m_nContEffectSec[7];
  int m_nEtc;
  float m_f1_2speed;
  float m_f1_2distance;
  float m_f2_3speed;
  float m_f2_3distance;
  int m_nEffectClass;
};

/* 2026 */
struct _UnitFrame_fld
{
  _base_fld baseclass_0;
  int m_nFRAType;
  int m_nUnit_HP;
  float m_fDefGap;
  float m_fDefFacing;
  float m_fMoveRate_Seed;
  float m_fHeight;
  float m_fWidth;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_nRepPrice;
  char m_strDFHead[64];
  char m_strDFUpper[64];
  char m_strDFLower[64];
  char m_strDFArms[64];
  char m_strDFShoulder[64];
  char m_strDFBack[64];
  char m_strDFBtA[64];
  char m_strDFBtS[64];
};

/* 2027 */
struct _UnitPart_fld
{
  _base_fld baseclass_0;
  char m_strModle[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nFixPart;
  char m_strDefFrame[64];
  int m_nWPType;
  int m_nEffectGroup;
  int m_nNeedBt;
  int m_bAbr;
  int m_nDurUnit;
  int m_nLevelLim;
  int m_nExpertID1;
  int m_nExpertLim1;
  int m_nExpertID2;
  int m_nExpertLim2;
  float m_fAttGap;
  int m_nAttack_DP;
  float m_fAttackRange;
  int m_nAttackDel;
  float m_fMoveSpdRev;
  int m_nGAMinAF;
  int m_nGAMaxAF;
  int m_nAttMastery;
  int m_nGAMinSelProb;
  int m_nGAMaxSelProb;
  int m_nDefFc;
  int m_nDefMastery;
  int m_nProperty;
  int m_nFireTol;
  int m_nWaterTol;
  int m_nSoilTol;
  int m_nWindTol;
  int m_nMoney;
  int m_nStdPrice;
  int m_nRepPrice;
  int m_nBstCha;
  float m_fBstSpd;
  int m_nBackSlt;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  char m_strTooltipIndex[64];
  int m_nAttEffType;
  int m_nDefEffType;
};

/* 2028 */
struct _UnitBullet_fld
{
  _base_fld baseclass_0;
  char m_strModle[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nWPType;
  int m_bAbr;
  int m_nDurUnit;
  int m_nMoney;
  int m_nStdPrice;
  float m_fGAAF;
  char m_strEffectIndex[64];
  char m_strTooltipIndex[64];
};

/* 2029 */
struct _AnimusItem_fld
{
  _base_fld baseclass_0;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strCivil[64];
  char m_strName[64];
  int m_nAnimusClass;
  int m_nKindClt;
  int m_nFixPart;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2030 */
struct _ItemMakeData_fld::_material_list
{
  char m_itmPdMat[64];
  int m_nPdMatNum;
};

/* 2031 */
struct _ItemMakeData_fld
{
  _base_fld baseclass_0;
  int m_nMakeMastery;
  char m_strCivil[64];
  _ItemMakeData_fld::_material_list m_listMaterial[5];
};

/* 2032 */
struct _edit_data_node
{
  char m_strEditItemCode[64];
  int m_nEditItemcount;
};

/* 2033 */
struct _EditData_fld
{
  _base_fld baseclass_0;
  _edit_data_node m_Node[30];
};

/* 2034 */
struct CTime
{
  int m_time;
};

/* 2035 */
struct __data_comp_src
{
  int nItemRecNum[29];
  char (*szItem[29])[8];
  char szErrMsg[128];
};

/* 2036 */
#pragma pack(push, 4)
struct _npc_create_setdata
{
  _character_create_setdata baseclass_0;
  CItemStore *m_pLinkItemStore;
  char m_byRaceCode;
};
#pragma pack(pop)

/* 2037 */
struct std::allocator<AreaList>
{
  char dummy[1];
};

/* 2038 */
struct std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>
{
  char dummy[1];
};

/* 2039 */
struct std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool> baseclass_0;
};

/* 2040 */
struct std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73
{
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73 *_Left;
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73 *_Parent;
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73 *_Right;
  std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList> _Value;
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c0877cbce _Color;
};

/* 2041 */
struct std::allocator<AreaData>
{
  char dummy[1];
};

/* 2042 */
struct AreaData
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > strAreaName;
  unsigned int dwRGB;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwSound;
};

/* 2043 */
#pragma pack(push, 4)
struct std::vector<AreaData,std::allocator<AreaData> >
{
  std::allocator<AreaData> allocator;
  AreaData *_First;
  AreaData *_Last;
  AreaData *_End;
};
#pragma pack(pop)

/* 2044 */
struct AreaList
{
  std::vector<AreaData,std::allocator<AreaData> > List;
  unsigned int Count;
  unsigned int Width;
  unsigned int Height;
  char *pData;
  unsigned int DataEnd;
  char *pRealData;
};

/* 2045 */
struct std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > first;
  AreaList second;
};

/* 2046 */
#pragma pack(push, 4)
struct std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<cbe9d10ee
{
  std::allocator<AreaList> allocator;
  std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > key_compare;
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73 *_Head;
  char _Multi;
  unsigned int _Size;
};
#pragma pack(pop)

/* 2047 */
struct std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,AreaList,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<AreaList> >
{
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<cbe9d10ee _Tr;
};

/* 2048 */
struct std::unary_function<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
{
  char dummy[1];
};

/* 2049 */
struct std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,AreaList,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<AreaList> >::_Kfn
{
  std::unary_function<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > baseclass_0;
};

/* 2050 */
struct std::binary_function<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,bool>
{
  char dummy[1];
};

/* 2051 */
union $E08E0F6BDA76B82DB74971A6915B643C
{
  std::binary_function<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,bool> baseclass_0;
  std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > comp;
};

/* 2052 */
struct std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,AreaList,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<AreaList> >::value_compare
{
  $E08E0F6BDA76B82DB74971A6915B643C ___u0;
};

/* 2053 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,int>
{
  char dummy[1];
};

/* 2054 */
struct std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,int>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,int> baseclass_0;
};

/* 2055 */
union $E4351661974D487FC7CE6C433FF33E8F
{
  std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,int> baseclass_0;
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c93ca1b73 *_Ptr;
};

/* 2056 */
struct std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c0de09d86
{
  $E4351661974D487FC7CE6C433FF33E8F ___u0;
};

/* 2057 */
struct std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c054ee7af
{
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c0de09d86 baseclass_0;
};

/* 2058 */
struct __declspec(align(4)) std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::a8633f78c
{
  std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,AreaList>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<c054ee7af first;
  char second;
};

/* 2059 */
struct std::_Lockit
{
  char dummy[1];
};

/* 2060 */
struct _pnt_rect
{
  int nStartx;
  int nStarty;
  int nEndx;
  int nEndy;
};

/* 2061 */
struct _object_real_fixpositon_zocl
{
  char byObjKind;
  char byObjID;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/* 2062 */
struct _break_stop_result_zocl
{
  char byObjID;
  unsigned int dwObjSerial;
  __int16 zCur[3];
};

/* 2063 */
#pragma pack(push, 2)
struct _EFFECTED_LIST
{
  CCharacter *pMem;
  char byRetCode;
  unsigned __int16 wEffectValue;
};
#pragma pack(pop)

/* 2064 */
struct _stun_inform_zocl
{
  _CHRID idStun;
};

/* 2065 */
struct _last_effect_change_inform_zocl
{
  char byObjID;
  unsigned int dwSerial;
  unsigned __int16 wLastContEffect;
};

/* 2066 */
struct _count_succ_inform_zocl
{
  char byActEffectCode;
  char byAtterID;
  unsigned int dwAtterSerial;
  char byDamerID;
  unsigned int dwDamerSerial;
};

/* 2067 */
struct _robed_hp_inform_zocl
{
  _CHRID idDster;
  _CHRID idPerformer;
  unsigned __int16 wRobedHP;
};

/* 2068 */
struct CPlayerAttack
{
  CAttack baseclass_0;
  CPlayer *m_pAttPlayer;
};

/* 2069 */
struct _return_gate_fix_position_zocl
{
  unsigned __int16 wGateInx;
  unsigned int dwObjSerial;
  unsigned int dwOpenerSerial;
  unsigned __int16 wszOpenerName[17];
  __int16 zPos[3];
};

/* 2070 */
struct _move_potal_result_zocl
{
  char byRet;
  char byMapIndex;
  float fStartPos[3];
  char byZoneCode;
  char byCurMapIndex;
};

/* 2071 */
#pragma pack(push, 2)
struct _parkingunit_create_setdata
{
  _object_create_setdata baseclass_0;
  CPlayer *pOwner;
  char byCreateType;
  char byFrame;
  char byPartCode[6];
  char byTransDistCode;
  unsigned __int16 wHPRate;
};
#pragma pack(pop)

/* 2072 */
struct _parkingunit_create_zocl
{
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
  char byCreateType;
  char byFrame;
  char byPart[6];
  unsigned int dwOwerSerial;
  __int16 zPos[3];
  char byTransDistCode;
};

/* 2073 */
struct _parkingunit_destroy_zocl
{
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
  char byDestroyCode;
};

/* 2074 */
struct _parkingunit_change_owner_zocl
{
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
  unsigned int dwOldOwnerSerial;
  unsigned int dwNewOwnerSerial;
  char byNewOwnerUnitSlotIndex;
};

/* 2075 */
struct _parkingunit_fixpositon_zocl
{
  unsigned __int16 wObjIndex;
  unsigned int dwObjSerial;
  char byFrame;
  char byPart[6];
  __int16 zPos[3];
  unsigned int dwMasterSerial;
};

/* 2076 */
#pragma pack(push, 4)
struct _itembox_create_setdata
{
  _object_create_setdata baseclass_0;
  CPlayer *pOwner;
  CCharacter *pThrower;
  char byCreateCode;
  char bParty;
  unsigned int dwPartyBossSerial;
  _STORAGE_LIST::_db_con Item;
};
#pragma pack(pop)

/* 2077 */
struct _itembox_create_zocl
{
  char byItemTableCode;
  unsigned __int16 wItemRecIndex;
  char byAmount;
  unsigned __int16 wBoxIndex;
  unsigned int dwOwerSerial;
  _CHRID idDumber;
  char byState;
  __int16 zPos[3];
  char byThrowerRace;
};

/* 2078 */
struct _itembox_destroy_zocl
{
  unsigned __int16 wIndex;
};

/* 2079 */
struct _itembox_fixpositon_zocl
{
  char byItemTableCode;
  unsigned __int16 wItemRecIndex;
  char byAmount;
  unsigned __int16 wItemBoxIndex;
  unsigned int dwOwerSerial;
  __int16 zPos[3];
  char byState;
  char byThrowerRace;
};

/* 2080 */
struct _itembox_state_change_zocl
{
  unsigned __int16 wItemBoxIndex;
  unsigned int dwOwerSerial;
  char byState;
};

/* 2081 */
struct _darkhole_create_setdata
{
  _object_create_setdata baseclass_0;
  CPlayer *pOpener;
};

/* 2082 */
struct _darkhole_create_zocl
{
  unsigned __int16 wQuestIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  char bHurry;
  unsigned __int16 wszOpenerName[17];
  unsigned int dwOpenerSerial;
};

/* 2083 */
struct _darkhole_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/* 2084 */
struct _darkhole_state_change_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char bHurry;
};

/* 2085 */
struct _darkhole_fixpositon_zocl
{
  unsigned __int16 wQuestIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  char bHurry;
  unsigned __int16 wszOpenerName[17];
  unsigned int dwOpenerSerial;
};

/* 2086 */
struct _trap_create_setdata
{
  _character_create_setdata baseclass_0;
  int nHP;
  CPlayer *pMaster;
};

/* 2087 */
struct _trap_create_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  unsigned int dwMasterSerial;
  char byRaceCode;
};

/* 2088 */
struct _trap_destroy_zocl
{
  unsigned int dwSerial;
  char byDestroyCode;
};

/* 2089 */
struct _attack_gen_result_zocl::_dam_list
{
  char byDstID;
  unsigned int dwDstSerial;
  unsigned __int16 wDamage;
};

/* 2090 */
struct _attack_trap_inform_zocl
{
  unsigned int dwAtterSerial;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2091 */
struct _trap_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  unsigned __int16 wCompLeftSec;
  unsigned int dwMasterSerial;
  char bTranspar;
  char byRaceCode;
};

/* 2092 */
struct _trap_complete_inform_zocl
{
  unsigned int dwTrapObjSerial;
};

/* 2093 */
struct _trap_alter_transpar_inform_zocl
{
  unsigned int dwTrapSerial;
  char bTranspar;
};

/* 2094 */
struct std::allocator<FSM>
{
  char dummy[1];
};

/* 2095 */
struct std::binary_function<unsigned long,unsigned long,bool>
{
  char dummy[1];
};

/* 2096 */
struct std::less<unsigned long>
{
  std::binary_function<unsigned long,unsigned long,bool> baseclass_0;
};

/* 2097 */
struct std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node
{
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node *_Left;
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node *_Parent;
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node *_Right;
  std::pair<unsigned long const ,FSM> _Value;
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Redbl _Color;
};

/* 2098 */
struct std::pair<unsigned long const ,FSM>
{
  const unsigned int first;
  FSM second;
};

/* 2099 */
#pragma pack(push, 4)
struct std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >
{
  std::allocator<FSM> allocator;
  std::less<unsigned long> key_compare;
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node *_Head;
  char _Multi;
  unsigned int _Size;
};
#pragma pack(pop)

/* 2100 */
struct std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >
{
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> > _Tr;
};

/* 2101 */
struct FSMMANAGER
{
  std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> > m_Map;
  unsigned int m_Identiy;
};

/* 2102 */
struct EMOTYPE
{
  unsigned int m_Normal;
  unsigned int m_Discomport;
  unsigned int m_Anger;
  unsigned int m_Fury;
  unsigned int m_Mad;
};

/* 2103 */
struct PFSM
{
  void *m_pObject;
  FSM *m_hParentList;
  char m_Func[16384];
  unsigned int m_State;
  unsigned int m_Time;
  unsigned int m_ElapseTime;
  void (__cdecl *m_MsgFunc)(void *, unsigned int);
  FSMStateNInput sni;
};

/* 2104 */
struct PMONSTERAI
{
  PFSM Prime_State;
  PFSM Move_Target_State;
  PFSM Attack_State;
  PFSM Player_State;
  PFSM Mon_State;
  PFSM Act_State;
  PFSM Con_State;
  PFSM Emotion_State;
  PFSM Personal_State;
  PFSM Help_State;
  PFSM Assist_State;
};

/* 2105 */
struct std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,FSM>,int>
{
  char dummy[1];
};

/* 2106 */
struct std::_Bidit<std::pair<unsigned long const ,FSM>,int>
{
  std::iterator<std::bidirectional_iterator_tag,std::pair<unsigned long const ,FSM>,int> baseclass_0;
};

/* 2107 */
union $AF0807319C359BFA49A9534A1FC2E147
{
  std::_Bidit<std::pair<unsigned long const ,FSM>,int> baseclass_0;
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::_Node *_Ptr;
};

/* 2108 */
struct std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::const_iterator
{
  $AF0807319C359BFA49A9534A1FC2E147 ___u0;
};

/* 2109 */
struct std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::iterator
{
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::const_iterator baseclass_0;
};

/* 2110 */
struct _monster_loot_index
{
  int nStartRecIndex;
  int nEndRecIndex;
};

/* 2111 */
struct _ANIMUS_RETURN_DELAY
{
  _DELAY_PROCESS baseclass_0;
};

/* 2112 */
struct _SKILL_IDX_PER_MASTERY
{
  int m_nSkillIndexNum;
  int m_nSkillIndex[48];
};

/* 2113 */
struct _BILLING_FORCE_CLOSE_DELAY
{
  _DELAY_PROCESS baseclass_0;
};

/* 2114 */
struct _ITEM_EFFECT
{
  int nEffectCode;
  float fEffectValue;
};

/* 2115 */
struct _unit_bullet_param
{
  unsigned __int16 wBulletIndex;
  unsigned __int16 wLeftNum;
};

/* 2116 */
struct _a_trade_continue_reged_result_zocl::__list
{
  unsigned __int16 wItemSerial;
  char byRetCode;
  unsigned __int16 wListIndex;
  unsigned int dwRegedSerial;
  char byTableCode;
  char byKind;
  char byLvClass;
};

/* 2117 */
struct _monster_create_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  char byInfo[4];
};

/* 2118 */
struct _monster_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char byDestroyCode;
};

/* 2119 */
struct _monster_move_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
};

/* 2120 */
struct _monster_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wLastEffectCode;
  __int16 zCur[3];
  char byInfo[4];
};

/* 2121 */
struct _monster_real_move_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wLastEffectCode;
  __int16 zCur[3];
  __int16 zTar[2];
  char byInfo[4];
};

/* 2122 */
struct _NEAR_DATA
{
  int nLen;
  CCharacter *pChar;
};

/* 2123 */
struct _attack_gen_result_zocl
{
  char byAtterID;
  unsigned int dwAtterSerial;
  char byAttackPart;
  char byBulletIndex;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2124 */
struct _monster_emotion_zocl
{
  unsigned int dwSerial;
  char byInfo[4];
};

/* 2125 */
struct D3DXVECTOR2
{
  float x;
  float y;
};

/* 2126 */
struct _npc_create_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
};

/* 2127 */
struct _npc_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/* 2128 */
struct _npc_move_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
};

/* 2129 */
struct _trans_ship_ticket_inform_zocl::__list
{
  char byDirectCode;
  unsigned __int16 wLeftTicketNum;
};

/* 2130 */
struct _trans_ship_ticket_inform_zocl
{
  unsigned int dwNpcSerial;
  _trans_ship_ticket_inform_zocl::__list TicketList[2];
};

/* 2131 */
struct _npc_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wLastEffectCode;
  __int16 zCur[3];
};

/* 2132 */
struct _npc_real_move_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wLastEffectCode;
  __int16 zCur[3];
  __int16 zTar[2];
};

/* 2133 */
struct _stone_create_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  char byMasterRace;
};

/* 2134 */
struct _stone_destroy_zocl
{
  unsigned int dwSerial;
  char byDestroyCode;
  unsigned int dwDestroyerSerial;
};

/* 2135 */
struct _stone_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  char byMasterRace;
  char bOper;
  char bChip;
  int nControlLeftSec;
};

/* 2136 */
struct _holystone_alter_oper_circle_inform_zocl
{
  unsigned int dwSerial;
  char bOper;
  unsigned __int16 wCurHPRate;
};

/* 2137 */
struct _keeper_create_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
};

/* 2138 */
struct _keeper_destroy_zocl
{
  unsigned int dwSerial;
  char byDestroyCode;
};

/* 2139 */
struct _attack_keeper_inform_zocl
{
  unsigned int dwAtterSerial;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2140 */
struct _keeper_move_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
  char byMoveType;
};

/* 2141 */
struct _keeper_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
};

/* 2142 */
struct _keeper_real_move_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
};

/* 2143 */
#pragma pack(push, 4)
struct __TEMP_WAIT_TOWER
{
  unsigned int dwMasterSerial;
  char byItemIndex;
  CMapData *pMap;
  float fPos[3];
  unsigned int dwPushTime;
  char bComplete;
};
#pragma pack(pop)

/* 2144 */
#pragma pack(push, 4)
struct _tower_create_setdata
{
  _character_create_setdata baseclass_0;
  int nHP;
  CPlayer *pMaster;
  char byRaceCode;
  _STORAGE_LIST::_db_con *pItem;
  int nIniIndex;
  char bQuick;
};
#pragma pack(pop)

/* 2145 */
struct _tower_create_zocl
{
  unsigned __int16 wIndex;
  unsigned __int16 wRecIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
};

/* 2146 */
struct _tower_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char byDestroyCode;
};

/* 2147 */
struct _attack_tower_inform_zocl
{
  unsigned int dwAtterSerial;
  char byAttackPart;
  char bCritical;
  char byDstID;
  unsigned int dwDstSerial;
  unsigned __int16 wDamage;
};

/* 2148 */
struct _tower_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  unsigned __int16 wCompLeftSec;
};

/* 2149 */
struct _tower_complete_inform_zocl
{
  unsigned int dwTowerObjSerial;
};

/* 2150 */
struct _animus_create_setdata
{
  _character_create_setdata baseclass_0;
  int nHP;
  int nFP;
  unsigned int dwExp;
  CPlayer *pMaster;
};

/* 2151 */
struct _animus_create_zocl
{
  unsigned __int16 wIndex;
  unsigned __int16 wRecIndex;
  unsigned int dwSerial;
  __int16 zPos[3];
  char byLv;
  unsigned int dwMasterSerial;
};

/* 2152 */
struct _animus_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char byDestroyCode;
};

/* 2153 */
struct _animus_move_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
  float fSpeed;
};

/* 2154 */
struct _animus_fixpositon_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  char byLv;
  unsigned __int16 wLastEffectCode;
  unsigned int dwMasterSerial;
};

/* 2155 */
struct _animus_real_move_zocl
{
  unsigned __int16 wRecIndex;
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
  char byLv;
  unsigned __int16 wLastEffectCode;
  unsigned int dwMasterSerial;
  float fSpeed;
};

/* 2156 */
struct _animus_lvup_inform_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char byLv;
};

/* 2157 */
struct _animus_act_heal_inform_zocl
{
  unsigned int dwAnimusSerial;
  unsigned int dwDstSerial;
  unsigned __int16 wAddHP;
};

/* 2158 */
struct _ANIMUS_DB_BASE::_animus_param
{
  unsigned __int16 wHP;
  unsigned __int16 wFP;
};

/* 2159 */
struct _server_notify_inform_zone
{
  unsigned __int16 wMsgCode;
  unsigned int dwPushIP;
};

/* 2160 */
struct _chat_lock_inform_zocl
{
  char bLock;
};

/* 2161 */
struct _enter_world_result_zone
{
  char byResult;
  char byUserGrade;
};

/* 2162 */
struct _logout_account_request_wrac
{
  _GLBID gidGlobal;
};

/* 2163 */
struct _enter_world_request_wrac
{
  _GLBID gidGlobal;
  _CLID idLocal;
};

/* 2164 */
struct _reged_char_result_zone
{
  char byRetCode;
  char byCharNum;
  _REGED_AVATOR_DB RegedList[3];
};

/* 2165 */
struct _start_user_inform_zocl
{
  char bPcBang;
};

/* 2166 */
struct _not_arranged_char_inform_zocl
{
  char byCharNum;
  _NOT_ARRANGED_AVATOR_DB CharList[15];
};

/* 2167 */
struct _add_char_result_zone
{
  char byRetCode;
  char byAddSlotIndex;
};

/* 2168 */
struct _del_char_result_zone
{
  char byRetCode;
  char bySlotIndex;
};

/* 2169 */
struct _sel_char_result_zone
{
  char byRetCode;
  char bySlotIndex;
  unsigned int dwWorldSerial;
};

/* 2170 */
struct _select_avator_report_wrac
{
  _GLBID gidGlobal;
  unsigned __int16 wszCharName[17];
  unsigned int dwAvatorSerial;
  char byLevel;
};

/* 2171 */
struct _enter_lobby_report_wrac
{
  _GLBID gidGlobal;
};

/* 2172 */
struct _moveout_user_result_zone
{
  char byRetCode;
  unsigned int dwIP;
  unsigned __int16 wPort;
  unsigned int dwZoneMasterKey;
};

/* 2173 */
#pragma pack(push, 4)
struct _EXIT_ALTER_PARAM
{
  unsigned int dwHP;
  unsigned int dwFP;
  unsigned int dwSP;
  unsigned int dwDP;
  double dExp;
  char byMapCode;
  float fStartPos[3];
  unsigned int dwDalant;
  unsigned int dwGold;
};
#pragma pack(pop)

/* 2174 */
struct _current_billing_type_inform_zocl
{
  __int16 iType;
  int lRemainMin;
  _SYSTEMTIME stEndDate;
};

/* 2175 */
struct _alive_char_result_zocl
{
  char byRetCode;
  unsigned int dwSerial;
  _REGED_AVATOR_DB AliveChar;
};

/* 2176 */
struct _grade_fld
{
  _base_fld baseclass_0;
  float m_fRanking;
  int m_nGrade;
};

/* 2177 */
struct _UnitKeyItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  char m_strCivil[64];
  int m_nFRAType;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2178 */
struct _EQUIP_MASTERY_LIM
{
  int nMasteryCode;
  int nLimMastery;
};

/* 2179 */
struct _SiegeKitItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nItemGrade;
  int m_nUsableTyoe;
  int m_nSubType;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nExpertID1;
  int m_nExpertLim1;
  int m_nExpertID2;
  int m_nExpertLim2;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nDurUnit;
  int m_bRepair;
  int m_nRepPrice;
  int m_nEffState;
  float m_fMinDst;
  float m_fMaxDst;
  int m_nGACorSpd;
  float m_fGAAF;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nEff3Code;
  float m_fEff3Unit;
  int m_nEff4Code;
  float m_fEff4Unit;
  int m_nDuration;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_nUpgrade;
  char m_strTooltipIndex[64];
  int m_nAttEffType;
};

/* 2180 */
struct _other_new_view_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  __int16 zPos[3];
  char byRaceCode;
  char byViewType;
  unsigned int dwStateFlag;
  unsigned __int16 wLastEffectCode;
};

/* 2181 */
struct _attack_error_result_zocl
{
  char sFailureCode;
};

/* 2182 */
struct _attack_skill_result_zocl
{
  unsigned int dwAtterSerial;
  char byEffectCode;
  unsigned __int16 wSkillIndex;
  char bySkillLv;
  char byAttackPart;
  char byBulletIndex;
  char bCritical;
  __int16 zAttackPos[2];
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2183 */
struct _attack_force_result_zocl
{
  char byAtterID;
  unsigned int dwAtterSerial;
  char byForceIndex;
  char byForceLv;
  __int16 zAreaPos[2];
  char byAttackPart;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2184 */
struct _attack_unit_result_zocl
{
  unsigned int dwAtterSerial;
  char byWeaponPart;
  unsigned __int16 wWeaponIndex;
  char byBulletIndex;
  char byAttackPart;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2185 */
struct _attack_count_result_zocl
{
  unsigned int dwAtterSerial;
  char byAttackPart;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2186 */
struct _attack_selfdestruction_result_zocl
{
  char byAtterID;
  unsigned int dwAtterSerial;
  char byAttackPart;
  char byBulletIndex;
  char bCritical;
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2187 */
struct _attack_test_result_zocl
{
  unsigned int dwAtterSerial;
  char byBulletIndex;
  char byEffectCode;
  char byEffectIndex;
  char byEffectLv;
  char byWeaponPart;
  __int16 zTar[2];
};

/* 2188 */
struct _attack_siege_result_zocl
{
  char byAtterID;
  unsigned int dwAtterSerial;
  char byAttackPart;
  char byBulletIndex;
  char bCritical;
  __int16 zTar[2];
  char byListNum;
  _attack_gen_result_zocl::_dam_list DamList[32];
};

/* 2189 */
struct _shield_equip_dur_dec_zocl
{
  char byPartIndex;
  unsigned __int16 wSerial;
  unsigned __int16 wLeftDurPoint;
};

/* 2190 */
struct _other_shape_change_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  char byPartIndex;
  unsigned __int16 wItemIndex;
};

/* 2191 */
struct _other_unit_ride_change_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  char bTake;
  unsigned int dwUnitSerial;
  __int16 zNewPos[3];
};

/* 2192 */
struct _other_shape_failure_zocl
{
  unsigned __int16 wOtherIndex;
  char byErrCode;
};

/* 2193 */
struct _player_destroy_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  char byState;
};

/* 2194 */
struct _player_die_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
};

/* 2195 */
struct _player_fixpositon_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 wEquipVer;
  char byRaceCode;
  __int16 zCur[3];
  unsigned __int16 wLastEffectCode;
  unsigned int dwStateFlag;
};

/* 2196 */
struct _player_real_move_zocl
{
  unsigned __int16 wIndex;
  unsigned int dwSerial;
  unsigned __int16 dwEquipVer;
  char byRaceCode;
  __int16 zCur[3];
  __int16 zTar[2];
  unsigned __int16 wLastEffectCode;
  unsigned int dwStateFlag;
  char byAddSpeed;
  char byDirect;
};

/* 2197 */
struct _player_move_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
  __int16 zTar[2];
  char byAddSpeed;
  char byDirect;
};

/* 2198 */
struct _player_revival_zocl
{
  char byRet;
  unsigned __int16 wStartMapIndex;
  __int16 zPos[3];
  char byLevel;
  unsigned __int16 wCurHP;
  unsigned __int16 wCurFP;
  unsigned __int16 wCurST;
  char byZoneCode;
};

/* 2199 */
struct _player_resurrect_zocl
{
  char byRet;
  char byLevel;
  unsigned __int16 wCurHP;
  unsigned __int16 wCurFP;
  unsigned __int16 wCurST;
};

/* 2200 */
struct _player_resurrect_inform_zocl
{
  unsigned int dwObjSerial;
};

/* 2201 */
struct _player_stop_zocl
{
  unsigned int dwSerial;
  __int16 zCur[3];
};

/* 2202 */
struct _move_error_result_zocl
{
  char byErrCode;
  float fCur[3];
};

/* 2203 */
struct _level_up_zocl
{
  unsigned int dwSerial;
  char byLevel;
};

/* 2204 */
struct _max_hfsp_zocl
{
  unsigned __int16 wMaxHP;
  unsigned __int16 wMaxFP;
  unsigned __int16 wMaxST;
};

/* 2205 */
struct _recover_zocl
{
  unsigned __int16 wHP;
  unsigned __int16 wFP;
  unsigned __int16 wST;
  unsigned __int16 wDP;
};

/* 2206 */
struct _unit_booster_charge_inform_zocl
{
  char bySlotIndex;
  unsigned __int16 wBoosterGauge;
};

/* 2207 */
struct _itembox_take_new_result_zocl
{
  char sErrorCode;
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwCurDurPoint;
  unsigned int dwUptInfo;
  unsigned __int16 wItemSerial;
};

/* 2208 */
struct _itembox_take_add_result_zocl
{
  char sErrorCode;
  unsigned __int16 wItemSerial;
  char byAmount;
};

/* 2209 */
struct _throw_storage_result_zocl
{
  char byErrCode;
};

/* 2210 */
struct _other_map_out_zocl
{
  char byMapOutType;
  unsigned int dwSerial;
  char byNextMap;
};

/* 2211 */
struct _state_inform_zocl
{
  unsigned int dwSerial;
  unsigned int dwState;
};

/* 2212 */
struct _goto_baseportal_result_zocl
{
  char byRet;
  char byMapCode;
  __int16 zPos[3];
};

/* 2213 */
struct _goto_avator_result_zocl
{
  char byRet;
  char byMapCode;
  float fStartPos[3];
};

/* 2214 */
struct _exit_world_result_zocl
{
  char dummy[1];
};

/* 2215 */
struct _stat_inform_zocl
{
  char byStatIndex;
  unsigned int dwNewStat;
  char byReason;
};

/* 2216 */
struct _fcitem_inform_zocl
{
  unsigned __int16 wItemSerial;
  unsigned int dwNewStat;
};

/* 2217 */
struct _storage_refresh_inform_zocl
{
  char byStorageCode;
  char byItemNum;
  unsigned __int16 wSerial[100];
};

/* 2218 */
struct _town_or_field_inform_zocl
{
  char byTown;
};

/* 2219 */
struct _alter_region_inform_zocl
{
  unsigned __int16 wRegionIndex;
};

/* 2220 */
struct _buy_store_success_zocl::_list
{
  unsigned __int16 wSerial;
};

/* 2221 */
struct _buy_store_success_zocl
{
  unsigned int dwLeftDalant;
  unsigned int dwLeftGold;
  unsigned int dwConsumDanlant;
  unsigned int dwConsumGold;
  char byDiscountRate;
  char byBuyNum;
  _buy_store_success_zocl::_list OfferList[100];
};

/* 2222 */
struct _buy_store_failure_zocl
{
  unsigned int dwDalant;
  unsigned int dwGold;
  char byRetCode;
};

/* 2223 */
struct _sell_store_result_zocl
{
  char bSucc;
  unsigned int dwLeftDalant;
  unsigned int dwLeftGold;
  unsigned int dwProfitDanlant;
  unsigned int dwProfitGold;
  char byDiscountRate;
  char byRetCode;
};

/* 2224 */
struct _exchange_money_result_zocl
{
  char byErrCode;
  unsigned int dwLeftGold;
  unsigned int dwLeftDalant;
};

/* 2225 */
struct _economy_history_inform_zocl
{
  unsigned __int16 wEconomyGuide[3][12];
};

/* 2226 */
struct _economy_rate_inform_zocl
{
  char bStart;
  float fPayExgRate;
  float fTexRate;
  unsigned __int16 wMgrValue;
  unsigned __int16 wEconomyGuide[3];
  float fOreSellRate;
};

/* 2227 */
struct _use_potion_result_zocl
{
  char byErrCode;
  unsigned __int16 wPotionSerial;
  unsigned __int16 wHP;
  unsigned __int16 wFP;
  unsigned __int16 wSP;
  char byLeftNum;
};

/* 2228 */
struct _equip_part_result_zocl
{
  char byErrCode;
};

/* 2229 */
struct _embellish_result_zocl
{
  char byErrCode;
};

/* 2230 */
struct _off_part_result_zocl
{
  char byErrCode;
};

/* 2231 */
struct _make_item_result_zocl
{
  char byErrCode;
};

/* 2232 */
struct _combine_item_result_zocl::__item
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  unsigned __int16 wSerial;
};

/* 2233 */
struct _combine_item_result_zocl
{
  char byErrCode;
  unsigned int dwFee;
  unsigned int dwLeftDalant;
  _combine_item_result_zocl::__item NewItem;
};

/* 2234 */
struct _exchange_item_result_zocl
{
  char byErrCode;
  _combine_item_result_zocl::__item NewItem;
};

/* 2235 */
struct _upgrade_item_result_zocl
{
  char byErrCode;
};

/* 2236 */
struct _downgrade_item_result_zocl
{
  char byErrCode;
};

/* 2237 */
struct _potionsocket_separation_result_zocl
{
  char sErrorCode;
  unsigned __int16 wParentSerial;
  char byParentAmount;
  unsigned __int16 wChildSerial;
  char byChildAmount;
};

/* 2238 */
struct _potionsocket_division_result_zocl
{
  char sErrorCode;
  unsigned __int16 wSerial;
  char byParentAmount;
  unsigned __int16 wChildSerial;
  char byChildAmount;
};

/* 2239 */
struct _base_download_result_zocl::_list_equip
{
  char sTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwUptInfo;
};

/* 2240 */
struct _base_download_result_zocl::_list_embellish
{
  char sTableCode;
  unsigned __int16 wItemIndex;
  unsigned __int16 wNum;
  char sClientIndex;
};

/* 2241 */
struct _base_download_result_zocl
{
  char byRetCode;
  unsigned __int16 wZoneIndex;
  unsigned __int16 wExpRate;
  unsigned __int16 wClassHistory[3];
  unsigned __int16 wHP;
  unsigned __int16 wSP;
  unsigned __int16 wFP;
  double dPvpPoint;
  double dPvpCashBag;
  unsigned int dwPvpRank;
  char byPvpClass;
  char byPlusKey;
  unsigned __int16 wXorKey;
  unsigned __int16 wMaxHP;
  unsigned __int16 wMaxSP;
  unsigned __int16 wMaxFP;
  unsigned __int16 wMapIndex;
  float fPos[3];
  _base_download_result_zocl::_list_equip EquipList[8];
  _base_download_result_zocl::_list_embellish EmbellishList[6];
  char byHolyMasterState;
  unsigned int dwGuildSerial;
  char byUseTrunkSlotNum;
  unsigned __int16 wMaxDP;
  unsigned __int16 wDP;
};

/* 2242 */
struct _inven_download_result_zocl::_list
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  char sClientIndex;
  unsigned int dwUptInfo;
};

/* 2243 */
struct _inven_download_result_zocl
{
  char byRetCode;
  char byBagNum;
  char bySlotNum;
  _inven_download_result_zocl::_list ItemSlotInfo[100];
};

/* 2244 */
struct _cum_download_result_zocl
{
  char byRetCode;
  _STAT_DB_BASE Stat;
  char byLeftCuttingResNum;
  unsigned __int16 wleftResList[40];
};

/* 2245 */
struct _force_download_result_zocl::_list
{
  unsigned __int16 wItemIndex;
  unsigned int dwCum;
};

/* 2246 */
struct _force_download_result_zocl
{
  char byRetCode;
  char bySlotNum;
  _force_download_result_zocl::_list ItemSlotInfo[88];
};

/* 2247 */
struct _quest_download_result_zocl::__list
{
  char byDBSlotIndex;
  _QUEST_DB_BASE::_LIST cont;
};

/* 2248 */
struct _quest_download_result_zocl
{
  char byRetCode;
  char bySlotNum;
  _quest_download_result_zocl::__list SlotInfo[15];
};

/* 2249 */
struct _unit_download_result_zocl::_list
{
  char bySlotIndex;
  _UNIT_DB_BASE::_LIST UnitData;
};

/* 2250 */
struct _unit_download_result_zocl
{
  char byUnitNum;
  _unit_download_result_zocl::_list UnitList[4];
};

/* 2251 */
struct _animus_download_result_zocl::_list
{
  char sItemIndex;
  unsigned int dwExp;
  unsigned int dwParam;
};

/* 2252 */
struct _animus_download_result_zocl
{
  char byAnimusNum;
  _animus_download_result_zocl::_list AnimusList[4];
};

/* 2253 */
struct _store_list_result_zocl::_store_pos
{
  unsigned __int16 wStoreIndex;
  float fPos[3];
};

/* 2254 */
struct _store_list_result_zocl
{
  char byStoreNum;
  _store_list_result_zocl::_store_pos StorePos[100];
};

/* 2255 */
struct _regist_bind_result_zocl
{
  char byRetCode;
};

/* 2256 */
struct _linkboard_download_result_zocl
{
  unsigned __int16 wLinkBoard[50];
  char byLinkLock;
  unsigned int dwSkill[2];
  unsigned int dwForce[2];
  unsigned int dwCharacter[2];
  unsigned int dwAnimus[2];
  unsigned int dwInven;
  unsigned int dwInvenWindow[5];
};

/* 2257 */
struct _gesture_inform_zocl
{
  unsigned int dwActorSerial;
  char byGestureType;
};

/* 2258 */
struct _darkhole_open_result_zocl
{
  char byRetCode;
  unsigned int dwItemSerial;
  unsigned int dwHoleSerial;
};

/* 2259 */
struct _darkhole_enter_result_zocl
{
  char byRetCode;
  unsigned int dwHoleSerial;
  char byMapCode;
  __int16 zPos[3];
};

/* 2260 */
struct _darkhole_giveup_out_result_zocl
{
  char byRetCode;
  unsigned __int16 wTarMapIndex;
  __int16 zTarPos[3];
};

/* 2261 */
struct _darkhole_clear_out_result_zocl
{
  char byRetCode;
  unsigned __int16 wTarMapIndex;
  __int16 zTarPos[3];
};

/* 2262 */
struct _darkhole_answer_reenter_result_zocl
{
  char byRetCode;
};

/* 2263 */
struct _battledungeon_open_result_zocl
{
  char byRetCode;
};

/* 2264 */
struct _goto_dungeon_result_zocl
{
  char byRetCode;
  char byMapCode;
  __int16 zPos[3];
  unsigned __int16 wLeftSec;
  unsigned __int16 wTotalKillNum;
  unsigned __int16 wMissionKillNum;
};

/* 2265 */
struct _close_dungeon_inform_zocl
{
  char byCompleteCode;
};

/* 2266 */
struct _outof_dungeon_result_zocl
{
  char byRetCode;
  char byMapCode;
  __int16 zPos[3];
};

/* 2267 */
struct _unit_frame_buy_result_zocl
{
  char byRetCode;
  char byFrameCode;
  char byAddUnitSlot;
  char byKeyIndex;
  unsigned __int16 wKeySerial;
  unsigned int dwLeftMoney[2];
  unsigned int dwConsumMoney[2];
};

/* 2268 */
struct _unit_sell_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  unsigned __int16 wKeySerial;
  unsigned int dwNonPayDalant;
  int nAddMoney[2];
  unsigned int dwLeftMoney[2];
};

/* 2269 */
struct _unit_part_tuning_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  char byPart[6];
  unsigned int dwBullet[2];
  int nCost[2];
  unsigned int dwLeftMoney[2];
};

/* 2270 */
struct _unit_frame_repair_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  unsigned int dwNewGauge;
  unsigned int dwConsumDalant;
  unsigned int dwLeftDalant;
};

/* 2271 */
struct _unit_bullet_fill_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  char byBulletIndex[2];
  unsigned int dwComsumMoney[2];
  unsigned int dwLeftMoney[2];
};

/* 2272 */
struct _unit_pack_fill_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  unsigned int dwComsumMoney[2];
  unsigned int dwLeftMoney[2];
  char byFillNum;
  _unit_pack_fill_request_clzo::__list List[8];
};

/* 2273 */
struct _unit_delivery_result_zocl
{
  char byRetCode;
  char bySlotIndex;
  char byTransDistCode;
  unsigned int dwParkingUnitSerial;
  unsigned int dwPayDalant;
  unsigned int dwLeftDalant;
};

/* 2274 */
struct _unit_return_result_zocl
{
  char byRetCode;
  unsigned int dwPayDalant;
  unsigned int dwNewDalant;
};

/* 2275 */
struct _unit_take_result_zocl
{
  char byRetCode;
};

/* 2276 */
struct _unit_leave_result_zocl
{
  char byRetCode;
};

/* 2277 */
struct _unit_alter_fee_inform_zocl
{
  char bySlotIndex;
  unsigned int dwPullingFee;
};

/* 2278 */
struct _unit_bullet_replace_result_zocl
{
  char byRetCode;
};

/* 2279 */
struct _unit_destroy_inform_zocl
{
  char bySlotIndex;
};

/* 2280 */
struct _unit_force_return_inform_zocl
{
  char bySlotIndex;
  unsigned int dwDebt;
};

/* 2281 */
struct _alter_unit_hp_inform_zocl
{
  char bySlotIndex;
  unsigned int dwLeftHP;
};

/* 2282 */
struct _animus_recall_result_zocl
{
  char byResultCode;
  unsigned int dwAnimusSerial;
  unsigned __int16 wAnimusHP;
  unsigned __int16 wAnimusFP;
  unsigned int dwAnimusExp;
  unsigned __int16 wLeftFP;
};

/* 2283 */
struct _animus_return_result_zocl
{
  char byResultCode;
  unsigned __int16 wAnimusItemSerial;
  char byReturnType;
};

/* 2284 */
struct _animus_target_result_zocl
{
  char byResultCode;
};

/* 2285 */
struct _animus_hp_inform_zocl
{
  unsigned __int16 wAnimusItemSerial;
  unsigned __int16 wLeftHP;
};

/* 2286 */
struct _animus_fp_inform_zocl
{
  unsigned __int16 wAnimusItemSerial;
  unsigned __int16 wLeftFP;
};

/* 2287 */
struct _animus_exp_inform_zocl
{
  unsigned __int16 wAnimusItemSerial;
  unsigned int dwExp;
};

/* 2288 */
struct _animus_command_inform_zocl
{
  char byStateCode;
};

/* 2289 */
struct _animus_recall_wait_time_free_inform_zocl
{
  char bFree;
};

/* 2290 */
struct _new_pos_start_result_zocl
{
  char byMapInMode;
};

/* 2291 */
struct _breakdown_equip_item_zocl
{
  unsigned __int16 wPlayerIndex;
  unsigned int dwPlayerSerial;
  unsigned __int16 dwEquipVer;
  char byPartIndex;
  unsigned __int16 wItemSerial;
};

/* 2292 */
struct _force_inven_change_result_zocl
{
  char byErrCode;
};

/* 2293 */
struct _animus_inven_change_result_zocl
{
  char byErrCode;
};

/* 2294 */
struct _res_separation_result_zocl
{
  char byErrCode;
  unsigned __int16 wParentSerial;
  char byParentAmount;
  unsigned __int16 wChildSerial;
  char byChildAmount;
};

/* 2295 */
struct _res_division_result_zocl
{
  char byErrCode;
  unsigned __int16 wParentSerial;
  char byParentAmount;
  unsigned __int16 wChildSerial;
  char byChildAmount;
};

/* 2296 */
struct _add_bag_result_zocl
{
  char byErrCode;
};

/* 2297 */
struct _delete_storage_inform_zocl
{
  char byStorageCode;
  unsigned __int16 wSerial;
};

/* 2298 */
struct _adjust_amount_inform_zocl
{
  char byStorageCode;
  unsigned __int16 wSerial;
  unsigned int dwNewDur;
};

/* 2299 */
struct _trans_ship_renew_ticket_result_zocl
{
  char byErrCode;
};

/* 2300 */
struct _mine_start_result_zocl
{
  char byErrCode;
};

/* 2301 */
struct _mine_cancle_result_zocl
{
  char sDum;
};

/* 2302 */
struct _mine_complete_result_zocl
{
  char byErrCode;
  unsigned __int16 wEquipLeftDur;
  unsigned __int16 wBatteryLeftDur;
  char byOreIndex;
  unsigned __int16 wOreSerial;
  char byOreDur;
};

/* 2303 */
struct _ore_cutting_result_zocl::_list
{
  unsigned __int16 wResIndex;
  char byAddAmount;
};

/* 2304 */
struct _ore_cutting_result_zocl
{
  char byErrCode;
  char byLeftNum;
  unsigned int dwLeftDalant;
  unsigned int dwConsumDalant;
  char byCuttingNum;
  _ore_cutting_result_zocl::_list ResList[100];
};

/* 2305 */
struct _ore_into_bag_result_zocl
{
  char byErrCode;
  unsigned __int16 wNewSerial;
};

/* 2306 */
struct _cutting_complete_result_zocl
{
  unsigned int dwLeftGold;
};

/* 2307 */
struct _chat_message_receipt_udp
{
  char byMessageType;
  unsigned int dwSenderSerial;
  char byRaceCode;
  char bFiltering;
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 2308 */
struct _chat_far_failure_zocl
{
  char bBlock;
};

/* 2309 */
struct _party_join_invitation_question_zocl
{
  _CLID idBoss;
};

/* 2310 */
struct _party_join_member_result_zocl
{
  unsigned int dwJoinerSerial;
  unsigned __int16 wszJoinerName[17];
  char byLootShareMode;
};

/* 2311 */
struct _party_join_joiner_result_zocl::_list
{
  unsigned int dwSerial;
  unsigned __int16 wszAvatorName[17];
};

/* 2312 */
struct _party_join_joiner_result_zocl
{
  char byLootShareMode;
  char byListNum;
  _party_join_joiner_result_zocl::_list List[8];
};

/* 2313 */
struct _party_join_application_question_zocl
{
  _CLID idApplicant;
};

/* 2314 */
struct _party_join_fail_level_inform_zocl
{
  char sDum;
};

/* 2315 */
struct _party_leave_self_result_zocl
{
  unsigned int dwExiterSerial;
  char bWorldExit;
};

/* 2316 */
struct _party_leave_compulsion_result_zocl
{
  unsigned int dwExiterSerial;
};

/* 2317 */
struct _party_disjoint_result_zocl
{
  char bySuccess;
};

/* 2318 */
struct _party_succession_result_zocl
{
  unsigned int dwSuccessorSerial;
};

/* 2319 */
struct _party_lock_result_zocl
{
  char byLock;
};

/* 2320 */
struct _party_member_info_upd::_EFFECT
{
  unsigned __int16 wEffectCode;
  char byEffectLv;
};

/* 2321 */
struct _party_member_info_upd
{
  unsigned int dwMemSerial;
  unsigned __int16 wHPRate;
  unsigned __int16 wFPRate;
  unsigned __int16 wSPRate;
  char byLv;
  char byMapCode;
  __int16 zPos[2];
  char byContEffectNum;
  _party_member_info_upd::_EFFECT Effect[16];
};

/* 2322 */
struct _party_member_hp_upd
{
  unsigned int dwMemSerial;
  unsigned __int16 wHPRate;
};

/* 2323 */
struct _party_member_fp_upd
{
  unsigned int dwMemSerial;
  unsigned __int16 wFPRate;
};

/* 2324 */
struct _party_member_sp_upd
{
  unsigned int dwMemSerial;
  unsigned __int16 wSPRate;
};

/* 2325 */
struct _party_member_lv_upd
{
  unsigned int dwMemSerial;
  char byLv;
};

/* 2326 */
struct _party_member_pos_upd
{
  unsigned int dwMemSerial;
  char byMapCode;
  __int16 zPos[2];
};

/* 2327 */
struct _party_member_max_hfsp_upd
{
  unsigned int dwMemSerial;
  unsigned __int16 wMaxHP;
  unsigned __int16 wMaxFP;
  unsigned __int16 wMaxSP;
};

/* 2328 */
struct _party_member_effect_upd
{
  unsigned int dwMemSerial;
  char byAlterCode;
  unsigned __int16 wEffectCode;
  char byEffectLv;
};

/* 2329 */
struct _alter_party_loot_share_result_zocl
{
  char byLootShareMode;
};

/* 2330 */
struct _take_loot_item_inform_zocl
{
  unsigned int dwTakerSerial;
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  char byNum;
};

/* 2331 */
struct _exp_alter_zocl
{
  unsigned __int16 wExpRate;
};

/* 2332 */
struct _alter_item_dur_zocl
{
  char byStorageCode;
  unsigned __int16 wItemSerial;
  unsigned int dwDur;
};

/* 2333 */
struct _change_class_command_zocl
{
  unsigned __int16 wCurClassIndex;
};

/* 2334 */
struct _select_class_result_zocl
{
  char byRetCode;
};

/* 2335 */
struct _change_class_other_zocl
{
  unsigned int dwPlayerSerial;
  unsigned __int16 wClassIndex;
};

/* 2336 */
struct _reward_add_item_zocl
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDur;
  unsigned int dwLv;
  unsigned __int16 wItemSerial;
  char byReason;
};

/* 2337 */
struct _alter_weapon_bullet_inform_zocl
{
  unsigned __int16 wItemSerial;
  unsigned __int16 wLeftNum;
};

/* 2338 */
struct _alter_unit_bullet_inform_zocl
{
  char byPart;
  unsigned __int16 wLeftNum;
};

/* 2339 */
struct _alter_pvp_point_zocl
{
  double dNewPoint;
};

/* 2340 */
struct _alter_pvp_cash_zocl
{
  double dNewPoint;
  char byIOCode;
};

/* 2341 */
struct _alter_sp_inform_zocl
{
  unsigned __int16 wNewSP;
};

/* 2342 */
struct _alter_equip_sp_inform_zocl
{
  float fEquipUseSP;
};

/* 2343 */
struct _alter_hp_inform_zocl
{
  unsigned __int16 wHP;
};

/* 2344 */
struct _alter_grade_inform_zocl
{
  char byGrade;
};

/* 2345 */
struct _alter_ranking_inform_zocl
{
  unsigned __int16 wRankRate;
  unsigned int dwRank;
};

/* 2346 */
struct _alter_money_inform_zocl
{
  char byReason;
  unsigned int dwGold;
  unsigned int dwDalant;
};

/* 2347 */
struct _alter_tol_inform_zocl
{
  __int16 zTol[4];
};

/* 2348 */
struct _race_top_inform_zocl
{
  char bTop;
};

/* 2349 */
struct _max_dp_zocl
{
  unsigned __int16 wMaxDP;
};

/* 2350 */
struct _holyquest_succ_inform_zocl
{
  char byQuestCode;
  char bSucc;
};

/* 2351 */
struct _force_result_one_zocl
{
  char byErrCode;
  unsigned int dwItemCum;
  char byAttackSerial;
};

/* 2352 */
struct _force_result_other_zocl
{
  char byRetCode;
  char byForceIndex;
  char byForceLv;
  _CHRID idPerformer;
  _CHRID idDster;
  char byAttackSerial;
};

/* 2353 */
struct _skill_result_one_zocl
{
  char byErrCode;
  char byAttackSerial;
};

/* 2354 */
struct _skill_result_other_zocl
{
  char byRetCode;
  _CHRID idPerformer;
  _CHRID idDster;
  char bySkillIndex;
  char bySkillLv;
  char byAttackSerial;
};

/* 2355 */
struct _class_skill_result_one_zocl
{
  char byErrCode;
  char byAttackSerial;
};

/* 2356 */
struct _class_skill_result_other_zocl
{
  char byRetCode;
  _CHRID idPerformer;
  _CHRID idDster;
  unsigned __int16 wSkillIndex;
  char byAttackSerial;
};

/* 2357 */
struct _throw_skill_result_one_zocl::__effected_list
{
  char byObjID;
  unsigned int dwObjSerial;
  char byRetCode;
  unsigned __int16 wEffectValue;
};

/* 2358 */
struct _throw_skill_result_one_zocl
{
  char byErrCode;
  char byAttackSerial;
  _CHRID idDster;
  char byEffectedNum;
  _throw_skill_result_one_zocl::__effected_list list[30];
};

/* 2359 */
struct _throw_skill_result_other_zocl
{
  char byRetCode;
  _CHRID idPerformer;
  char bySkillIndex;
  char byAttackSerial;
  _CHRID idDster;
  char byEffectedNum;
  _throw_skill_result_one_zocl::__effected_list list[30];
};

/* 2360 */
struct _throw_unit_result_one_zocl
{
  char byErrCode;
  char byAttackSerial;
  _CHRID idDster;
  char byEffectedNum;
  _throw_skill_result_one_zocl::__effected_list list[30];
};

/* 2361 */
struct _throw_unit_result_other_zocl
{
  char byRetCode;
  _CHRID idPerformer;
  char byBulletIndex;
  char byAttackSerial;
  _CHRID idDster;
  char byEffectedNum;
  _throw_skill_result_one_zocl::__effected_list list[30];
};

/* 2362 */
struct _set_fp_inform_zocl
{
  unsigned __int16 wFP;
};

/* 2363 */
struct _set_hp_inform_zocl
{
  unsigned __int16 wHP;
};

/* 2364 */
struct _set_sp_inform_zocl
{
  unsigned __int16 wSP;
};

/* 2365 */
struct _set_dp_inform_zocl
{
  unsigned __int16 wDP;
};

/* 2366 */
struct _insert_item_inform_zocl
{
  char byStorageCode;
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  unsigned __int16 wSerial;
  unsigned int dwLv;
};

/* 2367 */
struct _insert_quest_item_inform_zocl
{
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  unsigned int dwLv;
};

/* 2368 */
struct _make_tower_result_zocl
{
  char byErrCode;
  unsigned int dwTowerObjSerial;
  unsigned __int16 wLeftFP;
};

/* 2369 */
struct _back_tower_result_zocl
{
  char byErrCode;
  unsigned __int16 wItemSerial;
  unsigned __int16 wLeftHP;
};

/* 2370 */
struct _alter_tower_hp_zocl
{
  unsigned __int16 wItemSerial;
  unsigned __int16 wLeftHP;
};

/* 2371 */
struct _alter_cont_effect_time_zocl::__list
{
  unsigned __int16 wEffectCode;
  __int16 zLeftSec;
};

/* 2372 */
struct _alter_cont_effect_time_zocl
{
  char byEffectNum;
  _alter_cont_effect_time_zocl::__list List[8];
};

/* 2373 */
struct _effect_start_inform_zocl
{
  char byLv;
  unsigned __int16 wEffectCode;
  unsigned __int16 wDurSec;
};

/* 2374 */
struct _effect_add_inform_zocl
{
  char byLv;
  unsigned __int16 wEffectCode;
  unsigned __int16 wDurSec;
};

/* 2375 */
struct _effect_remove_inform_zocl
{
  unsigned __int16 wEffectCode;
};

/* 2376 */
struct _make_trap_result_zocl
{
  char byErrCode;
  unsigned int dwTrapObjSerial;
  unsigned __int16 wLeftFP;
};

/* 2377 */
struct _made_trap_num_inform_zocl
{
  char byNum;
};

/* 2378 */
struct _continue_tower_inform
{
  unsigned __int16 wItemSerial;
  unsigned __int16 wTwrRecIndex;
  unsigned __int16 wTwrIndex;
  unsigned int dwTwrSerial;
};

/* 2379 */
struct _d_trade_ask_result_clzo
{
  char byErrCode;
};

/* 2380 */
struct _d_trade_ask_inform_zocl
{
  _CLID idAsker;
};

/* 2381 */
struct _d_trade_answer_result_zocl
{
  char byErrCode;
};

/* 2382 */
struct _d_trade_start_inform_zocl
{
  _CLID idAsker;
  char byAskerEmptyNum;
  _CLID idAnswer;
  char byAnswerEmptyNum;
  unsigned int dwKey[4];
};

/* 2383 */
struct _d_trade_cancle_result_zocl
{
  char byErrCode;
};

/* 2384 */
struct _d_trade_cancle_inform_zocl
{
  char dummy[1];
};

/* 2385 */
struct _d_trade_lock_result_zocl
{
  char byErrCode;
};

/* 2386 */
struct _d_trade_lock_inform_zocl
{
  char dummy[1];
};

/* 2387 */
struct _d_trade_add_result_zocl
{
  char byErrCode;
};

/* 2388 */
struct _d_trade_add_inform_zocl
{
  char bySlotIndex;
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  unsigned int dwUdtInfo;
  char byAmount;
  char byEmptyInvenNum;
};

/* 2389 */
struct _d_trade_del_result_zocl
{
  char byErrCode;
};

/* 2390 */
struct _d_trade_del_inform_zocl
{
  char bySlotIndex;
  char byEmptyInvenNum;
};

/* 2391 */
struct _d_trade_bet_result_zocl
{
  char byErrCode;
};

/* 2392 */
struct _d_trade_bet_inform_zocl
{
  char byMoneyUnit;
  unsigned int dwBetAmount;
};

/* 2393 */
struct _d_trade_ok_result_zocl
{
  char byErrCode;
};

/* 2394 */
struct _d_trade_ok_inform_zocl
{
  char dummy[1];
};

/* 2395 */
struct _d_trade_accomplish_inform_zocl
{
  unsigned int dwDalant;
  unsigned int dwGold;
  unsigned __int16 wStartSerial;
  char bSucc;
};

/* 2396 */
struct _d_trade_close_inform_zocl
{
  char byCloseCode;
};

/* 2397 */
struct _d_trade_unit_info_inform_zocl
{
  char byTradeSlotIndex;
  char byFrame;
  unsigned int dwGauge;
  char byPart[6];
  unsigned int dwBullet[2];
  unsigned int dwSpare[8];
  int nDebtFee;
};

/* 2398 */
struct _d_trade_unit_add_inform_zocl
{
  unsigned __int16 wUnitKeySerial;
  char bySlotIndex;
  char byFrame;
  unsigned int dwGauge;
  char byPart[6];
  unsigned int dwBullet[2];
  unsigned int dwSpare[8];
  int nPullingFee;
};

/* 2399 */
struct _start_trade_inform_zocl
{
  char s;
};

/* 2400 */
struct _insert_new_quest_inform_zocl
{
  char byQuestDBSlot;
  _QUEST_DB_BASE::_LIST NewQuestData;
};

/* 2401 */
struct _insert_next_quest_inform_zocl
{
  char byQuestDBSlot;
  _QUEST_DB_BASE::_LIST NewQuestData;
};

/* 2402 */
struct _select_waited_quest_command_zocl
{
  char byEventType;
  unsigned int dwEventIndex;
  char byEventNodeIndex;
};

/* 2403 */
struct _insert_quest_failure_zocl
{
  char byEventType;
  unsigned int dwEventIndex;
  char byEventNodeIndex;
};

/* 2404 */
struct _quest_complete_inform_zocl
{
  char byQuestDBSlot;
};

/* 2405 */
struct _quest_process_inform_zocl
{
  char byQuestDBSlot;
  char byActIndex;
  unsigned __int16 wCount;
};

/* 2406 */
struct _quest_fail_inform_zocl
{
  char byFailCode;
  char byQuestDBSlot;
};

/* 2407 */
struct _quest_select_reward_inform_zocl
{
  char byQuestDBSlot;
};

/* 2408 */
struct _recv_hsk_quest_inform_zocl
{
  char byHSKQuestCode;
  int nPvpPoint;
  unsigned __int16 wKillPoint;
};

/* 2409 */
struct _pvp_rank_list_result_nodata_zocl
{
  char byRace;
  char byPage;
  char byRet;
};

/* 2410 */
struct _pvp_rank_list_result_data_zocl
{
  char byRace;
  char byVersion;
  char byPage;
  unsigned __int16 wRankDataLen;
  char szPvpRankData[4000];
};

/* 2411 */
struct _pvp_rank_list_version_up_zocl
{
  char byVersion;
};

/* 2412 */
struct _target_object_hp_inform_clzo
{
  char byKind;
  char byID;
  unsigned int dwSerial;
  unsigned __int16 wHPRate;
};

/* 2413 */
struct _set_target_object_result_zocl
{
  char byRetCode;
  char byKind;
  char byID;
  unsigned int dwSerial;
  unsigned __int16 wHPRate;
  char byGrade;
  char bForce;
};

/* 2414 */
struct _propose_vote_result_zocl
{
  char byRetCode;
};

/* 2415 */
struct _cast_vote_result_zocl
{
  char byRetCode;
  int nVoteSerial;
  unsigned __int16 wPoint[3];
};

/* 2416 */
struct _trunk_download_result_zocl::_list
{
  unsigned __int16 wSerial;
  char byTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDurPoint;
  char sClientIndex;
  unsigned int dwUptInfo;
  char byRace;
};

/* 2417 */
struct _trunk_download_result_zocl
{
  char byRetCode;
  double dDalant;
  double dGold;
  char byListNum;
  char byPackNum;
  _trunk_download_result_zocl::_list List[100];
};

/* 2418 */
struct _trunk_est_result_zocl
{
  char byRetCode;
  unsigned int dwLeftDalant;
};

/* 2419 */
struct _trunk_change_passwd_result_zocl
{
  char byRetCode;
};

/* 2420 */
struct _trunk_extend_result_zocl
{
  char byRetCode;
  char byPackNum;
  unsigned int dwLeftDalant;
  unsigned int dwConsumDanlant;
};

/* 2421 */
struct _trunk_res_division_result_zocl
{
  char byErrCode;
  unsigned __int16 wParentSerial;
  unsigned __int16 wParentAmount;
  unsigned __int16 wChildSerial;
  unsigned __int16 wChildAmount;
};

/* 2422 */
struct _trunk_potionsocket_division_result_zocl
{
  char sErrorCode;
  unsigned __int16 wSerial;
  unsigned __int16 wParentAmount;
  unsigned __int16 wChildSerial;
  unsigned __int16 wChildAmount;
};

/* 2423 */
struct _trunk_io_result_zocl
{
  char byCase;
  char byRetCode;
  unsigned int dwLeftDalant;
  unsigned int dwConsumDanlant;
};

/* 2424 */
struct _trunk_io_money_result_zocl
{
  char byRetCode;
  double dTrunkDalant;
  double dTrunkGold;
  unsigned int dwCharDalant;
  unsigned int dwCharGold;
  unsigned int dwFeeDalant;
};

/* 2425 */
struct _trunk_pw_hint_index_result_zocl
{
  char byRetCode;
  char byHintIndex;
};

/* 2426 */
struct _trunk_hint_answer_result_zocl
{
  char byRetCode;
  unsigned __int16 wszPassword[13];
};

/* 2427 */
struct _guild_establish_fail_zocl
{
  char byRetCode;
};

/* 2428 */
struct _guild_join_apply_result_zocl
{
  char byRetCode;
  unsigned int dwGuildSerial;
  unsigned __int16 wszGuildName[17];
};

/* 2429 */
struct _guild_join_apply_cancel_result_zocl
{
  char byRetCode;
};

/* 2430 */
struct _guild_self_leave_result_zocl
{
  char byRetCode;
};

/* 2431 */
struct _guild_offer_suggest_result_zocl
{
  char byRetCode;
};

/* 2432 */
struct _guild_cancel_suggest_result_zocl
{
  char byRetCode;
};

/* 2433 */
struct _guild_vote_result_zocl
{
  unsigned int dwMatterVoteSynKey;
  char byRetCode;
};

/* 2434 */
struct _guild_join_accept_fail_zocl
{
  char byRetCode;
  unsigned int dwApplierSerial;
};

/* 2435 */
struct _guild_join_apply_reject_inform_zocl
{
  char sDum;
};

/* 2436 */
struct _guild_push_money_result_zocl
{
  char byRetCode;
  unsigned int dwLeftDalant;
  unsigned int dwLeftGold;
};

/* 2437 */
struct _guild_join_other_inform_zocl
{
  unsigned int dwAvatorSerial;
  unsigned int dwGuildSerial;
  unsigned __int16 wVisualVersion;
};

/* 2438 */
struct _a_trade_reg_item_result_zocl
{
  char byRetCode;
  unsigned __int16 wListIndex;
  char byStoreIndex;
  unsigned __int16 wItemSerial;
  unsigned int dwPrice;
  unsigned int dwRegedSerial;
  char byTableCode;
  char byKind;
  char byLvClass;
  unsigned __int16 wfeeDalant;
  unsigned int dwLeftDalant;
  unsigned __int16 wSepaSerial;
  char bySepaAmount;
};

/* 2439 */
struct _a_trade_clear_inform_zocl
{
  unsigned __int16 wItemSerial;
};

/* 2440 */
struct _a_trade_adjust_price_result_clzo
{
  char byRetCode;
  unsigned __int16 wItemSerial;
  unsigned int dwNewPrice;
};

/* 2441 */
struct _a_trade_clear_item_result_clzo
{
  char byRetCode;
  unsigned __int16 wItemSerial;
};

/* 2442 */
struct _a_trade_sell_inform_zocl
{
  unsigned __int16 wItemSerial;
  unsigned int dwAddDalant;
  unsigned int dwTexDalant;
  unsigned int dwTotalDalant;
};

/* 2443 */
struct _a_trade_buy_item_result_zocl::__list_header
{
  unsigned __int16 wListIndex;
  unsigned int dwNodeSerial;
  char byTailType;
};

/* 2444 */
struct _a_trade_buy_item_result_zocl::__list_succ
{
  _a_trade_buy_item_result_zocl::__list_header baseclass_0;
  unsigned __int16 dwNewItemSerial;
  char byItemTableCode;
  unsigned __int16 wItemIndex;
  unsigned int dwDur;
  unsigned int dwLv;
};

/* 2445 */
struct _a_trade_buy_item_result_zocl::__list_reprice
{
  _a_trade_buy_item_result_zocl::__list_header baseclass_0;
  unsigned int dwNewPrice;
};

/* 2446 */
struct _a_trade_buy_item_result_zocl::__list_fail
{
  _a_trade_buy_item_result_zocl::__list_header baseclass_0;
  char byFailCode;
};

/* 2447 */
struct _a_trade_buy_item_result_zocl
{
  char byRetCode;
  unsigned int dwPayDalant;
  unsigned int dwLeftDalant;
  char byGoodNum;
  unsigned __int16 wDataSize;
  char sData[1280];
};

/* 2448 */
struct _a_trade_continue_reged_inform_zocl::__list
{
  unsigned __int16 wItemSerial;
  unsigned int dwPrice;
  unsigned __int16 wPassSec;
};

/* 2449 */
struct _a_trade_continue_reged_inform_zocl
{
  char byRegedNum;
  _a_trade_continue_reged_inform_zocl::__list List[10];
};

/* 2450 */
struct _a_trade_continue_reged_result_zocl
{
  unsigned int dwAddDalant;
  unsigned int dwTotalDalant;
  char byRegedNum;
  _a_trade_continue_reged_result_zocl::__list List[10];
};

/* 2451 */
struct _transform_siege_mode_result_zocl
{
  char byRetCode;
};

/* 2452 */
struct _transform_siege_mode_other_inform_zocl
{
  unsigned int dwAvatorSerial;
  unsigned __int16 wWeaponItemIndex;
  char bySiegeItemIndex;
  unsigned __int16 wVisualVer;
};

/* 2453 */
struct _release_siege_mode_result_zocl
{
  char byRetCode;
};

/* 2454 */
struct _release_siege_mode_other_inform_zocl
{
  unsigned int dwAvatorSerial;
  unsigned __int16 wVisualVer;
};

/* 2455 */
struct _remaintime_inform_zocl
{
  __int16 iType;
  int lRemainMin;
  _SYSTEMTIME stEndDate;
};

/* 2456 */
struct _change_billing_type_inform_zocl
{
  __int16 iCurrentType;
  __int16 iChangeType;
  int lRemainMin;
  _SYSTEMTIME stEndDate;
  char byReason;
};

/* 2457 */
struct _billing_expire_inform_zocl
{
  char byKind;
  unsigned __int16 wWaitSec;
};

/* 2458 */
struct _buddy_in_reged_player_inform_zocl
{
  unsigned int dwSerial;
  char byMapIndex;
  char byPositionCode;
};

/* 2459 */
struct _buddy_off_reged_player_inform_zocl
{
  unsigned int dwSerial;
};

/* 2460 */
struct _buddy_add_ask_zocl
{
  unsigned __int16 wAskerIndex;
  unsigned int dwAskerSerial;
  unsigned __int16 wszAskerName[17];
};

/* 2461 */
struct _buddy_add_fail_zocl
{
  char byRetCode;
  unsigned __int16 wszDstName[17];
};

/* 2462 */
struct _buddy_add_result_zocl
{
  char byRetCode;
  char bAccept;
  unsigned int dwAskerSerial;
  unsigned __int16 wAdderIndex;
  unsigned int dwAdderSerial;
  unsigned __int16 wszAdderName[17];
};

/* 2463 */
struct _buddy_del_result_clzo
{
  char byRetCode;
  unsigned int dwSerial;
};

/* 2464 */
struct _buddy_pos_inform_zocl
{
  unsigned int dwSerial;
  char byMapIndex;
  char byPositionCode;
};

/* 2465 */
struct _map_env_code_inform_zocl
{
  char byMapCode;
  unsigned int dwEnvCode;
  int long_time;
};

/* 2466 */
struct _TOWNItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  char m_strMapCode[64];
  char m_strDummyName[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2467 */
struct _BatteryItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_nDurUnit;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2468 */
struct _POTION_EFFECT
{
  int nCode;
  float fUnit;
};

/* 2469 */
struct _ItemCombine_fld::_material
{
  char m_itmPdMat[8];
  int m_nDur;
};

/* 2470 */
struct _ItemCombine_fld::_output
{
  char m_itmPdOutput[8];
  unsigned int m_dwProb;
};

/* 2471 */
struct _ItemCombine_fld
{
  _base_fld baseclass_0;
  unsigned int m_dwFee;
  char m_strCivil[64];
  _ItemCombine_fld::_material m_Material[5];
  _ItemCombine_fld::_output m_Output[10];
};

/* 2472 */
struct _ItemExchange_fld::_output
{
  char m_itmPdOutput[8];
  unsigned int m_dwProb;
};

/* 2473 */
struct _ItemExchange_fld
{
  _base_fld baseclass_0;
  _ItemExchange_fld::_output m_Output[10];
};

/* 2474 */
struct _ItemUpgrade_fld
{
  _base_fld baseclass_0;
  char m_strName[64];
  int m_nJewelType;
  float m_fJewelFieldValue;
  int m_nUpperUp;
  int m_nLowerUp;
  int m_nGauntletUp;
  int m_nShoeUp;
  int m_nHelmetUp;
  int m_nShieldUp;
  int m_nMeleeUp;
  int m_nMissileUp;
  int m_nUnitUp;
  int m_nDataEffect;
  int m_nEffectUnit;
  float m_fUp1;
  float m_fUp2;
  float m_fUp3;
  float m_fUp4;
  float m_fUp5;
  float m_fUp6;
  float m_fUp7;
};

/* 2475 */
struct _BagItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2476 */
struct _TrapItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  char m_strCharMeshID[64];
  char m_strName[64];
  char m_strCivil[64];
  int m_nLevel;
  int m_nLevelLim;
  int m_nExpertLim;
  int m_nExpTimeSec;
  int m_bDisjointable;
  int m_nUpkeepTimeMin;
  int m_nIconIDX;
  float m_fReactionDst;
  float m_fAttGap;
  int m_nAttack_DP;
  float m_fGADst;
  int m_bSetTarget;
  int m_nAttSklUnit;
  int m_nGAMinAF;
  int m_nGAMaxAF;
  int m_nGAMinSelProb;
  int m_nGAMaxSelProb;
  float m_fMaxHP;
  int m_nDefSklUnit;
  int m_nDefFc;
  float m_fDefGap;
  float m_fDefFacing;
  int m_nProperty;
  int m_nFireTol;
  int m_nWaterTol;
  int m_nSoilTol;
  int m_nWindTol;
  int m_nEff1Code;
  float m_fEff1Unit;
  int m_nEff2Code;
  float m_fEff2Unit;
  int m_nDuration;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bDismantle;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_bUpgrade;
  char m_strTooltipIndex[64];
  int m_nAttEffType;
  int m_nDefEffType;
};

/* 2477 */
struct _announ_message_receipt_udp
{
  char byMessageType;
  char bySenderRace;
  unsigned __int16 wszSenderName[17];
  char bySize;
  unsigned __int16 wszChatData[256];
};

/* 2478 */
struct _chat_guild_failure_zocl
{
  char byErrCode;
};

/* 2479 */
struct CPlayer::pc_ChatCheat_Korea_Request::_eq_suk_list
{
  unsigned __int16 *pwszEpSuk;
  int nCode;
  int nIndex;
};

/* 2480 */
struct _chat_multi_far_failure_zocl
{
  unsigned __int16 wszDstName[17];
  char byFailCode;
};

/* 2481 */
struct _chat_multi_far_trans_zocl
{
  unsigned __int16 wSize;
  char sData[500];
};

/* 2482 */
struct _buddy_download_result_zocl
{
  unsigned __int16 wDataSize;
  char sData[10000];
};

/* 2483 */
struct _WA_AVATOR_CODE
{
  _CLID m_id;
  unsigned __int16 m_wszName[17];
};

/* 2484 */
struct _RecoveryItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_bMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_nMinRecoveryPro;
  int m_nMaxRecoveryPro;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2485 */
struct _MasteryLimit_fld
{
  _base_fld baseclass_0;
  int m_nLevel;
  _mastery_lim_data m_MasteryLim;
};

/* 2486 */
struct _exp_fld
{
  _base_fld baseclass_0;
  char m_strBellato[64];
  char m_strCora[64];
  char m_strAccretia[64];
};

/* 2487 */
struct __list
{
  char *pfilename;
  int nstructsize;
};

/* 2488 */
struct _MakeToolItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nLevelLim;
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bAbr;
  int m_nDurUnit;
  int m_nToolClass;
  int m_bRepair;
  int m_nEffState;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  int m_bUpgrade;
  char m_strTooltipIndex[64];
};

/* 2489 */
struct _MapItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  char m_strMapCode[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2490 */
struct _BoxItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModel[64];
  int m_nIconIDX;
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nMoney;
  int m_nStdPrice;
  int m_nStoragePrice;
  int m_bSell;
  int m_bExchange;
  int m_bGround;
  int m_bStoragePossible;
  int m_bUseableNormalAcc;
  char m_strTooltipIndex[64];
};

/* 2491 */
struct _FaceItem_fld
{
  _base_fld baseclass_0;
  int m_bExist;
  char m_strModle[64];
  char m_strName[64];
  int m_nKindClt;
  int m_nFixPart;
  char m_strCivil[64];
  int m_nDefEffType;
};

/* 2492 */
struct _EventItem_fld
{
  _base_fld baseclass_0;
  int m_nIconIDX;
  char m_strName[64];
  char m_strTooltipIndex[64];
};

/* 2493 */
struct AFX_MSGMAP
{
  AFX_MSGMAP *(__stdcall *pfnGetBaseMap)();
  AFX_MSGMAP_ENTRY *lpEntries;
};

/* 2494 */
const struct AFX_MSGMAP_ENTRY
{
  unsigned int nMessage;
  unsigned int nCode;
  unsigned int nID;
  unsigned int nLastID;
  unsigned int nSig;
  void (__thiscall *pfn)(CCmdTarget *this);
};

/* 2495 */
struct CScrollView
{
  CView baseclass_0;
  int m_nMapMode;
  CSize m_totalLog;
  CSize m_totalDev;
  CSize m_pageDev;
  CSize m_lineDev;
  int m_bCenter;
  int m_bInsideUpdate;
};

/* 2496 */
struct CCreateContext
{
  CRuntimeClass *m_pNewViewClass;
  CDocument *m_pCurrentDoc;
  CDocTemplate *m_pNewDocTemplate;
  CView *m_pLastView;
  CFrameWnd *m_pCurrentFrame;
};

/* 2497 */
struct CFormView
{
  CScrollView baseclass_0;
  const char *m_lpszTemplateName;
  CCreateContext *m_pCreateContext;
  HWND__ *m_hWndFocus;
  struct _AFX_OCC_DIALOG_INFO *m_pOccDialogInfo;
};

/* 2498 */
struct CGameServerView
{
  CFormView baseclass_0;
  CButton m_btServerClose;
  CButton m_btPreClose;
  CButton m_btMonster;
  CButton m_btDisplayAll;
  CButton m_btHSKStop;
  CButton m_btLogFile;
};

/* 2499 */
struct CDataExchange
{
  int m_bSaveAndValidate;
  CWnd *m_pDlgWnd;
  HWND__ *m_hWndLastControl;
  int m_bEditLastControl;
};

/* 2500 */
struct CCommonDialog
{
  CDialog baseclass_0;
};

/* 2501 */
struct tagPDA
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const char *lpPrintTemplateName;
  const char *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};

/* 2502 */
#pragma pack(push, 4)
struct CPrintDialog
{
  CCommonDialog baseclass_0;
  tagPDA *m_pd;
  tagPDA m_pdActual;
};
#pragma pack(pop)

/* 2503 */
struct CPrintInfo
{
  CPrintDialog *m_pPD;
  int m_bDocObject;
  int m_bPreview;
  int m_bDirect;
  int m_bContinuePrinting;
  unsigned int m_nCurPage;
  unsigned int m_nNumPreviewPages;
  CString m_strPageDesc;
  void *m_lpUserData;
  CRect m_rectDraw;
  unsigned int m_nOffsetPage;
  unsigned int m_dwFlags;
};

/* 2504 */
struct COpenDlg
{
  CDialog baseclass_0;
  CString m_stLoad;
};

/* 2505 */
union $E87499399BF5EF6B689B45AFC98E033F
{
  CPtrArray *m_pLoadArray;
  CMapPtrToPtr *m_pStoreMap;
};

/* 2506 */
struct CArchive
{
  CDocument *m_pDocument;
  int m_bForceFlat;
  int m_bDirectBuffer;
  unsigned int m_nObjectSchema;
  CString m_strFileName;
  int m_nMode;
  int m_bUserBuf;
  int m_nBufSize;
  CFile *m_pFile;
  char *m_lpBufCur;
  char *m_lpBufMax;
  char *m_lpBufStart;
  unsigned int m_nMapCount;
  $E87499399BF5EF6B689B45AFC98E033F ___u13;
  CMapPtrToPtr *m_pSchemaMap;
  unsigned int m_nGrowSize;
  unsigned int m_nHashSize;
};

/* 2507 */
struct CGameServerApp
{
  CWinApp baseclass_0;
};

/* 2508 */
struct CSingleDocTemplate
{
  CDocTemplate baseclass_0;
  CDocument *m_pOnlyDoc;
};

/* 2509 */
struct CAboutDlg
{
  CDialog baseclass_0;
};

/* 2510 */
struct CPaintDC
{
  CDC baseclass_0;
  HWND__ *m_hWnd;
  tagPAINTSTRUCT m_ps;
};

/* 2511 */
struct CComboBox
{
  CWnd baseclass_0;
};

/* 2512 */
struct CObjectSearchDlg
{
  CDialog baseclass_0;
  _object_id m_ID;
  char m_szCharName[17];
  __declspec(align(4)) CComboBox m_cdObjectKind;
  CComboBox m_cdObjectID;
  unsigned int m_edIndex;
  CString m_edStrCharName;
};

/* 2513 */
struct CScrollBar
{
  CWnd baseclass_0;
};

/* 2514 */
struct F32vec4
{
  float vec[4];
};

/* 2515 */
struct F32vec1
{
  float vec[4];
};

/* 2516 */
struct D3DXQUATERNION
{
  float x;
  float y;
  float z;
  float w;
};

/* 2517 */
struct _D3DVECTOR
{
  float x;
  float y;
  float z;
};

/* 2518 */
struct D3DXVECTOR3
{
  _D3DVECTOR baseclass_0;
};

/* 2519 */
struct D3DXVECTOR4
{
  float x;
  float y;
  float z;
  float w;
};

/* 2520 */
struct D3DXPLANE
{
  float a;
  float b;
  float c;
  float d;
};

/* 2521 */
struct _D3DCOLORVALUE
{
  float r;
  float g;
  float b;
  float a;
};

/* 2522 */
struct D3DXCOLOR
{
  float r;
  float g;
  float b;
  float a;
};

/* 2523 */
struct _D3DVIEWPORT8
{
  unsigned int X;
  unsigned int Y;
  unsigned int Width;
  unsigned int Height;
  float MinZ;
  float MaxZ;
};

/* 2524 */
struct D3DXFASTTABLE
{
  D3DXVECTOR4 *(__stdcall *pD3DXVec2Transform)(D3DXVECTOR4 *, D3DXVECTOR2 *const , D3DXMATRIX *const );
  D3DXVECTOR4 *(__stdcall *pD3DXVec3Transform)(D3DXVECTOR4 *, D3DXVECTOR3 *const , D3DXMATRIX *const );
  D3DXVECTOR4 *(__stdcall *pD3DXVec4Transform)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXMATRIX *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixMultiply)(D3DXMATRIX *, D3DXMATRIX *const , D3DXMATRIX *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixMultiplyTranspose)(D3DXMATRIX *, D3DXMATRIX *const , D3DXMATRIX *const );
  D3DXVECTOR2 *(__stdcall *pD3DXVec2TransformNormal)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXMATRIX *const );
  D3DXVECTOR3 *(__stdcall *pD3DXVec3TransformNormal)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXMATRIX *const );
  D3DXVECTOR3 *(__stdcall *pD3DXVec3Normalize)(D3DXVECTOR3 *, D3DXVECTOR3 *const );
  D3DXVECTOR4 *(__stdcall *pD3DXVec4Normalize)(D3DXVECTOR4 *, D3DXVECTOR4 *const );
  D3DXVECTOR2 *(__stdcall *pD3DXVec2TransformCoord)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXMATRIX *const );
  D3DXVECTOR3 *(__stdcall *pD3DXVec3TransformCoord)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXMATRIX *const );
  float (__stdcall *pD3DXMatrixfDeterminant)(D3DXMATRIX *const );
  D3DXPLANE *(__stdcall *pD3DXPlaneFromPointNormal)(D3DXPLANE *, D3DXVECTOR3 *const , D3DXVECTOR3 *const );
  D3DXPLANE *(__stdcall *pD3DXPlaneFromPoints)(D3DXPLANE *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const );
  D3DXVECTOR3 *(__stdcall *pD3DXVec3Project)(D3DXVECTOR3 *, D3DXVECTOR3 *const , _D3DVIEWPORT8 *const , D3DXMATRIX *const , D3DXMATRIX *const , D3DXMATRIX *const );
  D3DXVECTOR3 *(__stdcall *pD3DXVec3Unproject)(D3DXVECTOR3 *, D3DXVECTOR3 *const , _D3DVIEWPORT8 *const , D3DXMATRIX *const , D3DXMATRIX *const , D3DXMATRIX *const );
  D3DXVECTOR4 *(__stdcall *pD3DXVec4Cross)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const );
  D3DXVECTOR2 *(__stdcall *pD3DXVec2Hermite)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixInverse)(D3DXMATRIX *, float *, D3DXMATRIX *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionMultiply)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionNormalize)(D3DXQUATERNION *, D3DXQUATERNION *const );
  D3DXPLANE *(__stdcall *pD3DXPlaneNormalize)(D3DXPLANE *, D3DXPLANE *const );
  D3DXVECTOR3 *(__stdcall *pD3DXPlaneIntersectLine)(D3DXVECTOR3 *, D3DXPLANE *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const );
  void (__stdcall *pD3DXQuaternionToAxisAngle)(D3DXQUATERNION *const , D3DXVECTOR3 *, float *);
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionRotationMatrix)(D3DXQUATERNION *, D3DXMATRIX *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionRotationYawPitchRoll)(D3DXQUATERNION *, float, float, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixTranslation)(D3DXMATRIX *, float, float, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixShadow)(D3DXMATRIX *, D3DXVECTOR4 *const , D3DXPLANE *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixReflect)(D3DXMATRIX *, D3DXPLANE *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionRotationAxis)(D3DXQUATERNION *, D3DXVECTOR3 *const , float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationX)(D3DXMATRIX *, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationY)(D3DXMATRIX *, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationZ)(D3DXMATRIX *, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixScaling)(D3DXMATRIX *, float, float, float);
  D3DXPLANE *(__stdcall *pD3DXPlaneTransform)(D3DXPLANE *, D3DXPLANE *const , D3DXMATRIX *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionSlerp)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , float);
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionBaryCentric)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , float, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixTranspose)(D3DXMATRIX *, D3DXMATRIX *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationQuaternion)(D3DXMATRIX *, D3DXQUATERNION *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixTransformation)(D3DXMATRIX *, D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationYawPitchRoll)(D3DXMATRIX *, float, float, float);
  D3DXMATRIX *(__stdcall *pD3DXMatrixAffineTransformation)(D3DXMATRIX *, float, D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const );
  D3DXMATRIX *(__stdcall *pD3DXMatrixRotationAxis)(D3DXMATRIX *, D3DXVECTOR3 *const , float);
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionSquad)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , float);
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionInverse)(D3DXQUATERNION *, D3DXQUATERNION *const );
  void (__stdcall *pD3DXQuaternionSquadSetup)(D3DXQUATERNION *, D3DXQUATERNION *, D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const );
  D3DXVECTOR2 *(__stdcall *pD3DXVec2Normalize)(D3DXVECTOR2 *, D3DXVECTOR2 *const );
  D3DXVECTOR2 *(__stdcall *pD3DXVec2CatmullRom)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float);
  D3DXVECTOR2 *(__stdcall *pD3DXVec2BaryCentric)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float, float);
  D3DXVECTOR3 *(__stdcall *pD3DXVec3Hermite)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float);
  D3DXVECTOR3 *(__stdcall *pD3DXVec3CatmullRom)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float);
  D3DXVECTOR3 *(__stdcall *pD3DXVec3BaryCentric)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float, float);
  D3DXVECTOR4 *(__stdcall *pD3DXVec4Hermite)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float);
  D3DXVECTOR4 *(__stdcall *pD3DXVec4CatmullRom)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float);
  D3DXVECTOR4 *(__stdcall *pD3DXVec4BaryCentric)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float, float);
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionLn)(D3DXQUATERNION *, D3DXQUATERNION *const );
  D3DXQUATERNION *(__stdcall *pD3DXQuaternionExp)(D3DXQUATERNION *, D3DXQUATERNION *const );
};

/* 2525 */
const struct ATL::_ATL_CATMAP_ENTRY
{
  int iType;
  _GUID *pcatid;
};

/* 2526 */
struct ATL::_ATL_OBJMAP_ENTRY
{
  _GUID *pclsid;
  int (__stdcall *pfnUpdateRegistry)(int);
  int (__stdcall *pfnGetClassObject)(void *, _GUID *, void **);
  int (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  IUnknown *pCF;
  unsigned int dwRegister;
  const char *(__stdcall *pfnGetObjectDescription)();
  ATL::_ATL_CATMAP_ENTRY *(__cdecl *pfnGetCategoryMap)();
  void (__stdcall *pfnObjectMain)(char);
};

/* 2527 */
struct ATL::_AtlCreateWndData
{
  void *m_pThis;
  unsigned int m_dwThreadID;
  ATL::_AtlCreateWndData *m_pNext;
};

/* 2528 */
struct ATL::_ATL_TERMFUNC_ELEM
{
  void (__stdcall *pFunc)(unsigned int);
  unsigned int dw;
  ATL::_ATL_TERMFUNC_ELEM *pNext;
};

/* 2529 */
union $1305CFFDAEAAB6BB3FA784AEB798D325
{
  _RTL_CRITICAL_SECTION m_csTypeInfoHolder;
  _RTL_CRITICAL_SECTION m_csStaticDataInit;
};

/* 2530 */
#pragma pack(push, 4)
struct ATL::_ATL_MODULE
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInst;
  HINSTANCE__ *m_hInstResource;
  HINSTANCE__ *m_hInstTypeLib;
  ATL::_ATL_OBJMAP_ENTRY *m_pObjMap;
  int m_nLockCnt;
  void *m_hHeap;
  $1305CFFDAEAAB6BB3FA784AEB798D325 ___u7;
  _RTL_CRITICAL_SECTION m_csWindowCreate;
  _RTL_CRITICAL_SECTION m_csObjMap;
  unsigned int dwAtlBuildVer;
  ATL::_AtlCreateWndData *m_pCreateWndList;
  char m_bDestroyHeap;
  _GUID *pguidVer;
  unsigned int m_dwHeaps;
  void **m_phHeaps;
  int m_nHeap;
  ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
};
#pragma pack(pop)

/* 2531 */
struct ATL::CComModule
{
  ATL::_ATL_MODULE baseclass_0;
};

/* 2532 */
struct _exception
{
  int type;
  char *name;
  double arg1;
  double arg2;
  double retval;
};

/* 2533 */
struct _startupinfo
{
  int newmode;
};

/* 2534 */
struct ATL::_ATL_REGMAP_ENTRY
{
  const unsigned __int16 *szKey;
  const unsigned __int16 *szData;
};

/* 2535 */
struct __POSITION
{
  char dummy[1];
};

/* 2536 */
struct CException
{
  CObject baseclass_0;
  int m_bAutoDelete;
  int m_bReadyForDelete;
};

/* 2537 */
struct CDynLinkLibrary
{
  CCmdTarget baseclass_0;
  HINSTANCE__ *m_hModule;
  HINSTANCE__ *m_hResource;
  CTypedSimpleList<CRuntimeClass *> m_classList;
  CTypedSimpleList<COleObjectFactory *> m_factoryList;
  int m_bSystem;
  CDynLinkLibrary *m_pNextDLL;
};

/* 2538 */
struct COleControlLock
{
  COleControlLockVtbl *vfptr;
  _GUID m_clsid;
  IClassFactory *m_pClassFactory;
  COleControlLock *m_pNextLock;
};

/* 2539 */
struct COleControlLockVtbl
{
  void *(__thiscall *__vecDelDtor)(COleControlLock *this, unsigned int);
};

/* 2540 */
struct CTypedSimpleList<CFrameWnd *>
{
  CSimpleList baseclass_0;
};

/* 2541 */
struct CHandleMap
{
  CMapPtrToPtr m_permanentMap;
  CMapPtrToPtr m_temporaryMap;
  CRuntimeClass *m_pClass;
  unsigned int m_nOffset;
  int m_nHandles;
};

/* 2542 */
struct CEmbeddedButActsLikePtr<CMapPtrToPtr>
{
  CMapPtrToPtr m_data;
};

/* 2543 */
struct CEmbeddedButActsLikePtr<CPtrList>
{
  CPtrList m_data;
};

/* 2544 */
struct AFX_MODULE_THREAD_STATE
{
  CNoTrackObject baseclass_0;
  CWinThread *m_pCurrentWinThread;
  CTypedSimpleList<CFrameWnd *> m_frameList;
  unsigned int m_nTempMapLock;
  CHandleMap *m_pmapHWND;
  CHandleMap *m_pmapHMENU;
  CHandleMap *m_pmapHDC;
  CHandleMap *m_pmapHGDIOBJ;
  CHandleMap *m_pmapHIMAGELIST;
  int (__cdecl *m_pfnNewHandler)(unsigned int);
  HWND__ *m_hSocketWindow;
  CEmbeddedButActsLikePtr<CMapPtrToPtr> m_pmapSocketHandle;
  CEmbeddedButActsLikePtr<CMapPtrToPtr> m_pmapDeadSockets;
  CEmbeddedButActsLikePtr<CPtrList> m_plistSocketNotifications;
};

/* 2545 */
struct AFX_CMDHANDLERINFO
{
  CCmdTarget *pTarget;
  void (__thiscall *pmf)(CCmdTarget *this);
};

/* 2546 */
struct AFX_EXTENSION_MODULE
{
  int bInitialized;
  HINSTANCE__ *hModule;
  HINSTANCE__ *hResource;
  CRuntimeClass *pFirstSharedClass;
  COleObjectFactory *pFirstSharedFactory;
};

/* 2547 */
struct _DAOCollection
{
  IDispatch baseclass_0;
};

/* 2548 */
struct _DAODynaCollection
{
  _DAOCollection baseclass_0;
};

/* 2549 */
struct DAOWorkspaces
{
  _DAODynaCollection baseclass_0;
};

/* 2550 */
struct DAOErrors
{
  _DAOCollection baseclass_0;
};

/* 2551 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/* 2552 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 _s0;
  __int64 int64;
};

/* 2553 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/* 2554 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/* 2555 */
struct tagVARIANT
{
  $E87CA73C731EA1982D041A9A9A598C38 ___u0;
};

/* 2556 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/* 2557 */
union $EA8FC2C690A9EFB5946A92024D1F336F
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA _s0;
  unsigned __int16 signscale;
};

/* 2558 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/* 2559 */
union $E923BCA2300F3A98DEF2297F913C0B86
{
  $A04CD8C0331024E133CCEC4B0AB36956 _s0;
  unsigned __int64 Lo64;
};

/* 2560 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $EA8FC2C690A9EFB5946A92024D1F336F ___u1;
  unsigned int Hi32;
  $E923BCA2300F3A98DEF2297F913C0B86 ___u3;
};

/* 2561 */
struct IRecordInfo
{
  IUnknown baseclass_0;
};

/* 2562 */
struct $38C453C410F7D9011D34018588B46ED3
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  int lVal;
  IRecordInfo *pRecInfo;
};

/* 2563 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/* 2564 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/* 2565 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/* 2566 */
struct $268D4D03B4C6F5EBC16E9652B296A49E
{
  _BYTE gap0[8];
  double dblVal;
};

/* 2567 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/* 2568 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/* 2569 */
struct $22E561F449D3CE1FBDF9F238D673FAB8
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/* 2570 */
struct $45D11D4275439B298C576BAEF9B5C9F2
{
  _BYTE gap0[8];
  double date;
};

/* 2571 */
struct $C854646156F6772BF5D6F8470C9CCFAF
{
  _BYTE gap0[8];
  unsigned __int16 *bstrVal;
};

/* 2572 */
struct $13D5D82A4F6A16B72C708177F5A66DE8
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/* 2573 */
struct $138EE1980CFCED98C3B9C1B9652E9D5D
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/* 2574 */
struct $C9E01556B5D48C487B399F7298E74624
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/* 2575 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/* 2576 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/* 2577 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/* 2578 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/* 2579 */
struct $CE6F1CDEA436C08D9C4B6DCBCB82F33B
{
  _BYTE gap0[8];
  double *pdblVal;
};

/* 2580 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/* 2581 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/* 2582 */
struct $6D464BD1D9C814FB9F053B7CC802E2EC
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/* 2583 */
struct $4CCA8782C58373A26E3A869FF0A8CAE7
{
  _BYTE gap0[8];
  double *pdate;
};

/* 2584 */
struct $0878F16B0390542D20060EB711608720
{
  _BYTE gap0[8];
  unsigned __int16 **pbstrVal;
};

/* 2585 */
struct $82640D01B4B440A3C148CB86FAC2AECB
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/* 2586 */
struct $3C2922C25A0056687091D0E08BAF83BC
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/* 2587 */
struct $5C74F04A274EA91752F846E496545E6B
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/* 2588 */
struct $AEB5FF9B5A7FA1CA03CCF9E04E6535FB
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/* 2589 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/* 2590 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/* 2591 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/* 2592 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/* 2593 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/* 2594 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/* 2595 */
struct $15B19A2CF5D85BFEFE377177F43BFCE8
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/* 2596 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/* 2597 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/* 2598 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/* 2599 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/* 2600 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/* 2601 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/* 2602 */
union $E87CA73C731EA1982D041A9A9A598C38
{
  $38C453C410F7D9011D34018588B46ED3 _s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B _s2;
  $31126B8528A05AF3606C6D495FD178E8 _s3;
  $50230A970D9734D4E9774CFC619DF0F6 _s4;
  $268D4D03B4C6F5EBC16E9652B296A49E _s5;
  $6DB36323059316E675433BB10D285009 _s6;
  $8E3C8731874D1B3BC66617C4DD3163A6 _s7;
  $22E561F449D3CE1FBDF9F238D673FAB8 _s8;
  $45D11D4275439B298C576BAEF9B5C9F2 _s9;
  $C854646156F6772BF5D6F8470C9CCFAF _s10;
  $13D5D82A4F6A16B72C708177F5A66DE8 _s11;
  $138EE1980CFCED98C3B9C1B9652E9D5D _s12;
  $C9E01556B5D48C487B399F7298E74624 _s13;
  $166B1F81F6EA96F97683A65F38FB1A59 _s14;
  $76732A64405C0E287FCB302687644550 _s15;
  $E5FC128E66C26C95254032BA69D36E74 _s16;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD _s17;
  $CE6F1CDEA436C08D9C4B6DCBCB82F33B _s18;
  $AAA92DA1D6E1B0E8462F69216B62027C _s19;
  $F7167AE7A8ABA03C094C204FB1564A28 _s20;
  $6D464BD1D9C814FB9F053B7CC802E2EC _s21;
  $4CCA8782C58373A26E3A869FF0A8CAE7 _s22;
  $0878F16B0390542D20060EB711608720 _s23;
  $82640D01B4B440A3C148CB86FAC2AECB _s24;
  $3C2922C25A0056687091D0E08BAF83BC _s25;
  $5C74F04A274EA91752F846E496545E6B _s26;
  $AEB5FF9B5A7FA1CA03CCF9E04E6535FB _s27;
  $6C39A09D97B880131B2C5BB4943CBB45 _s28;
  $E898A5260D8380431CCAA47FCC291563 _s29;
  $48802A31D3D0701BC13CEF9CEA041E7B _s30;
  $B644145F46FF1F932B106BFA6CC3F6D9 _s31;
  $5CA90CF57237397281FB12BFD52C1905 _s32;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 _s33;
  $15B19A2CF5D85BFEFE377177F43BFCE8 _s34;
  $E1D71D20C3D01115E20D79FAE9629CE8 _s35;
  $5669F5A4AD19EF2CB42A5602080CB0A6 _s36;
  $886F8AE9D7C8B1B861B6CA58D67B682A _s37;
  $CDA73A427DD2A30CDA26CA3394C33CF0 _s38;
  $2516E53E690D8CC5659AAB7EDC49E664 _s39;
  $17B4421FDC73B39569D8A12F584CB67F _s40;
};

/* 2603 */
struct DAOWorkspace
{
  _DAO baseclass_0;
};

/* 2604 */
struct DAODatabase
{
  _DAO baseclass_0;
};

/* 2605 */
struct DAOConnection
{
  IDispatch baseclass_0;
};

/* 2606 */
struct HTASK__
{
  int unused;
};

/* 2607 */
struct AFX_INTERFACEMAP_ENTRY
{
  const void *piid;
  unsigned int nOffset;
};

/* 2608 */
struct AFX_INTERFACEMAP
{
  AFX_INTERFACEMAP *(__stdcall *pfnGetBaseMap)();
  AFX_INTERFACEMAP_ENTRY *pEntry;
};

/* 2609 */
#pragma pack(push, 4)
struct tagINTERFACEINFO
{
  IUnknown *pUnk;
  _GUID iid;
  unsigned __int16 wMethod;
};
#pragma pack(pop)

/* 2610 */
#pragma pack(push, 4)
struct tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};
#pragma pack(pop)

/* 2611 */
struct ITypeComp
{
  IUnknown baseclass_0;
};

/* 2612 */
struct __declspec(align(4)) tagTYPEDESC
{
  $C47A87BE244437C7BF673CA045FADE45 ___u0;
  unsigned __int16 vt;
};

/* 2613 */
struct tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  __declspec(align(4)) tagSAFEARRAYBOUND rgbounds[1];
};

/* 2614 */
union $C47A87BE244437C7BF673CA045FADE45
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/* 2615 */
#pragma pack(push, 4)
struct tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};
#pragma pack(pop)

/* 2616 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  unsigned __int16 *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/* 2617 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  __declspec(align(8)) tagVARIANT varDefaultValue;
};

/* 2618 */
#pragma pack(push, 4)
struct tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};
#pragma pack(pop)

/* 2619 */
union $7DD9636CA1781270937DFFFAA43CEDF7
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/* 2620 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $7DD9636CA1781270937DFFFAA43CEDF7 ___u1;
};

/* 2621 */
#pragma pack(push, 4)
struct tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};
#pragma pack(pop)

/* 2622 */
union $E2AF19F6967078289EDA0F4737784E21
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/* 2623 */
#pragma pack(push, 4)
struct tagVARDESC
{
  int memid;
  unsigned __int16 *lpstrSchema;
  $E2AF19F6967078289EDA0F4737784E21 ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};
#pragma pack(pop)

/* 2624 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/* 2625 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  unsigned __int16 *bstrSource;
  unsigned __int16 *bstrDescription;
  unsigned __int16 *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  int (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/* 2626 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/* 2627 */
struct CStringData
{
  int nRefs;
  int nDataLength;
  int nAllocLength;
};

/* 2628 */
struct CDockState
{
  CObject baseclass_0;
  CPtrArray m_arrBarInfo;
  int m_bScaling;
  CRect m_rectDevice;
  CRect m_rectClip;
  CSize m_sizeLogical;
  unsigned int m_dwVersion;
};

/* 2629 */
struct CPrintPreviewState
{
  unsigned int nIDMainPane;
  HMENU__ *hMenu;
  unsigned int dwStates;
  CView *pViewActiveOld;
  int (__stdcall *lpfnCloseProc)(CFrameWnd *);
  HACCEL__ *hAccelTable;
};

/* 2630 */
struct CMiniFrameWnd
{
  CFrameWnd baseclass_0;
  int m_bSysTracking;
  int m_bInSys;
  int m_bActive;
  CString m_strCaption;
};

/* 2631 */
struct CMiniDockFrameWnd
{
  CMiniFrameWnd baseclass_0;
  CDockBar m_wndDockBar;
};

/* 2632 */
struct HDROP__
{
  int unused;
};

/* 2633 */
struct HRGN__
{
  int unused;
};

/* 2634 */
struct CRgn
{
  CGdiObject baseclass_0;
};

/* 2635 */
struct CBitmap
{
  CGdiObject baseclass_0;
};

/* 2636 */
struct CListBox
{
  CWnd baseclass_0;
};

/* 2637 */
struct CFileException
{
  CException baseclass_0;
  int m_cause;
  int m_lOsError;
  CString m_strFileName;
};

/* 2638 */
struct IEnumFORMATETC
{
  IUnknown baseclass_0;
};

/* 2639 */
struct COleDataObject
{
  IDataObject *m_lpDataObject;
  IEnumFORMATETC *m_lpEnumerator;
  int m_bClipboard;
  int m_bAutoRelease;
};

/* 2640 */
struct CPreviewDC
{
  CDC baseclass_0;
  int m_nScaleNum;
  int m_nScaleDen;
  int m_nSaveDCIndex;
  int m_nSaveDCDelta;
  CSize m_sizeTopLeft;
  HFONT__ *m_hFont;
  HFONT__ *m_hPrinterFont;
  CSize m_sizeWinExt;
  CSize m_sizeVpExt;
};

/* 2641 */
struct CDialogBar
{
  CControlBar baseclass_0;
  CSize m_sizeDefault;
  struct _AFX_OCC_DIALOG_INFO *m_pOccDialogInfo;
  const char *m_lpszTemplateName;
};

/* 2642 */
struct CPreviewView::PAGE_INFO
{
  CRect rectScreen;
  CSize sizeUnscaled;
  CSize sizeScaleRatio;
  CSize sizeZoomOutRatio;
};

/* 2643 */
struct CPreviewView
{
  CScrollView baseclass_0;
  CView *m_pOrigView;
  CView *m_pPrintView;
  CPreviewDC *m_pPreviewDC;
  CDC m_dcPrint;
  CPrintPreviewState *m_pPreviewState;
  CDialogBar *m_pToolBar;
  CPreviewView::PAGE_INFO *m_pPageInfo;
  CPreviewView::PAGE_INFO m_pageInfoArray[2];
  int m_bPageNumDisplayed;
  unsigned int m_nZoomOutPages;
  unsigned int m_nZoomState;
  unsigned int m_nMaxPages;
  unsigned int m_nCurrentPage;
  unsigned int m_nPages;
  int m_nSecondPageOffset;
  HICON__ *m_hMagnifyCursor;
  CSize m_sizePrinterPPI;
  CPoint m_ptCenterPoint;
  CPrintInfo *m_pPreviewInfo;
};

/* 2644 */
struct CSplitterWnd::CRowColInfo
{
  int nMinSize;
  int nIdealSize;
  int nCurSize;
};

/* 2645 */
struct CSplitterWnd
{
  CWnd baseclass_0;
  CRuntimeClass *m_pDynamicViewClass;
  int m_nMaxRows;
  int m_nMaxCols;
  int m_cxSplitter;
  int m_cySplitter;
  int m_cxBorderShare;
  int m_cyBorderShare;
  int m_cxSplitterGap;
  int m_cySplitterGap;
  int m_cxBorder;
  int m_cyBorder;
  int m_nRows;
  int m_nCols;
  int m_bHasHScroll;
  int m_bHasVScroll;
  CSplitterWnd::CRowColInfo *m_pColInfo;
  CSplitterWnd::CRowColInfo *m_pRowInfo;
  int m_bTracking;
  int m_bTracking2;
  CPoint m_ptTrackOffset;
  CRect m_rectLimit;
  CRect m_rectTracker;
  CRect m_rectTracker2;
  int m_htTrack;
};

/* 2646 */
struct AFX_SIZEPARENTPARAMS
{
  void *hDWP;
  tagRECT rect;
  tagSIZE sizeTotal;
  int bStretch;
};

/* 2647 */
struct CControlBarInfo
{
  unsigned int m_nBarID;
  int m_bVisible;
  int m_bFloating;
  int m_bHorz;
  int m_bDockBar;
  CPoint m_pointPos;
  unsigned int m_nMRUWidth;
  int m_bDocking;
  unsigned int m_uMRUDockID;
  CRect m_rectMRUDockPos;
  unsigned int m_dwMRUFloatStyle;
  CPoint m_ptMRUFloatPos;
  CPtrArray m_arrBarID;
  CControlBar *m_pBar;
};

/* 2648 */
struct CPen
{
  CGdiObject baseclass_0;
};

/* 2649 */
struct CBrush
{
  CGdiObject baseclass_0;
};

/* 2650 */
struct CPalette
{
  CGdiObject baseclass_0;
};

/* 2651 */
struct HENHMETAFILE__
{
  int unused;
};

/* 2652 */
#pragma pack(push, 4)
struct tagFORMATETC
{
  unsigned __int16 cfFormat;
  tagDVTARGETDEVICE *ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};
#pragma pack(pop)

/* 2653 */
struct ISequentialStream
{
  IUnknown baseclass_0;
};

/* 2654 */
struct IStream
{
  ISequentialStream baseclass_0;
};

/* 2655 */
union $70C2262382407F61537C67CD65038E6A
{
  HBITMAP__ *hBitmap;
  void *hMetaFilePict;
  HENHMETAFILE__ *hEnhMetaFile;
  void *hGlobal;
  unsigned __int16 *lpszFileName;
  IStream *pstm;
  IStorage *pstg;
};

/* 2656 */
struct tagSTGMEDIUM
{
  unsigned int tymed;
  $70C2262382407F61537C67CD65038E6A ___u1;
  IUnknown *pUnkForRelease;
};

/* 2657 */
#pragma pack(push, 4)
struct CFileStatus
{
  CTime m_ctime;
  CTime m_mtime;
  CTime m_atime;
  int m_size;
  char m_attribute;
  char _m_padding;
  char m_szFullName[260];
};
#pragma pack(pop)

/* 2658 */
struct IEnumSTATDATA
{
  IUnknown baseclass_0;
};

/* 2659 */
struct IEnumOLEVERB
{
  IUnknown baseclass_0;
};

/* 2660 */
struct AFX_OLECMDMAP_ENTRY
{
  _GUID *pguid;
  unsigned int cmdID;
  unsigned int nID;
};

/* 2661 */
struct AFX_OLECMDMAP
{
  AFX_OLECMDMAP *(__stdcall *pfnGetBaseMap)();
  AFX_OLECMDMAP_ENTRY *lpEntries;
};

/* 2662 */
#pragma pack(push, 4)
struct AFX_DISPMAP_ENTRY
{
  const char *lpszName;
  int lDispID;
  const char *lpszParams;
  unsigned __int16 vt;
  void (__thiscall *pfn)(CCmdTarget *this);
  void (__thiscall *pfnSet)(CCmdTarget *this);
  unsigned int nPropOffset;
  AFX_DISPMAP_FLAGS flags;
};
#pragma pack(pop)

/* 2663 */
struct AFX_DISPMAP
{
  AFX_DISPMAP *(__stdcall *pfnGetBaseMap)();
  AFX_DISPMAP_ENTRY *lpEntries;
  unsigned int *lpEntryCount;
  unsigned int *lpStockPropMask;
};

/* 2664 */
struct AFX_CONNECTIONMAP_ENTRY
{
  const void *piid;
  unsigned int nOffset;
};

/* 2665 */
struct AFX_CONNECTIONMAP
{
  AFX_CONNECTIONMAP *(__stdcall *pfnGetBaseMap)();
  AFX_CONNECTIONMAP_ENTRY *pEntry;
};

/* 2666 */
struct AFX_EVENTSINKMAP_ENTRY
{
  AFX_DISPMAP_ENTRY dispEntry;
  unsigned int nCtrlIDFirst;
  unsigned int nCtrlIDLast;
};

/* 2667 */
struct AFX_EVENTSINKMAP
{
  AFX_EVENTSINKMAP *(__stdcall *pfnGetBaseMap)();
  AFX_EVENTSINKMAP_ENTRY *lpEntries;
  unsigned int *lpEntryCount;
};

/* 2668 */
struct AFX_EVENT
{
  int m_eventKind;
  int m_dispid;
  tagDISPPARAMS *m_pDispParams;
  tagEXCEPINFO *m_pExcepInfo;
  unsigned int *m_puArgError;
  int m_bPropChanged;
  int m_hResult;
  DSCSTATE m_nDSCState;
  DSCREASON m_nDSCReason;
};

/* 2669 */
struct IConnectionPoint
{
  IUnknown baseclass_0;
};

/* 2670 */
struct COleDataSource::XDataObject
{
  IDataObject baseclass_0;
};

/* 2671 */
struct COleDataSource
{
  CCmdTarget baseclass_0;
  struct AFX_DATACACHE_ENTRY *m_pDataCache;
  unsigned int m_nMaxSize;
  unsigned int m_nSize;
  unsigned int m_nGrowBy;
  COleDataSource::XDataObject m_xDataObject;
};

/* 2672 */
struct tagOIFI
{
  unsigned int cb;
  int fMDIApp;
  HWND__ *hwndFrame;
  HACCEL__ *haccel;
  unsigned int cAccelEntries;
};

/* 2673 */
struct tagOleMenuGroupWidths
{
  int width[6];
};

/* 2674 */
struct IOleCache
{
  IUnknown baseclass_0;
};

/* 2675 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 2676 */
struct IPersist
{
  IUnknown baseclass_0;
};

/* 2677 */
struct IPersistStream
{
  IPersist baseclass_0;
};

/* 2678 */
struct IMoniker
{
  IPersistStream baseclass_0;
};

/* 2679 */
struct IParseDisplayName
{
  IUnknown baseclass_0;
};

/* 2680 */
struct IOleContainer
{
  IParseDisplayName baseclass_0;
};

/* 2681 */
struct DAOError
{
  IDispatch baseclass_0;
};

/* 2682 */
struct IEnumUnknown
{
  IUnknown baseclass_0;
};

/* 2683 */
struct tagLICINFO
{
  int cbLicInfo;
  int fRuntimeKeyAvail;
  int fLicVerified;
};

/* 2684 */
struct tagOLEVERB
{
  int lVerb;
  unsigned __int16 *lpszVerbName;
  unsigned int fuFlags;
  unsigned int grfAttribs;
};

/* 2685 */
struct DAOProperties
{
  _DAODynaCollection baseclass_0;
};

/* 2686 */
struct tagSTATDATA
{
  tagFORMATETC formatetc;
  unsigned int advf;
  IAdviseSink *pAdvSink;
  unsigned int dwConnection;
};

/* 2687 */
struct DAOQueryDefs
{
  _DAODynaCollection baseclass_0;
};

/* 2688 */
struct DAORecordsets
{
  _DAOCollection baseclass_0;
};

/* 2689 */
struct _DAOQueryDef
{
  _DAO baseclass_0;
};

/* 2690 */
struct DAORecordset
{
  _DAO baseclass_0;
};

/* 2691 */
struct DAOTableDefs
{
  _DAODynaCollection baseclass_0;
};

/* 2692 */
struct DAORelations
{
  _DAODynaCollection baseclass_0;
};

/* 2693 */
struct DAOContainers
{
  _DAOCollection baseclass_0;
};

/* 2694 */
struct DAOProperty
{
  _DAO baseclass_0;
};

/* 2695 */
struct _DAORelation
{
  _DAO baseclass_0;
};

/* 2696 */
struct _DAOTableDef
{
  _DAO baseclass_0;
};

/* 2697 */
struct DAODatabases
{
  _DAOCollection baseclass_0;
};

/* 2698 */
struct DAOUsers
{
  _DAODynaCollection baseclass_0;
};

/* 2699 */
struct DAOGroups
{
  _DAODynaCollection baseclass_0;
};

/* 2700 */
struct _DAOUser
{
  _DAO baseclass_0;
};

/* 2701 */
struct _DAOGroup
{
  _DAO baseclass_0;
};

/* 2702 */
struct DAOConnections
{
  _DAOCollection baseclass_0;
};

/* 2703 */
struct DAOContainer
{
  _DAO baseclass_0;
};

/* 2704 */
struct _tagOLECMD
{
  unsigned int cmdID;
  unsigned int cmdf;
};

/* 2705 */
#pragma pack(push, 4)
struct _tagOLECMDTEXT
{
  unsigned int cmdtextf;
  unsigned int cwActual;
  unsigned int cwBuf;
  unsigned __int16 rgwz[1];
};
#pragma pack(pop)

/* 2706 */
struct IEnumSTATSTG
{
  IUnknown baseclass_0;
};

/* 2707 */
struct IConnectionPointContainer
{
  IUnknown baseclass_0;
};

/* 2708 */
struct IEnumConnections
{
  IUnknown baseclass_0;
};

/* 2709 */
struct IEnumConnectionPoints
{
  IUnknown baseclass_0;
};

/* 2710 */
struct IOleAdviseHolder
{
  IUnknown baseclass_0;
};

/* 2711 */
struct IDataAdviseHolder
{
  IUnknown baseclass_0;
};

/* 2712 */
struct COleServerItem::CItemDataSource
{
  COleDataSource baseclass_0;
};

/* 2713 */
struct COleServerItem::XOleObject
{
  IOleObject baseclass_0;
};

/* 2714 */
struct COleServerItem::XDataObject
{
  IDataObject baseclass_0;
};

/* 2715 */
struct COleServerItem
{
  CDocItem baseclass_0;
  CSize m_sizeExtent;
  int m_bNeedUnlock;
  int m_bAutoDelete;
  CString m_strItemName;
  IOleAdviseHolder *m_lpOleAdviseHolder;
  IDataAdviseHolder *m_lpDataAdviseHolder;
  COleServerItem::CItemDataSource m_dataSource;
  COleServerItem::XOleObject m_xOleObject;
  COleServerItem::XDataObject m_xDataObject;
};

/* 2716 */
struct IOleItemContainer
{
  IOleContainer baseclass_0;
};

/* 2717 */
struct IDropSource
{
  IUnknown baseclass_0;
};

/* 2718 */
struct COleDropSource::XDropSource
{
  IDropSource baseclass_0;
};

/* 2719 */
struct COleDropSource
{
  CCmdTarget baseclass_0;
  COleDropSource::XDropSource m_xDropSource;
  CRect m_rectStartDrag;
  int m_bDragStarted;
  unsigned int m_dwButtonCancel;
  unsigned int m_dwButtonDrop;
};

/* 2720 */
struct IBindCtx
{
  IUnknown baseclass_0;
};

/* 2721 */
struct IEnumMoniker
{
  IUnknown baseclass_0;
};

/* 2722 */
struct tagCONNECTDATA
{
  IUnknown *pUnk;
  unsigned int dwCookie;
};

/* 2723 */
struct DAOFields
{
  _DAODynaCollection baseclass_0;
};

/* 2724 */
struct DAOParameters
{
  _DAOCollection baseclass_0;
};

/* 2725 */
struct _DAOField
{
  _DAO baseclass_0;
};

/* 2726 */
struct DAOParameter
{
  _DAO baseclass_0;
};

/* 2727 */
struct tagBIND_OPTS
{
  unsigned int cbStruct;
  unsigned int grfFlags;
  unsigned int grfMode;
  unsigned int dwTickCountDeadline;
};

/* 2728 */
struct IRunningObjectTable
{
  IUnknown baseclass_0;
};

/* 2729 */
struct IEnumString
{
  IUnknown baseclass_0;
};

/* 2730 */
struct DAOIndexes
{
  _DAODynaCollection baseclass_0;
};

/* 2731 */
struct _DAOIndex
{
  _DAO baseclass_0;
};

/* 2732 */
struct CTimeSpan
{
  int m_timeSpan;
};

/* 2733 */
struct DAODocuments
{
  _DAOCollection baseclass_0;
};

/* 2734 */
struct DAODocument
{
  _DAO baseclass_0;
};

/* 2735 */
struct IPersistFile
{
  IPersist baseclass_0;
};

/* 2736 */
struct COleLinkingDoc::XPersistFile
{
  IPersistFile baseclass_0;
};

/* 2737 */
struct COleLinkingDoc::XOleItemContainer
{
  IOleItemContainer baseclass_0;
};

/* 2738 */
struct COleLinkingDoc
{
  COleDocument baseclass_0;
  COleObjectFactory *m_pFactory;
  int m_bDeferErrors;
  CException *m_pLastException;
  unsigned int m_dwRegister;
  IMoniker *m_lpMonikerROT;
  CString m_strMoniker;
  int m_bVisibleLock;
  COleLinkingDoc::XPersistFile m_xPersistFile;
  COleLinkingDoc::XOleItemContainer m_xOleItemContainer;
};

/* 2739 */
struct COleIPFrameWnd
{
  CFrameWnd baseclass_0;
  int m_bUIActive;
  tagOIFI m_frameInfo;
  IOleInPlaceFrame *m_lpFrame;
  IOleInPlaceUIWindow *m_lpDocFrame;
  COleCntrFrameWnd *m_pMainFrame;
  COleCntrFrameWnd *m_pDocFrame;
  HMENU__ *m_hSharedMenu;
  tagOleMenuGroupWidths m_menuWidths;
  void *m_hOleMenu;
  CRect m_rectPos;
  CRect m_rectClip;
  int m_bInsideRecalc;
  HMENU__ *_m_Reserved;
};

/* 2740 */
struct COleCntrFrameWnd
{
  CFrameWnd baseclass_0;
  COleIPFrameWnd *m_pInPlaceFrame;
};

/* 2741 */
struct IOleDocumentSite
{
  IUnknown baseclass_0;
};

/* 2742 */
struct COleServerDoc
{
  COleLinkingDoc baseclass_0;
  IOleClientSite *m_lpClientSite;
  CString m_strHostObj;
  int m_bCntrVisible;
  int m_bClosing;
  COleServerItem *m_pEmbeddedItem;
  COleIPFrameWnd *m_pInPlaceFrame;
  CWnd *m_pOrigParent;
  unsigned int m_dwOrigStyle;
  unsigned int m_dwOrigStyleEx;
  CDocObjectServer *m_pDocObjectServer;
  COleServerDoc::XPersistStorage m_xPersistStorage;
  COleServerDoc::XOleObject m_xOleObject;
  COleServerDoc::XDataObject m_xDataObject;
  COleServerDoc::XOleInPlaceObject m_xOleInPlaceObject;
  COleServerDoc::XOleInPlaceActiveObject m_xOleInPlaceActiveObject;
};

/* 2743 */
struct IContinueCallback
{
  IUnknown baseclass_0;
};

/* 2744 */
struct CDocObjectServer::XOleObject
{
  IOleObject baseclass_0;
};

/* 2745 */
struct IOleDocument
{
  IUnknown baseclass_0;
};

/* 2746 */
struct CDocObjectServer::XOleDocument
{
  IOleDocument baseclass_0;
};

/* 2747 */
struct IOleDocumentView
{
  IUnknown baseclass_0;
};

/* 2748 */
struct CDocObjectServer::XOleDocumentView
{
  IOleDocumentView baseclass_0;
};

/* 2749 */
struct CDocObjectServer::XOleCommandTarget
{
  IOleCommandTarget baseclass_0;
};

/* 2750 */
struct IPrint
{
  IUnknown baseclass_0;
};

/* 2751 */
struct CDocObjectServer::XPrint
{
  IPrint baseclass_0;
};

/* 2752 */
struct CDocObjectServer
{
  CCmdTarget baseclass_0;
  IOleDocumentSite *m_pDocSite;
  COleServerDoc *m_pOwner;
  int m_nFirstPage;
  IContinueCallback *m_pContinueCallback;
  IOleInPlaceSite *m_pViewSite;
  CDocObjectServer::XOleObject m_xOleObject;
  CDocObjectServer::XOleDocument m_xOleDocument;
  CDocObjectServer::XOleDocumentView m_xOleDocumentView;
  CDocObjectServer::XOleCommandTarget m_xOleCommandTarget;
  CDocObjectServer::XPrint m_xPrint;
};

/* 2753 */
struct IPersistStorage
{
  IPersist baseclass_0;
};

/* 2754 */
struct COleServerDoc::XPersistStorage
{
  IPersistStorage baseclass_0;
};

/* 2755 */
struct COleServerDoc::XOleObject
{
  IOleObject baseclass_0;
};

/* 2756 */
struct COleServerDoc::XDataObject
{
  IDataObject baseclass_0;
};

/* 2757 */
struct IOleInPlaceObject
{
  IOleWindow baseclass_0;
};

/* 2758 */
struct COleServerDoc::XOleInPlaceObject
{
  IOleInPlaceObject baseclass_0;
};

/* 2759 */
struct COleServerDoc::XOleInPlaceActiveObject
{
  IOleInPlaceActiveObject baseclass_0;
};

/* 2760 */
struct COleDocIPFrameWnd
{
  COleIPFrameWnd baseclass_0;
  HMENU__ *m_hMenuHelpPopup;
};

/* 2761 */
struct IEnumOleDocumentViews
{
  IUnknown baseclass_0;
};

/* 2762 */
struct tagPAGERANGE
{
  int nFromPage;
  int nToPage;
};

/* 2763 */
struct tagPAGESET
{
  unsigned int cbStruct;
  int fOddPages;
  int fEvenPages;
  unsigned int cPageRange;
  tagPAGERANGE rgPages[1];
};

/* 2764 */
struct std::char_traits<unsigned short>
{
  char dummy[1];
};

/* 2765 */
#pragma pack(push, 4)
struct std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  std::allocator<unsigned short> allocator;
  unsigned __int16 *_Ptr;
  unsigned int _Len;
  unsigned int _Res;
};
#pragma pack(pop)

/* 2766 */
struct std::iterator<std::input_iterator_tag,unsigned short,long>
{
  char dummy[1];
};

/* 2767 */
union $AA9D6B7EBC3252B29500232A400F8505
{
  std::iterator<std::input_iterator_tag,unsigned short,long> baseclass_0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Sbuf;
};

/* 2768 */
#pragma pack(push, 2)
struct std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> >
{
  $AA9D6B7EBC3252B29500232A400F8505 ___u0;
  char _Got;
  unsigned __int16 _Val;
};
#pragma pack(pop)

/* 2769 */
struct std::ctype_base
{
  std::locale::facet baseclass_0;
};

/* 2770 */
struct _Ctypevec
{
  unsigned int _Hand;
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
};

/* 2771 */
struct std::ctype<unsigned short>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
};

/* 2772 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  char _Ok;
};

/* 2773 */
struct std::numpunct<unsigned short>
{
  std::locale::facet baseclass_0;
  char *_Gr;
  unsigned __int16 _Dp;
  unsigned __int16 _Ks;
  unsigned __int16 *_Nf;
  unsigned __int16 *_Nt;
};

/* 2774 */
struct std::locale::id
{
  unsigned int _Id;
};

/* 2775 */
struct std::_Locinfo
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Days;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Months;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Oname;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Nname;
};

/* 2776 */
struct std::iterator<std::output_iterator_tag,void,void>
{
  char dummy[1];
};

/* 2777 */
union $AECEC2F4110D63C40BC5DD6B05E04659
{
  std::iterator<std::output_iterator_tag,void,void> baseclass_0;
  char _Failed;
};

/* 2778 */
#pragma pack(push, 4)
struct std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> >
{
  $AECEC2F4110D63C40BC5DD6B05E04659 ___u0;
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Sbuf;
};
#pragma pack(pop)

/* 2779 */
#pragma pack(push, 4)
struct std::numpunct<char>
{
  std::locale::facet baseclass_0;
  char *_Gr;
  char _Dp;
  char _Ks;
  char *_Nf;
  char *_Nt;
};
#pragma pack(pop)

/* 2780 */
struct std::iterator<std::input_iterator_tag,char,long>
{
  char dummy[1];
};

/* 2781 */
union $0688901B27297836355A3FA3BF0E6CCE
{
  std::iterator<std::input_iterator_tag,char,long> baseclass_0;
  std::basic_streambuf<char,std::char_traits<char> > *_Sbuf;
};

/* 2782 */
struct __declspec(align(4)) std::istreambuf_iterator<char,std::char_traits<char> >
{
  $0688901B27297836355A3FA3BF0E6CCE ___u0;
  char _Got;
  char _Val;
};

/* 2783 */
struct std::ctype<char>
{
  std::ctype_base baseclass_0;
  _Ctypevec _Ctype;
};

/* 2784 */
struct std::basic_istream<char,std::char_traits<char> >::sentry
{
  char _Ok;
};

/* 2785 */
#pragma pack(push, 4)
struct std::ostreambuf_iterator<char,std::char_traits<char> >
{
  $AECEC2F4110D63C40BC5DD6B05E04659 ___u0;
  std::basic_streambuf<char,std::char_traits<char> > *_Sbuf;
};
#pragma pack(pop)

/* 2786 */
#pragma pack(push, 4)
struct std::basic_ostream<char,std::char_traits<char> >::sentry
{
  char _Ok;
  std::basic_ostream<char,std::char_traits<char> > *_Ostr;
};
#pragma pack(pop)

/* 2787 */
struct std::char_traits<char>
{
  char dummy[1];
};

/* 2788 */
#pragma pack(push, 4)
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::sentry
{
  char _Ok;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Ostr;
};
#pragma pack(pop)

/* 2789 */
struct __declspec(align(4)) std::pair<std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::iterator,bool>
{
  std::_Tree<unsigned long,std::pair<unsigned long const ,FSM>,std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn,std::less<unsigned long>,std::allocator<FSM> >::iterator first;
  char second;
};

/* 2790 */
struct std::unary_function<std::pair<unsigned long const ,FSM>,unsigned long>
{
  char dummy[1];
};

/* 2791 */
struct std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::_Kfn
{
  std::unary_function<std::pair<unsigned long const ,FSM>,unsigned long> baseclass_0;
};

/* 2792 */
struct std::binary_function<std::pair<unsigned long const ,FSM>,std::pair<unsigned long const ,FSM>,bool>
{
  char dummy[1];
};

/* 2793 */
union $499BB3ABE18293206D01B9D2FA64A85E
{
  std::binary_function<std::pair<unsigned long const ,FSM>,std::pair<unsigned long const ,FSM>,bool> baseclass_0;
  std::less<unsigned long> comp;
};

/* 2794 */
struct std::map<unsigned long,FSM,std::less<unsigned long>,std::allocator<FSM> >::value_compare
{
  $499BB3ABE18293206D01B9D2FA64A85E ___u0;
};

/* 2795 */
struct _DDSCAPS
{
  unsigned int dwCaps;
};

/* 2796 */
struct _DDCAPS_DX7
{
  unsigned int dwSize;
  unsigned int dwCaps;
  unsigned int dwCaps2;
  unsigned int dwCKeyCaps;
  unsigned int dwFXCaps;
  unsigned int dwFXAlphaCaps;
  unsigned int dwPalCaps;
  unsigned int dwSVCaps;
  unsigned int dwAlphaBltConstBitDepths;
  unsigned int dwAlphaBltPixelBitDepths;
  unsigned int dwAlphaBltSurfaceBitDepths;
  unsigned int dwAlphaOverlayConstBitDepths;
  unsigned int dwAlphaOverlayPixelBitDepths;
  unsigned int dwAlphaOverlaySurfaceBitDepths;
  unsigned int dwZBufferBitDepths;
  unsigned int dwVidMemTotal;
  unsigned int dwVidMemFree;
  unsigned int dwMaxVisibleOverlays;
  unsigned int dwCurrVisibleOverlays;
  unsigned int dwNumFourCCCodes;
  unsigned int dwAlignBoundarySrc;
  unsigned int dwAlignSizeSrc;
  unsigned int dwAlignBoundaryDest;
  unsigned int dwAlignSizeDest;
  unsigned int dwAlignStrideAlign;
  unsigned int dwRops[8];
  _DDSCAPS ddsOldCaps;
  unsigned int dwMinOverlayStretch;
  unsigned int dwMaxOverlayStretch;
  unsigned int dwMinLiveVideoStretch;
  unsigned int dwMaxLiveVideoStretch;
  unsigned int dwMinHwCodecStretch;
  unsigned int dwMaxHwCodecStretch;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
  unsigned int dwReserved3;
  unsigned int dwSVBCaps;
  unsigned int dwSVBCKeyCaps;
  unsigned int dwSVBFXCaps;
  unsigned int dwSVBRops[8];
  unsigned int dwVSBCaps;
  unsigned int dwVSBCKeyCaps;
  unsigned int dwVSBFXCaps;
  unsigned int dwVSBRops[8];
  unsigned int dwSSBCaps;
  unsigned int dwSSBCKeyCaps;
  unsigned int dwSSBFXCaps;
  unsigned int dwSSBRops[8];
  unsigned int dwMaxVideoPorts;
  unsigned int dwCurrVideoPorts;
  unsigned int dwSVBCaps2;
  unsigned int dwNLVBCaps;
  unsigned int dwNLVBCaps2;
  unsigned int dwNLVBCKeyCaps;
  unsigned int dwNLVBFXCaps;
  unsigned int dwNLVBRops[8];
  _DDSCAPS2 ddsCaps;
};

/* 2797 */
struct __declspec(align(8)) tagDDDEVICEIDENTIFIER2
{
  char szDriver[512];
  char szDescription[512];
  _LARGE_INTEGER liDriverVersion;
  unsigned int dwVendorId;
  unsigned int dwDeviceId;
  unsigned int dwSubSysId;
  unsigned int dwRevision;
  _GUID guidDeviceIdentifier;
  unsigned int dwWHQLLevel;
};

/* 2798 */
struct _DDBLTBATCH
{
  tagRECT *lprDest;
  IDirectDrawSurface *lpDDSSrc;
  tagRECT *lprSrc;
  unsigned int dwFlags;
  _DDBLTFX *lpDDBltFx;
};

/* 2799 */
struct IDirectDraw
{
  IUnknown baseclass_0;
};

/* 2800 */
struct _DDOVERLAYFX
{
  unsigned int dwSize;
  unsigned int dwAlphaEdgeBlendBitDepth;
  unsigned int dwAlphaEdgeBlend;
  unsigned int dwReserved;
  unsigned int dwAlphaDestConstBitDepth;
  $71BDCE3BA83C761E0FB5A2D08187C316 ___u5;
  unsigned int dwAlphaSrcConstBitDepth;
  $121C3F99E609E792741423793AA2D1CF ___u7;
  _DDCOLORKEY dckDestColorkey;
  _DDCOLORKEY dckSrcColorkey;
  unsigned int dwDDFX;
  unsigned int dwFlags;
};

/* 2801 */
union $EF599A003DBF63C31A82D22AC5A5ECD5
{
  unsigned int dwMipMapCount;
  unsigned int dwZBufferBitDepth;
  unsigned int dwRefreshRate;
};

/* 2802 */
struct _DDSURFACEDESC
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwHeight;
  unsigned int dwWidth;
  $00F4D6FA838FAD5B65924731E0E9CCBC ___u4;
  unsigned int dwBackBufferCount;
  $EF599A003DBF63C31A82D22AC5A5ECD5 ___u6;
  unsigned int dwAlphaBitDepth;
  unsigned int dwReserved;
  void *lpSurface;
  _DDCOLORKEY ddckCKDestOverlay;
  _DDCOLORKEY ddckCKDestBlt;
  _DDCOLORKEY ddckCKSrcOverlay;
  _DDCOLORKEY ddckCKSrcBlt;
  _DDPIXELFORMAT ddpfPixelFormat;
  _DDSCAPS ddsCaps;
};

/* 2803 */
struct std::input_iterator_tag
{
  char dummy[1];
};

/* 2804 */
struct std::forward_iterator_tag
{
  std::input_iterator_tag baseclass_0;
};

/* 2805 */
struct std::bidirectional_iterator_tag
{
  std::forward_iterator_tag baseclass_0;
};

/* 2806 */
struct CStatusBarCtrl
{
  CWnd baseclass_0;
};

/* 2807 */
struct CImageList
{
  CObject baseclass_0;
  struct _IMAGELIST *m_hImageList;
};

/* 2808 */
struct CEdit
{
  CWnd baseclass_0;
};

/* 2809 */
struct CMapStringToPtr::CAssoc
{
  CMapStringToPtr::CAssoc *pNext;
  unsigned int nHashValue;
  CString key;
  void *value;
};

/* 2810 */
struct CMapStringToPtr
{
  CObject baseclass_0;
  CMapStringToPtr::CAssoc **m_pHashTable;
  unsigned int m_nHashTableSize;
  int m_nCount;
  CMapStringToPtr::CAssoc *m_pFreeList;
  CPlex *m_pBlocks;
  int m_nBlockSize;
};

/* 2811 */
struct CToolTipCtrl
{
  CWnd baseclass_0;
  CMapStringToPtr m_mapString;
};

/* 2812 */
struct CTabCtrl
{
  CWnd baseclass_0;
};

/* 2813 */
struct _READ_MAP_ENTITIES_LIST
{
  unsigned __int16 ID;
  float Scale;
  float Pos[3];
  float RotX;
  float RotY;
  __int16 BBmin[3];
  __int16 BBmax[3];
};

/* 2814 */
struct _READ_SOUND_ENTITY_LIST
{
  char name[64];
};

/* 2815 */
struct _READ_SOUND_ENTITIES_LIST
{
  unsigned __int16 id;
  unsigned __int16 event_time;
  unsigned int flag;
  float scale;
  float attn;
  float pos[3];
  float box_scale[3];
  float box_attn;
  float box_rot_x;
  float box_rot_y;
  unsigned int spare;
};

/* 2816 */
struct _BSP_READ_M_GROUP
{
  unsigned __int16 attr;
  unsigned __int16 face_num;
  unsigned int face_start_id;
  __int16 mtl_id;
  __int16 lgt_id;
  __int16 bb_min[3];
  __int16 bb_max[3];
  float pos[3];
  float scale;
  unsigned __int16 object_id;
};

/* 2817 */
struct _BSP_READ_FACE
{
  unsigned __int16 v_num;
  unsigned int v_start_id;
};

/* 2818 */
struct _TOOL_COL_POINT
{
  float v[3];
};

/* 2819 */
struct _ADD_BSP_SAVE
{
  _TOOL_COL_POINT *ColPoint;
  _TOOL_COL_LINE *ColLine;
  unsigned __int16 *ColLineID;
  _TOOL_COL_LEAF *ColLeaf;
  _ENTITY_LIST *EntityList;
  _LEAF_ENTITIES_LIST_INFO *LeafEntityList;
  _READ_MAP_ENTITIES_LIST *MapEntitiesList;
  unsigned __int16 *EntityID;
  _READ_SOUND_ENTITY_LIST *SoundEntityList;
  _LEAF_SOUND_ENTITIES_LIST_INFO *LeafSoundEntityList;
  _READ_SOUND_ENTITIES_LIST *SoundEntitiesList;
  unsigned __int16 *SoundEntityID;
};

/* 2820 */
struct _SAVE_PARTICLE
{
  char mEntityName[128];
  unsigned int mFlag;
  unsigned int mNum;
  unsigned int mAlphaType;
  int mCreateArea[3];
  float mLiveTime;
  float mGravity[3];
  float mPowerNormal[3];
  float mTimeSpeed;
  char mATrack[6];
  char mRTrack[6];
  char mGTrack[6];
  char mBTrack[6];
  float mScaleTrack[6];
  unsigned int spare[127];
};

/* 2821 */
struct IDirect3DDevice8
{
  IUnknown baseclass_0;
};

/* 2822 */
struct _D3DVERTEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
  unsigned int FVF;
};

/* 2823 */
struct _D3DINDEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
};

/* 2824 */
struct IDirect3D8
{
  IUnknown baseclass_0;
};

/* 2825 */
struct _D3DCAPS8
{
  _D3DDEVTYPE DeviceType;
  unsigned int AdapterOrdinal;
  unsigned int Caps;
  unsigned int Caps2;
  unsigned int Caps3;
  unsigned int PresentationIntervals;
  unsigned int CursorCaps;
  unsigned int DevCaps;
  unsigned int PrimitiveMiscCaps;
  unsigned int RasterCaps;
  unsigned int ZCmpCaps;
  unsigned int SrcBlendCaps;
  unsigned int DestBlendCaps;
  unsigned int AlphaCmpCaps;
  unsigned int ShadeCaps;
  unsigned int TextureCaps;
  unsigned int TextureFilterCaps;
  unsigned int CubeTextureFilterCaps;
  unsigned int VolumeTextureFilterCaps;
  unsigned int TextureAddressCaps;
  unsigned int VolumeTextureAddressCaps;
  unsigned int LineCaps;
  unsigned int MaxTextureWidth;
  unsigned int MaxTextureHeight;
  unsigned int MaxVolumeExtent;
  unsigned int MaxTextureRepeat;
  unsigned int MaxTextureAspectRatio;
  unsigned int MaxAnisotropy;
  float MaxVertexW;
  float GuardBandLeft;
  float GuardBandTop;
  float GuardBandRight;
  float GuardBandBottom;
  float ExtentsAdjust;
  unsigned int StencilCaps;
  unsigned int FVFCaps;
  unsigned int TextureOpCaps;
  unsigned int MaxTextureBlendStages;
  unsigned int MaxSimultaneousTextures;
  unsigned int VertexProcessingCaps;
  unsigned int MaxActiveLights;
  unsigned int MaxUserClipPlanes;
  unsigned int MaxVertexBlendMatrices;
  unsigned int MaxVertexBlendMatrixIndex;
  float MaxPointSize;
  unsigned int MaxPrimitiveCount;
  unsigned int MaxVertexIndex;
  unsigned int MaxStreams;
  unsigned int MaxStreamStride;
  unsigned int VertexShaderVersion;
  unsigned int MaxVertexShaderConst;
  unsigned int PixelShaderVersion;
  float MaxPixelShaderValue;
};

/* 2826 */
struct _D3DDISPLAYMODE
{
  unsigned int Width;
  unsigned int Height;
  unsigned int RefreshRate;
  _D3DFORMAT Format;
};

/* 2827 */
struct _D3DDEVICE_CREATION_PARAMETERS
{
  unsigned int AdapterOrdinal;
  _D3DDEVTYPE DeviceType;
  HWND__ *hFocusWindow;
  unsigned int BehaviorFlags;
};

/* 2828 */
struct IDirect3DSurface8
{
  IUnknown baseclass_0;
};

/* 2829 */
struct _D3DPRESENT_PARAMETERS_
{
  unsigned int BackBufferWidth;
  unsigned int BackBufferHeight;
  _D3DFORMAT BackBufferFormat;
  unsigned int BackBufferCount;
  _D3DMULTISAMPLE_TYPE MultiSampleType;
  _D3DSWAPEFFECT SwapEffect;
  HWND__ *hDeviceWindow;
  int Windowed;
  int EnableAutoDepthStencil;
  _D3DFORMAT AutoDepthStencilFormat;
  unsigned int Flags;
  unsigned int FullScreen_RefreshRateInHz;
  unsigned int FullScreen_PresentationInterval;
};

/* 2830 */
struct IDirect3DSwapChain8
{
  IUnknown baseclass_0;
};

/* 2831 */
struct _D3DRASTER_STATUS
{
  int InVBlank;
  unsigned int ScanLine;
};

/* 2832 */
struct _D3DGAMMARAMP
{
  unsigned __int16 red[256];
  unsigned __int16 green[256];
  unsigned __int16 blue[256];
};

/* 2833 */
struct IDirect3DBaseTexture8
{
  IDirect3DResource8 baseclass_0;
};

/* 2834 */
struct IDirect3DTexture8
{
  IDirect3DBaseTexture8 baseclass_0;
};

/* 2835 */
struct IDirect3DVolumeTexture8
{
  IDirect3DBaseTexture8 baseclass_0;
};

/* 2836 */
struct IDirect3DCubeTexture8
{
  IDirect3DBaseTexture8 baseclass_0;
};

/* 2837 */
struct _D3DRECT
{
  int x1;
  int y1;
  int x2;
  int y2;
};

/* 2838 */
struct _D3DMATERIAL8
{
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Ambient;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Emissive;
  float Power;
};

/* 2839 */
struct _D3DLIGHT8
{
  _D3DLIGHTTYPE Type;
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Ambient;
  _D3DVECTOR Position;
  _D3DVECTOR Direction;
  float Range;
  float Falloff;
  float Attenuation0;
  float Attenuation1;
  float Attenuation2;
  float Theta;
  float Phi;
};

/* 2840 */
struct _D3DCLIPSTATUS8
{
  unsigned int ClipUnion;
  unsigned int ClipIntersection;
};

/* 2841 */
struct _D3DRECTPATCH_INFO
{
  unsigned int StartVertexOffsetWidth;
  unsigned int StartVertexOffsetHeight;
  unsigned int Width;
  unsigned int Height;
  unsigned int Stride;
  _D3DBASISTYPE Basis;
  _D3DORDERTYPE Order;
};

/* 2842 */
struct _D3DTRIPATCH_INFO
{
  unsigned int StartVertexOffset;
  unsigned int NumVertices;
  _D3DBASISTYPE Basis;
  _D3DORDERTYPE Order;
};

/* 2843 */
struct _D3DSURFACE_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
  _D3DMULTISAMPLE_TYPE MultiSampleType;
  unsigned int Width;
  unsigned int Height;
};

/* 2844 */
struct _D3DLOCKED_RECT
{
  int Pitch;
  void *pBits;
};

/* 2845 */
struct _D3DVOLUME_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
  unsigned int Width;
  unsigned int Height;
  unsigned int Depth;
};

/* 2846 */
struct IDirect3DVolume8
{
  IUnknown baseclass_0;
};

/* 2847 */
struct _D3DLOCKED_BOX
{
  int RowPitch;
  int SlicePitch;
  void *pBits;
};

/* 2848 */
struct _D3DBOX
{
  unsigned int Left;
  unsigned int Top;
  unsigned int Right;
  unsigned int Bottom;
  unsigned int Front;
  unsigned int Back;
};

/* 2849 */
struct _D3DADAPTER_IDENTIFIER8
{
  char Driver[512];
  char Description[512];
  _LARGE_INTEGER DriverVersion;
  unsigned int VendorId;
  unsigned int DeviceId;
  unsigned int SubSysId;
  unsigned int Revision;
  _GUID DeviceIdentifier;
  unsigned int WHQLLevel;
};

/* 2850 */
struct HMONITOR__
{
  int unused;
};

/* 2851 */
struct std::iterator<std::random_access_iterator_tag,char,int>
{
  char dummy[1];
};

/* 2852 */
struct std::_Ranit<char,int>
{
  std::iterator<std::random_access_iterator_tag,char,int> baseclass_0;
};

/* 2853 */
union $9C1FEE5AC9AD60B35511F68C039876A8
{
  std::_Ranit<char,int> baseclass_0;
  const char *current;
};

/* 2854 */
struct std::reverse_iterator<char const *,char,char const &,char const *,int>
{
  $9C1FEE5AC9AD60B35511F68C039876A8 ___u0;
};

/* 2855 */
union $EA52C1E171FC41B070D03AA2EE47EAF1
{
  std::_Ranit<char,int> baseclass_0;
  char *current;
};

/* 2856 */
struct std::reverse_iterator<char *,char,char &,char *,int>
{
  $EA52C1E171FC41B070D03AA2EE47EAF1 ___u0;
};

/* 2857 */
struct CToolInfo
{
  tagTOOLINFOA baseclass_0;
  char szText[256];
};

/* 2858 */
struct std::iterator<std::random_access_iterator_tag,unsigned short,int>
{
  char dummy[1];
};

/* 2859 */
struct std::_Ranit<unsigned short,int>
{
  std::iterator<std::random_access_iterator_tag,unsigned short,int> baseclass_0;
};

/* 2860 */
union $9334B42014ED3BCE49D34DDBB7A3CD28
{
  std::_Ranit<unsigned short,int> baseclass_0;
  const unsigned __int16 *current;
};

/* 2861 */
struct std::reverse_iterator<unsigned short const *,unsigned short,unsigned short const &,unsigned short const *,int>
{
  $9334B42014ED3BCE49D34DDBB7A3CD28 ___u0;
};

/* 2862 */
union $1DD1B8514B836C98E5617589F7CE5D46
{
  std::_Ranit<unsigned short,int> baseclass_0;
  unsigned __int16 *current;
};

/* 2863 */
struct std::reverse_iterator<unsigned short *,unsigned short,unsigned short &,unsigned short *,int>
{
  $1DD1B8514B836C98E5617589F7CE5D46 ___u0;
};

/* 2864 */
struct std::_Timevec
{
  void *_Ptr;
};

/* 2865 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
};

/* 2866 */
struct exception
{
  exceptionVtbl *vfptr;
  const char *_m_what;
  int _m_doFree;
};

/* 2867 */
struct exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(exception *this, unsigned int);
  const char *(__thiscall *what)(exception *this);
};

/* 2868 */
struct std::runtime_error
{
  exception baseclass_0;
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/* 2869 */
struct std::ios_base::failure
{
  std::runtime_error baseclass_0;
};

/* 2870 */
struct std::ios_base::Init
{
  char dummy[1];
};

/* 2871 */
struct std::output_iterator_tag
{
  char dummy[1];
};

/* 2872 */
struct std::random_access_iterator_tag
{
  std::bidirectional_iterator_tag baseclass_0;
};

/* 2873 */ typedef __int16 OLE_ENABLEDEFAULTBOOL;

/* 2874 */ typedef void *HDC;

/* 2875 */ typedef void *PTR;

/* 2876 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec2Transform)(D3DXVECTOR4 *, D3DXVECTOR2 *const , D3DXMATRIX *const );

/* 2877 */ typedef unsigned __int16 wchar_t;

/* 2878 */ typedef char *LPBYTE;

/* 2879 */ typedef char _To;

/* 2880 */ typedef int openmode;

/* 2881 */ typedef void **PHKEY;

/* 2882 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec3Transform)(D3DXVECTOR4 *, D3DXVECTOR3 *const , D3DXMATRIX *const );

/* 2883 */ typedef int *LPFXPT16DOT16;

/* 2884 */ typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 2885 */ typedef void *HWINSTA;

/* 2886 */ typedef unsigned __int64 *PDWORDLONG;

/* 2887 */ typedef void *LOCALHANDLE;

/* 2888 */ typedef int (__stdcall *FARPROC)();

/* 2889 */ typedef unsigned int DROPEFFECT;

/* 2890 */ typedef char *PTCH;

/* 2891 */ typedef unsigned __int64 *PUINT64;

/* 2892 */ typedef void *HGDIOBJ;

/* 2893 */ typedef unsigned int *PULONG32;

/* 2894 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONW)(unsigned int, unsigned __int16 **);

/* 2895 */ typedef int *PBOOL;

/* 2896 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3Project)(D3DXVECTOR3 *, D3DXVECTOR3 *const , _D3DVIEWPORT8 *const , D3DXMATRIX *const , D3DXMATRIX *const , D3DXMATRIX *const );

/* 2897 */ typedef void *HCURSOR;

/* 2898 */ typedef float FLOAT;

/* 2899 */ typedef char _Bool;

/* 2900 */ typedef char UINT8;

/* 2901 */ typedef char *PINT8;

/* 2902 */ typedef void *HSTMT;

/* 2903 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4Transform)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXMATRIX *const );

/* 2904 */ typedef float SFLOAT;

/* 2905 */ typedef float *PFLOAT;

/* 2906 */ typedef unsigned int UINT;

/* 2907 */ typedef D3DXPLANE *(__stdcall *PFND3DXPlaneFromPoints)(D3DXPLANE *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const );

/* 2908 */ typedef unsigned int *PULONG;

/* 2909 */ typedef int *PINT;

/* 2910 */ typedef void *HRGN;

/* 2911 */ typedef unsigned int EXECUTION_STATE;

/* 2912 */ typedef double LDOUBLE;

/* 2913 */ typedef unsigned int RPC_LENGTH;

/* 2914 */ typedef double SDOUBLE;

/* 2915 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixTranslation)(D3DXMATRIX *, float, float, float);

/* 2916 */ typedef unsigned int FOURCC;

/* 2917 */ typedef int *LPFXPT2DOT30;

/* 2918 */ typedef void *HBRUSH;

/* 2919 */ typedef int LCSCSTYPE;

/* 2920 */ typedef int LCSGAMUTMATCH;

/* 2921 */ typedef int (__stdcall *HOOKPROC)();

/* 2922 */ typedef unsigned int COLORREF;

/* 2923 */ typedef unsigned __int16 *PWCHAR;

/* 2924 */ typedef char _E;

/* 2925 */ typedef unsigned int (__stdcall *PFNGETFILEVERSIONINFOSIZEA)(char *, unsigned int *);

/* 2926 */ typedef unsigned __int64 *PULONGLONG;

/* 2927 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixInverse)(D3DXMATRIX *, float *, D3DXMATRIX *const );

/* 2928 */ typedef unsigned __int16 *PUSHORT;

/* 2929 */ typedef int iostate;

/* 2930 */ typedef int (__stdcall *ICMENUMPROCA)(char *, int);

/* 2931 */ typedef int (__stdcall *ENUMRESTYPEPROC)();

/* 2932 */ typedef int (__stdcall *PFNGETFILEVERSIONINFOA)(char *, unsigned int, unsigned int, void *);

/* 2933 */ typedef __int16 INT16;

/* 2934 */ typedef unsigned int *PSECURITY_INFORMATION;

/* 2935 */ typedef int _off_t;

/* 2936 */ typedef int LRESULT;

/* 2937 */ typedef int HRESULT;

/* 2938 */ typedef unsigned int *PKAFFINITY;

/* 2939 */ typedef int (__stdcall *CODEPAGE_ENUMPROCW)();

/* 2940 */ typedef unsigned int UDWORD;

/* 2941 */ typedef unsigned int *PDWORD;

/* 2942 */ typedef int SDWORD;

/* 2943 */ typedef unsigned int LCTYPE;

/* 2944 */ typedef unsigned int *PDWORD32;

/* 2945 */ typedef __int64 LONG64;

/* 2946 */ typedef unsigned int RPCOLEDATAREP;

/* 2947 */ typedef void *WIN_TRUST_SUBJECT;

/* 2948 */ typedef char *va_list;

/* 2949 */ typedef __int16 HALF_PTR;

/* 2950 */ typedef unsigned int RVA;

/* 2951 */ typedef __int16 open_mode;

/* 2952 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4Cross)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const );

/* 2953 */ typedef void (__stdcall *PFND3DXQuaternionToAxisAngle)(D3DXQUATERNION *const , D3DXVECTOR3 *, float *);

/* 2954 */ typedef void *HACCEL;

/* 2955 */ typedef char _TCHAR;

/* 2956 */ typedef void *handle_t;

/* 2957 */ typedef char *PTCHAR;

/* 2958 */ typedef __int16 SQLRETURN;

/* 2959 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixMultiplyTranspose)(D3DXMATRIX *, D3DXMATRIX *const , D3DXMATRIX *const );

/* 2960 */ typedef unsigned int *LPCOLORREF;

/* 2961 */ typedef void (__stdcall *MSGBOXCALLBACK)(tagHELPINFO *);

/* 2962 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionBaryCentric)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , float, float);

/* 2963 */ typedef int FXPT16DOT16;

/* 2964 */ typedef char BYTE;

/* 2965 */ typedef char byte;

/* 2966 */ typedef int GET_FILEEX_INFO_LEVELS;

/* 2967 */ typedef void *HPEN;

/* 2968 */ typedef void *PVOID;

/* 2969 */ typedef unsigned __int16 OLECHAR;

/* 2970 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionRotationMatrix)(D3DXQUATERNION *, D3DXMATRIX *const );

/* 2971 */ typedef unsigned int UINT32;

/* 2972 */ typedef int *PINT32;

/* 2973 */ typedef int (__stdcall *ENHMFENUMPROC)(void *, tagHANDLETABLE *, tagENHMETARECORD *, int, int);

/* 2974 */ typedef unsigned int MCIERROR;

/* 2975 */ typedef int (__stdcall *MFENUMPROC)(void *, tagHANDLETABLE *, tagMETARECORD *, int, int);

/* 2976 */ typedef unsigned int SERVICETYPE;

/* 2977 */ typedef int (__stdcall *LINEDDAPROC)();

/* 2978 */ typedef int (__stdcall *DATEFMT_ENUMPROCA)();

/* 2979 */ typedef int (__stdcall *DATEFMT_ENUMPROCW)();

/* 2980 */ typedef int DISPID;

/* 2981 */ typedef unsigned int key_type;

/* 2982 */ typedef char *PUCHAR;

/* 2983 */ typedef unsigned __int64 DWORDLONG;

/* 2984 */ typedef int (__stdcall *LOCALE_ENUMPROCA)();

/* 2985 */ typedef __int16 OLE_CANCELBOOL;

/* 2986 */ typedef int LPARAM;

/* 2987 */ typedef void *LPCVOID;

/* 2988 */ typedef unsigned int (__cdecl *PQUERYHANDLER)(void *, val_context *, unsigned int, void *, unsigned int *, unsigned int);

/* 2989 */ typedef unsigned __int16 *PWCH;

/* 2990 */ typedef int *LPINT;

/* 2991 */ typedef unsigned int WPARAM;

/* 2992 */ typedef int INT32;

/* 2993 */ typedef unsigned int MMVERSION;

/* 2994 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionMultiply)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const );

/* 2995 */ typedef int off_type;

/* 2996 */ typedef char *PBOOLEAN;

/* 2997 */ typedef void *SC_LOCK;

/* 2998 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationQuaternion)(D3DXMATRIX *, D3DXQUATERNION *const );

/* 2999 */ typedef __int64 GROUPID;

/* 3000 */ typedef char SQLDECIMAL;

/* 3001 */ typedef unsigned int *LPUINT;

/* 3002 */ typedef __int64 LONGLONG;

/* 3003 */ typedef int (__stdcall *DRAWSTATEPROC)();

/* 3004 */ typedef char *PTBYTE;

/* 3005 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2TransformNormal)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXMATRIX *const );

/* 3006 */ typedef int (__stdcall *WNDENUMPROC)();

/* 3007 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3TransformNormal)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXMATRIX *const );

/* 3008 */ typedef __int64 *PLONGLONG;

/* 3009 */ typedef unsigned __int64 ULONGLONG;

/* 3010 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3Normalize)(D3DXVECTOR3 *, D3DXVECTOR3 *const );

/* 3011 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationAxis)(D3DXMATRIX *, D3DXVECTOR3 *const , float);

/* 3012 */ typedef int (__stdcall *CALINFO_ENUMPROCA)();

/* 3013 */ typedef int streamsize;

/* 3014 */ typedef unsigned int HANDLE_PTR;

/* 3015 */ typedef char *LPCH;

/* 3016 */ typedef unsigned __int16 SQLUSMALLINT;

/* 3017 */ typedef int (__stdcall *CALINFO_ENUMPROCW)();

/* 3018 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2Normalize)(D3DXVECTOR2 *, D3DXVECTOR2 *const );

/* 3019 */ typedef unsigned int SECURITY_INFORMATION;

/* 3020 */ typedef __int16 mask;

/* 3021 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3TransformCoord)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXMATRIX *const );

/* 3022 */ typedef void *HGLOBAL;

/* 3023 */ typedef void **LPHANDLE;

/* 3024 */ typedef unsigned int dev_t;

/* 3025 */ typedef unsigned __int16 wint_t;

/* 3026 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2TransformCoord)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXMATRIX *const );

/* 3027 */ typedef void *PVOID64;

/* 3028 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4Normalize)(D3DXVECTOR4 *, D3DXVECTOR4 *const );

/* 3029 */ typedef int (__stdcall *TIMERPROC)();

/* 3030 */ typedef __int64 *PINT64;

/* 3031 */ typedef unsigned __int64 UINT64;

/* 3032 */ typedef D3DXPLANE *(__stdcall *PFND3DXPlaneTransform)(D3DXPLANE *, D3DXPLANE *const , D3DXMATRIX *const );

/* 3033 */ typedef unsigned __int16 ATOM;

/* 3034 */ typedef __int16 SQLSMALLINT;

/* 3035 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3CatmullRom)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float);

/* 3036 */ typedef int *PSCODE;

/* 3037 */ typedef unsigned __int64 SQLUBIGINT;

/* 3038 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2CatmullRom)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float);

/* 3039 */ typedef __int16 SSHORT;

/* 3040 */ typedef unsigned int *iterator;

/* 3041 */ typedef __int16 *PSHORT;

/* 3042 */ typedef unsigned __int16 WORD;

/* 3043 */ typedef unsigned __int16 USHORT;

/* 3044 */ typedef int EXCEPTION_DISPOSITION;

/* 3045 */ typedef int (__stdcall *LOCALE_ENUMPROCW)();

/* 3046 */ typedef unsigned __int16 FSHORT;

/* 3047 */ typedef void (__stdcall *PFND3DXQuaternionSquadSetup)(D3DXQUATERNION *, D3DXQUATERNION *, D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const );

/* 3048 */ typedef unsigned int HFSM;

/* 3049 */ typedef unsigned int *PUINT32;

/* 3050 */ typedef int MEMBERID;

/* 3051 */ typedef void *LPVOID;

/* 3052 */ typedef int SHANDLE_PTR;

/* 3053 */ typedef char SQLTIME;

/* 3054 */ typedef int off_t;

/* 3055 */ typedef unsigned __int16 *LPWORD;

/* 3056 */ typedef void *HFONT;

/* 3057 */ typedef int LONG;

/* 3058 */ typedef int *LPLONG;

/* 3059 */ typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 3060 */ typedef unsigned int CALID;

/* 3061 */ typedef int (__stdcall *EDITWORDBREAKPROCW)();

/* 3062 */ typedef float OLE_YPOS_CONTAINER;

/* 3063 */ typedef float OLE_XPOS_CONTAINER;

/* 3064 */ typedef int time_t;

/* 3065 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4CatmullRom)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float);

/* 3066 */ typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 3067 */ typedef unsigned __int64 *PULONG64;

/* 3068 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationYawPitchRoll)(D3DXMATRIX *, float, float, float);

/* 3069 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionNormalize)(D3DXQUATERNION *, D3DXQUATERNION *const );

/* 3070 */ typedef char CHAR;

/* 3071 */ typedef unsigned int OLE_HANDLE;

/* 3072 */ typedef void **PHANDLE;

/* 3073 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixAffineTransformation)(D3DXMATRIX *, float, D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const );

/* 3074 */ typedef int (__stdcall *WINSTAENUMPROCA)();

/* 3075 */ typedef unsigned int D3DMATERIALHANDLE;

/* 3076 */ typedef unsigned int *PUINT;

/* 3077 */ typedef char SQLNUMERIC;

/* 3078 */ typedef int (__stdcall *ENUMRESNAMEPROC)();

/* 3079 */ typedef unsigned int OLE_COLOR;

/* 3080 */ typedef int (__stdcall *WINSTAENUMPROCW)();

/* 3081 */ typedef __int64 INT64;

/* 3082 */ typedef char SQLTIMESTAMP;

/* 3083 */ typedef unsigned __int16 FILEOP_FLAGS;

/* 3084 */ typedef unsigned __int16 *LPCLIPFORMAT;

/* 3085 */ typedef void *SQLHDBC;

/* 3086 */ typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 3087 */ typedef int (__stdcall *PROPENUMPROCEXW)();

/* 3088 */ typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONA)(unsigned int, char **);

/* 3089 */ typedef unsigned int *LPD3DMATERIALHANDLE;

/* 3090 */ typedef unsigned __int16 *PUHALF_PTR;

/* 3091 */ typedef int (__stdcall *PROPENUMPROCEXA)();

/* 3092 */ typedef int category;

/* 3093 */ typedef void *HMETAFILE;

/* 3094 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixTranspose)(D3DXMATRIX *, D3DXMATRIX *const );

/* 3095 */ typedef unsigned __int16 UINT16;

/* 3096 */ typedef void *RPC_AUTH_IDENTITY_HANDLE;

/* 3097 */ typedef __int16 *PINT16;

/* 3098 */ typedef void *PMIDL_XMIT_TYPE;

/* 3099 */ typedef unsigned int KSPIN_LOCK;

/* 3100 */ typedef double DOUBLE;

/* 3101 */ typedef char *PSZ;

/* 3102 */ typedef int _St;

/* 3103 */ typedef char *PCH;

/* 3104 */ typedef __int64 USN;

/* 3105 */ typedef unsigned int HELPPOLY;

/* 3106 */ typedef unsigned int size_t;

/* 3107 */ typedef unsigned int SIZE_T;

/* 3108 */ typedef int (__stdcall *ENUMRESLANGPROC)();

/* 3109 */ typedef __int16 VARIANT_BOOL;

/* 3110 */ typedef unsigned int _TINT;

/* 3111 */ typedef int HFILE;

/* 3112 */ typedef unsigned __int64 *PDWORD64;

/* 3113 */ typedef unsigned int *PUINT_PTR;

/* 3114 */ typedef int (__stdcall *ICMENUMPROCW)(unsigned __int16 *, int);

/* 3115 */ typedef D3DXPLANE *(__stdcall *PFND3DXPlaneFromPointNormal)(D3DXPLANE *, D3DXVECTOR3 *const , D3DXVECTOR3 *const );

/* 3116 */ typedef unsigned __int16 *PUINT16;

/* 3117 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixScaling)(D3DXMATRIX *, float, float, float);

/* 3118 */ typedef char SECURITY_CONTEXT_TRACKING_MODE;

/* 3119 */ typedef _CONTEXT *LPCONTEXT;

/* 3120 */ typedef unsigned int HIMC;

/* 3121 */ typedef __int16 SHORT;

/* 3122 */ typedef int (__stdcall *CODEPAGE_ENUMPROCA)();

/* 3123 */ typedef int (__stdcall *PHANDLER_ROUTINE)(unsigned int);

/* 3124 */ typedef unsigned int REGSAM;

/* 3125 */ typedef float OLE_XSIZE_CONTAINER;

/* 3126 */ typedef float OLE_YSIZE_CONTAINER;

/* 3127 */ typedef int ACL_INFORMATION_CLASS;

/* 3128 */ typedef int (__stdcall *FONTENUMPROCA)();

/* 3129 */ typedef int (__stdcall *FONTENUMPROCW)();

/* 3130 */ typedef int LONG32;

/* 3131 */ typedef void *RPC_BINDING_HANDLE;

/* 3132 */ typedef unsigned int D3DMATRIXHANDLE;

/* 3133 */ typedef void *I_RPC_MUTEX;

/* 3134 */ typedef int *PSID_NAME_USE;

/* 3135 */ typedef int (__stdcall *GOBJENUMPROC)();

/* 3136 */ typedef int RPC_STATUS;

/* 3137 */ typedef int (__stdcall *TIMEFMT_ENUMPROCA)();

/* 3138 */ typedef int (__stdcall *TIMEFMT_ENUMPROCW)();

/* 3139 */ typedef unsigned __int16 *NWPSTR;

/* 3140 */ typedef unsigned int UINT_PTR;

/* 3141 */ typedef int *PINT_PTR;

/* 3142 */ typedef unsigned int *PDWORD_PTR;

/* 3143 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3Hermite)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float);

/* 3144 */ typedef int OLE_YPOS_PIXELS;

/* 3145 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2Hermite)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float);

/* 3146 */ typedef int OLE_XPOS_PIXELS;

/* 3147 */ typedef unsigned int *PACCESS_MASK;

/* 3148 */ typedef char _TSCHAR;

/* 3149 */ typedef void (__stdcall *LPHANDLER_FUNCTION)(unsigned int);

/* 3150 */ typedef char INT8;

/* 3151 */ typedef unsigned int CALTYPE;

/* 3152 */ typedef void *_HFILE;

/* 3153 */ typedef unsigned int DWORD;

/* 3154 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4Hermite)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float);

/* 3155 */ typedef unsigned int KAFFINITY;

/* 3156 */ typedef __int16 SWORD;

/* 3157 */ typedef char _TUCHAR;

/* 3158 */ typedef unsigned __int16 *PWORD;

/* 3159 */ typedef unsigned __int16 UWORD;

/* 3160 */ typedef void *HGLRC;

/* 3161 */ typedef unsigned int *LPMONTHDAYSTATE;

/* 3162 */ typedef unsigned int *LPD3DTEXTUREHANDLE;

/* 3163 */ typedef int (__stdcall *ABORTPROC)();

/* 3164 */ typedef void *SQLHDESC;

/* 3165 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionSlerp)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , float);

/* 3166 */ typedef int SECURITY_IMPERSONATION_LEVEL;

/* 3167 */ typedef float *LPD3DVALUE;

/* 3168 */ typedef void *HMODULE;

/* 3169 */ typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 3170 */ typedef char _TXCHAR;

/* 3171 */ typedef unsigned int *PULONG_PTR;

/* 3172 */ typedef void *HUSKEY;

/* 3173 */ typedef unsigned int *PLCID;

/* 3174 */ typedef char *pointer;

/* 3175 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionExp)(D3DXQUATERNION *, D3DXQUATERNION *const );

/* 3176 */ typedef void *PIMAGEHLP_CONTEXT;

/* 3177 */ typedef char u_char;

/* 3178 */ typedef void *RPC_NS_HANDLE;

/* 3179 */ typedef __int16 OLE_OPTEXCLUSIVE;

/* 3180 */ typedef char TBYTE;

/* 3181 */ typedef char *PBYTE;

/* 3182 */ typedef unsigned __int16 UHALF_PTR;

/* 3183 */ typedef __int16 *PHALF_PTR;

/* 3184 */ typedef unsigned int D3DTEXTUREHANDLE;

/* 3185 */ typedef unsigned int *LPDWORD;

/* 3186 */ typedef double SQLDOUBLE;

/* 3187 */ typedef void *HCOLORSPACE;

/* 3188 */ typedef unsigned __int16 int_type;

/* 3189 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionRotationAxis)(D3DXQUATERNION *, D3DXVECTOR3 *const , float);

/* 3190 */ typedef unsigned __int64 ULONG64;

/* 3191 */ typedef unsigned int DWORD_PTR;

/* 3192 */ typedef unsigned int D3DCOLORMODEL;

/* 3193 */ typedef __int64 *PLONG64;

/* 3194 */ typedef unsigned int BOOKMARK;

/* 3195 */ typedef double SQLFLOAT;

/* 3196 */ typedef unsigned __int16 SQLWCHAR;

/* 3197 */ typedef void *SQLPOINTER;

/* 3198 */ typedef int INT;

/* 3199 */ typedef unsigned int LCID;

/* 3200 */ typedef void *HICON;

/* 3201 */ typedef int result;

/* 3202 */ typedef char *HPSTR;

/* 3203 */ typedef char *LPSTR;

/* 3204 */ typedef char *NPSTR;

/* 3205 */ typedef void *HBITMAP;

/* 3206 */ typedef void *PSID;

/* 3207 */ typedef float D3DVALUE;

/* 3208 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3BaryCentric)(D3DXVECTOR3 *, D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , float, float);

/* 3209 */ typedef D3DXPLANE *(__stdcall *PFND3DXPlaneNormalize)(D3DXPLANE *, D3DXPLANE *const );

/* 3210 */ typedef D3DXVECTOR2 *(__stdcall *PFND3DXVec2BaryCentric)(D3DXVECTOR2 *, D3DXVECTOR2 *const , D3DXVECTOR2 *const , D3DXVECTOR2 *const , float, float);

/* 3211 */ typedef unsigned __int16 *LPOLESTR;

/* 3212 */ typedef void *SQLHENV;

/* 3213 */ typedef double DATE;

/* 3214 */ typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 3215 */ typedef int (__stdcall *DESKTOPENUMPROCA)();

/* 3216 */ typedef void *HHOOK;

/* 3217 */ typedef D3DXVECTOR4 *(__stdcall *PFND3DXVec4BaryCentric)(D3DXVECTOR4 *, D3DXVECTOR4 *const , D3DXVECTOR4 *const , D3DXVECTOR4 *const , float, float);

/* 3218 */ typedef char SQLVARCHAR;

/* 3219 */ typedef unsigned int GROUP;

/* 3220 */ typedef int SCODE;

/* 3221 */ typedef __int64 fpos_t;

/* 3222 */ typedef char SQLTCHAR;

/* 3223 */ typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 3224 */ typedef unsigned int u_long;

/* 3225 */ typedef void *HCONTEXT;

/* 3226 */ typedef unsigned int IP_ADDR;

/* 3227 */ typedef unsigned int _dev_t;

/* 3228 */ typedef void *HDWP;

/* 3229 */ typedef int SSIZE_T;

/* 3230 */ typedef unsigned int *PSIZE_T;

/* 3231 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionLn)(D3DXQUATERNION *, D3DXQUATERNION *const );

/* 3232 */ typedef void *PACCESS_TOKEN;

/* 3233 */ typedef unsigned __int16 _Wint_t;

/* 3234 */ typedef void *HDBC;

/* 3235 */ typedef unsigned __int16 VARTYPE;

/* 3236 */ typedef float (__stdcall *PFND3DXMatrixfDeterminant)(D3DXMATRIX *const );

/* 3237 */ typedef unsigned int D3DCOLOR;

/* 3238 */ typedef unsigned __int16 u_short;

/* 3239 */ typedef void *RPC_AUTHZ_HANDLE;

/* 3240 */ typedef unsigned int _fsize_t;

/* 3241 */ typedef int mbstate_t;

/* 3242 */ typedef int INT_PTR;

/* 3243 */ typedef unsigned int MONTHDAYSTATE;

/* 3244 */ typedef float __m128[4];

/* 3245 */ typedef void *HPALETTE;

/* 3246 */ typedef int FXPT2DOT30;

/* 3247 */ typedef void *NDR_CCONTEXT;

/* 3248 */ typedef unsigned int PROPID;

/* 3249 */ typedef void *RPC_SS_THREAD_HANDLE;

/* 3250 */ typedef unsigned int DWORD32;

/* 3251 */ typedef void *HENHMETAFILE;

/* 3252 */ typedef unsigned int error_status_t;

/* 3253 */ typedef void *HDESK;

/* 3254 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionRotationYawPitchRoll)(D3DXQUATERNION *, float, float, float);

/* 3255 */ typedef unsigned int SERVICE_STATUS_HANDLE;

/* 3256 */ typedef int OLE_YSIZE_PIXELS;

/* 3257 */ typedef int OLE_XSIZE_PIXELS;

/* 3258 */ typedef int (__stdcall *PFNVERQUERYVALUEA)(void *, char *, void **, unsigned int *);

/* 3259 */ typedef unsigned int size_type;

/* 3260 */ typedef unsigned __int64 RVA64;

/* 3261 */ typedef int (__stdcall *GRAYSTRINGPROC)();

/* 3262 */ typedef unsigned int SOCKET;

/* 3263 */ typedef void *RPC_IF_HANDLE;

/* 3264 */ typedef void *HINSTANCE;

/* 3265 */ typedef unsigned int u_int;

/* 3266 */ typedef int SQLINTEGER;

/* 3267 */ typedef __int16 RETCODE;

/* 3268 */ typedef unsigned __int16 INTERNET_PORT;

/* 3269 */ typedef unsigned int ACCESS_MASK;

/* 3270 */ typedef char SQLDATE;

/* 3271 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionInverse)(D3DXQUATERNION *, D3DXQUATERNION *const );

/* 3272 */ typedef int (__stdcall *DESKTOPENUMPROCW)();

/* 3273 */ typedef int *PLONG32;

/* 3274 */ typedef unsigned int ULONG32;

/* 3275 */ typedef unsigned __int16 ino_t;

/* 3276 */ typedef unsigned __int16 COLOR16;

/* 3277 */ typedef char *RPC_BUFPTR;

/* 3278 */ typedef void (__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *);

/* 3279 */ typedef int (__stdcall *PROC)();

/* 3280 */ typedef void *HMETAFILEPICT;

/* 3281 */ typedef unsigned int DXFILELOADOPTIONS;

/* 3282 */ typedef unsigned int SQLUINTEGER;

/* 3283 */ typedef void *SQLHSTMT;

/* 3284 */ typedef unsigned __int16 *PWSTR;

/* 3285 */ typedef char *LPCSTR;

/* 3286 */ typedef unsigned __int16 CLIPFORMAT;

/* 3287 */ typedef int LONG_PTR;

/* 3288 */ typedef int TOKEN_INFORMATION_CLASS;

/* 3289 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationZ)(D3DXMATRIX *, float);

/* 3290 */ typedef __int16 io_state;

/* 3291 */ typedef void *HANDLE;

/* 3292 */ typedef __int16 seek_dir;

/* 3293 */ typedef int (__stdcall *WNDPROC)(void *, unsigned int, unsigned int, int);

/* 3294 */ typedef int difference_type;

/* 3295 */ typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 3296 */ typedef unsigned __int16 *LPWCH;

/* 3297 */ typedef unsigned __int16 PRINTEROP_FLAGS;

/* 3298 */ typedef char SQLSCHAR;

/* 3299 */ typedef char *LPTCH;

/* 3300 */ typedef _OVERLAPPED *LPOVERLAPPED;

/* 3301 */ typedef int streamoff;

/* 3302 */ typedef int clock_t;

/* 3303 */ typedef unsigned int _Vbase;

/* 3304 */ typedef int (__stdcall *REGISTERWORDENUMPROCA)(char *, unsigned int, char *, void *);

/* 3305 */ typedef int (__stdcall *REGISTERWORDENUMPROCW)(unsigned __int16 *, unsigned int, unsigned __int16 *, void *);

/* 3306 */ typedef void *SC_HANDLE;

/* 3307 */ typedef char *PTSTR;

/* 3308 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixMultiply)(D3DXMATRIX *, D3DXMATRIX *const , D3DXMATRIX *const );

/* 3309 */ typedef void *HRSRC;

/* 3310 */ typedef unsigned int DXFILEFORMAT;

/* 3311 */ typedef char *PSECURITY_CONTEXT_TRACKING_MODE;

/* 3312 */ typedef void *HOLEMENU;

/* 3313 */ typedef int OLE_YSIZE_HIMETRIC;

/* 3314 */ typedef int OLE_XSIZE_HIMETRIC;

/* 3315 */ typedef void *HINTERNET;

/* 3316 */ typedef void *SQLHANDLE;

/* 3317 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationY)(D3DXMATRIX *, float);

/* 3318 */ typedef unsigned int *LPD3DMATRIXHANDLE;

/* 3319 */ typedef char *PUINT8;

/* 3320 */ typedef unsigned __int16 wctype_t;

/* 3321 */ typedef int OLE_XPOS_HIMETRIC;

/* 3322 */ typedef int OLE_YPOS_HIMETRIC;

/* 3323 */ typedef int *PSSIZE_T;

/* 3324 */ typedef char SQLCHAR;

/* 3325 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXVec3Unproject)(D3DXVECTOR3 *, D3DXVECTOR3 *const , _D3DVIEWPORT8 *const , D3DXMATRIX *const , D3DXMATRIX *const , D3DXMATRIX *const );

/* 3326 */ typedef unsigned int POINTER_64_INT;

/* 3327 */ typedef unsigned int HREFTYPE;

/* 3328 */ typedef void *PSECURITY_DESCRIPTOR;

/* 3329 */ typedef void *HLOCAL;

/* 3330 */ typedef void *HKEY;

/* 3331 */ typedef unsigned __int64 DWORD64;

/* 3332 */ typedef int *PLONG_PTR;

/* 3333 */ typedef int TOKEN_TYPE;

/* 3334 */ typedef unsigned int ULONG_PTR;

/* 3335 */ typedef unsigned int MMRESULT;

/* 3336 */ typedef void *HENV;

/* 3337 */ typedef void *HWND;

/* 3338 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixShadow)(D3DXMATRIX *, D3DXVECTOR4 *const , D3DXPLANE *const );

/* 3339 */ typedef void *I_RPC_HANDLE;

/* 3340 */ typedef int (__stdcall *PROPENUMPROCW)();

/* 3341 */ typedef __int64 SQLBIGINT;

/* 3342 */ typedef int BOOL;

/* 3343 */ typedef char bool;

/* 3344 */ typedef int *LPFONTEVENTS;

/* 3345 */ typedef int (__stdcall *PROPENUMPROCA)();

/* 3346 */ typedef unsigned int MCIDEVICEID;

/* 3347 */ typedef D3DXVECTOR3 *(__stdcall *PFND3DXPlaneIntersectLine)(D3DXVECTOR3 *, D3DXPLANE *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const );

/* 3348 */ typedef int *LPBOOL;

/* 3349 */ typedef tagPOINT *LPPOINT;

/* 3350 */ typedef void *HKL;

/* 3351 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixReflect)(D3DXMATRIX *, D3DXPLANE *const );

/* 3352 */ typedef char SCHAR;

/* 3353 */ typedef char *PCHAR;

/* 3354 */ typedef unsigned __int16 WCHAR;

/* 3355 */ typedef char TCHAR;

/* 3356 */ typedef char UCHAR;

/* 3357 */ typedef char BCHAR;

/* 3358 */ typedef char CCHAR;

/* 3359 */ typedef D3DXQUATERNION *(__stdcall *PFND3DXQuaternionSquad)(D3DXQUATERNION *, D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , D3DXQUATERNION *const , float);

/* 3360 */ typedef char FCHAR;

/* 3361 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixRotationX)(D3DXMATRIX *, float);

/* 3362 */ typedef void *GLOBALHANDLE;

/* 3363 */ typedef unsigned __int16 *LPCWSTR;

/* 3364 */ typedef D3DXMATRIX *(__stdcall *PFND3DXMatrixTransformation)(D3DXMATRIX *, D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const , D3DXVECTOR3 *const , D3DXQUATERNION *const , D3DXVECTOR3 *const );

/* 3365 */ typedef int fmtflags;

/* 3366 */ typedef unsigned __int16 LANGID;

/* 3367 */ typedef char *PSTR;

/* 3368 */ typedef unsigned __int16 _ino_t;

/* 3369 */ typedef unsigned __int16 *LPINTERNET_PORT;

/* 3370 */ typedef unsigned __int16 *BSTR;

/* 3371 */ typedef unsigned int *PKSPIN_LOCK;

/* 3372 */ typedef float SQLREAL;

/* 3373 */ typedef void MENUTEMPLATEA;

/* 3374 */ typedef unsigned __int16 *LPWSTR;

/* 3375 */ typedef void *LPMENUTEMPLATEA;

/* 3376 */ typedef unsigned int FLONG;

/* 3377 */ typedef void *LPMENUTEMPLATEW;

/* 3378 */ typedef void MENUTEMPLATEW;

/* 3379 */ typedef int *PLONG;

/* 3380 */ typedef int SLONG;

/* 3381 */ typedef unsigned int ULONG;

/* 3382 */ typedef char *LPTSTR;

/* 3383 */ typedef int ptrdiff_t;

/* 3384 */ typedef char *LPVIEWSETTINGS;

/* 3385 */ typedef void MENUTEMPLATE;

/* 3386 */ typedef void *LPMENUTEMPLATE;

/* 3387 */ typedef char BOOLEAN;

/* 3388 */ typedef char boolean;

/* 3389 */ typedef int (__stdcall *SENDASYNCPROC)();

/* 3390 */ typedef void *HMENU;

/* 3391 */ typedef int (__stdcall *DLGPROC)();


/* End of file */
